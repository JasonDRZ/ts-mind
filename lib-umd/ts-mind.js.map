{"version":3,"sources":["webpack://TSMind/webpack/universalModuleDefinition","webpack://TSMind/webpack/bootstrap","webpack://TSMind/./src/util/tools.ts","webpack://TSMind/./src/core/index.ts","webpack://TSMind/./src/util/constants.ts","webpack://TSMind/./src/core/node/index.ts","webpack://TSMind/./src/util/dom.ts","webpack://TSMind/./src/util/canvas.ts","webpack://TSMind/./src/core/mind/index.ts","webpack://TSMind/./src/util/index.ts","webpack://TSMind/./src/util/array.ts","webpack://TSMind/./src/core/format/node_array.ts","webpack://TSMind/./src/util/json.ts","webpack://TSMind/./src/util/text.ts","webpack://TSMind/./src/index.ts","webpack://TSMind/./node_modules/tslib/tslib.es6.js","webpack://TSMind/./src/core/provider/data.ts","webpack://TSMind/./src/util/file.ts","webpack://TSMind/./src/util/ajax.ts","webpack://TSMind/./src/util/uuid.ts","webpack://TSMind/./src/core/format/node_tree.ts","webpack://TSMind/./src/core/format/freemind.ts","webpack://TSMind/./src/core/provider/layout.ts","webpack://TSMind/./src/core/provider/view.ts","webpack://TSMind/./src/core/provider/shortcut.ts","webpack://TSMind/./src/core/pugin/index.ts","webpack://TSMind/./src/core/pugin/draggable.ts","webpack://TSMind/./src/core/pugin/screenshot.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFa;AACb;AACA;AACA;AACA,oBAAoB,uBAAutB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7Ka;AACb;AACA,kBAAkB,mBAAO,CAAC,CAAmB;AAC7C,cAAc,mBAAO,CAAC,CAAe;AACrC,aAAa,mBAAO,CAAC,EAAiB;AACtC,eAAe,mBAAO,CAAC,EAAmB;AAC1C,aAAa,mBAAO,CAAC,EAAiB;AACtC,aAAa,mBAAO,CAAC,CAAS;AAC9B,mBAAmB,mBAAO,CAAC,CAAqB;AAChD,iBAAiB,mBAAO,CAAC,EAAqB;AAC9C,cAAc,mBAAO,CAAC,EAAS;AAC/B;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,eAAe;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2BAA2B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,6EAA6E;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,iFAAiF;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,+EAA+E;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,qDAAqD;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,0DAA0D;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,gFAAgF;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB,eAAe,GAAG;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;AC/nBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClDa;AACb;AACA,UAAU,mBAAO,CAAC,CAAI;AACtB;AACA;AACA,+BAA+B,YAAY;AAC3C,oCAAoC,2CAA2C;AAC/E,mCAAmC,kBAAkB;AACrnHa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,yBAAyB,GAAG;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5Fa;AACb;AACA,cAAc,mBAAO,CAAC,CAAkB;AACxC,aAAa,mBAAO,CAAC,CAAY;AACjC,aAAa,mBAAO,CAAC,CAAS;AAC9B,UAAU,mBAAO,CAAC,CAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACraAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACrTa;AACb;AACA,aAAa,mBAAO,CAAC,CAAc;AACnC,eAAe,mBAAO,CAAC,CAAU;AACjC,aAAa,mBAAO,CAAC,EAAQ;AAC7B,aAAa,mBAAO,CAAC,EAAQ;AAC7B,aAAa,mBAAO,CAAC,EAAQ;AAC7B,YAAY,mBAAO,CAAC,CAAO;AAC3B,aAAa,mBAAO,CAAC,EAAQ;AAC7B,aAAa,mBAAO,CAAC,EAAQ;AAC7B,YAAY,mBAAO,CAAC,CAAS;AAC7B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBa;AACb;AACA;;;;;;;;ACFa;AACb;AACA,kBAAkB,mBAAO,CAAC,CAAsB;AAChD,aAAa,mBAAO,CAAC,CAAS;AAC9B,cAAc,mBAAO,CAAC,CAAkB;AACxC,aAAa,mBAAO,CAAC,CAAS;AAC9B,UAAU,mBAAO,CAAC,CAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;;;;;;;ACtJa;AACb;AACA,cAAc,mBAAO,CAAC,CAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;AClCa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTa;AACb;AACA,cAAc,mBAAO,CAAC,EAAO;AAC7B,qBAAqB,mBAAO,CAAC,CAAc;;;;;;;;ACH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;ACzLa;AACb;AACA,cAAc,mBAAO,CAAC,CAAkB;AACxC,mBAAmB,mBAAO,CAAC,CAAsB;AACjD,kBAAkB,mBAAO,CAAC,EAAqB;AAC/C,iBAAiB,mBAAO,CAAC,EAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC/Da;AACb;AACA,cAAc,mBAAO,CAAC,CAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/Ca;AACb;AACA,aAAa,mBAAO,CAAC,EAAQ;AAC7B,cAAc,mBAAO,CAAC,CAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,+BAA+B,YAAY;AAC3C,gCAAgC,gBAAgB;AAChD,kCAAkC,0BAA0B;AAC5D,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,2CAA2C;AAC3C,KAAK;AACL;AACA;AACA;AACA;;;;;;;;ACzEa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTa;AACb;AACA,kBAAkB,mBAAO,CAAC,CAAsB;AAChD,aAAa,mBAAO,CAAC,CAAS;AAC9B,UAAU,mBAAO,CAAC,CAAI;AACtB,aAAa,mBAAO,CAAC,CAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,eAAe;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/Ga;AACb;AACA,kBAAkB,mBAAO,CAAC,CAAsB;AAChD,aAAa,mBAAO,CAAC,CAAS;AAC9B,UAAU,mBAAO,CAAC,CAAI;AACtB,cAAc,mBAAO,CAAC,CAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,8BAA8B;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpKa;AACb;AACA,UAAU,mBAAO,CAAC,CAAI;AACtB,cAAc,mBAAO,CAAC,CAAkB;AACxC;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChwCAAwC,2CAA2C;AACnF,wCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC7Za;AACb;AACA,cAAc,mBAAO,CAAC,CAAkB;AACxC,YAAY,mBAAO,CAAC,CAAgB;AACpC,UAAU,mBAAO,CAAC,CAAI;AACtB,aAAa,mBAAO,CAAC,EAAiB;AACtC,cAAc,mBAAO,CAAC,CAAkB;AACxC,eAAe,mBAAO,CAAC,CAAmB;AAC1C,kBAAkB,mBAAO,CAAC,CAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjoBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,WAAW;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,yBAAywCAAwC,+BAA+B;AACvE;AACA;AACA;AACA,wCAAwC,+BAA+B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+BAA+B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AChgBa;AACb;AACA,YAAY,mBAAO,CAAC,CAAgB;AACpC,cAAc,mBAAO,CAAC,CAAkB;AACxC,UAAU,mBAAO,CAAC,CAAI;AACtB,aAAa,mBAAO,CAAC,CAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACzKa;AACb;AACA,kBAAkB,mBAAO,CAAC,EAAa;AACvC,mBAAmB,mBAAO,CAAC,EAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBa;AACb;AACA,UAAU,mBAAO,CAAC,CAAI;AACtB,cAAc,mBAAO,CAAC,CAAkB;AACxC,kBAAkB,mBAAO,CAAC,CAAsB;AAChD,eAAe,mBAAO,CAAC,CAAmB;AAC1C,YAAY,mBAAO,CAAC,CAAgB;AACpC,aAAa,mBAAO,CAAC,CAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA,aAAa;AACb;AACA,mCAAmC,WAAW;AAC9C;AACA,aAAa;AACb;AACA,mCAAmC,WAAW;AAC9C;AACA,aAAa;AACb;AACA,mCAAmC,WAAW;AAC9C;AACA,aAAa;AACb;AACA,mCAAmC,WAAW;AAC9C;AACA,aAAa;AACb;AACA,mCAAmC,WAAW;AAC9C;AACA,aAAa;AACb;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACpUa;AACb;AACA,UAAU,mBAAO,CAAC,CAAI;AACtB,cAAc,mBAAO,CAAC,CAAkB;AACxC,YAAY,mBAAO,CAAC,CAAgB;AACpC,eAAe,mBAAO,CAAC,CAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD","file":"ts-mind.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TSMind\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TSMind\"] = factory();\n\telse\n\t\troot[\"TSMind\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","\"use strict\";\nexports.__esModule = true;\nexports.$noop = function () {\n    var arg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arg[_i] = arguments[_i];\n    }\n};\nexports.$logger = console || {\n    log: exports.$noop,\n    debug: exports.$noop,\n    error: exports.$noop,\n    warn: exports.$noop,\n    info: exports.$noop\n};\n// NODE Operation\nexports.$doc = window.document;\n// $g=>getElementById\nfunction $elByID(id) {\n    return exports.$doc.getElementById(id);\n}\nexports.$elByID = $elByID;\n// $t=>push-textNode\nfunction $pushText(parent, txt) {\n    if (parent.hasChildNodes()) {\n        parent.firstChild.nodeValue = txt;\n    }\n    else\n        parent.appendChild(exports.$doc.createTextNode(txt));\n}\nexports.$pushText = $pushText;\n// $h=>push-childNode\nfunction $pushChild(parent, child) {\n    if (child instanceof HTMLElement) {\n        parent.innerHTML = \"\";\n        parent.appendChild(child);\n    }\n    else {\n        parent.innerHTML = child;\n    }\n}\nexports.$pushChild = $pushChild;\n// $i=>isElement\nfunction $isEl(el) {\n    return \"nodeType\" in el;\n}\nexports.$isEl = $isEl;\n// To determine whether a string starting with [beg].\nfunction $startWith(str, beg) {\n    return str.slice(0, beg.length) === beg;\n}\nexports.$startWith = $startWith;\n// To determine whether a target is a Function.\nfunction $isFunc(tar) {\n    return typeof tar === \"function\";\n}\nexports.$isFunc = $isFunc;\n// The abbreviation of hasOwnProperty method.\nexports.$hasOwnProperty = Object.prototype.hasOwnProperty;\n// To determine the plain-object.\nfunction $isPlainObject(obj) {\n    // Must be an Object.\n    // Because of IE, we also have to check the presence of the constructor property.\n    // Make sure that DOM nodes and window objects don't pass through, as well\n    if (!obj || toString.call(obj) !== \"[object Object]\" || obj.nodeType || obj.setInterval) {\n        return false;\n    }\n    // Not own constructor property must be Object\n    if (obj.constructor && !exports.$hasOwnProperty.call(obj, \"constructor\") && !exports.$hasOwnProperty.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n        return false;\n    }\n    // Own properties are enumerated firstly, so to speed up,\n    // if last one is own, then all properties are own.\n    var key;\n    for (key in obj) {\n    }\n    return key === undefined || exports.$hasOwnProperty.call(obj, key);\n}\nexports.$isPlainObject = $isPlainObject;\nfunction $extend() {\n    var options;\n    var name;\n    var src;\n    var copy;\n    var copyIsArray;\n    var clone;\n    var target = arguments[0] || {};\n    var i = 1;\n    var length = arguments.length;\n    var deep = false;\n    // Handle a deep copy situation\n    if (typeof target === \"boolean\") {\n        deep = target;\n        // Skip the boolean and the target\n        target = arguments[i] || {};\n        i++;\n    }\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== \"object\" && !$isFunc(target)) {\n        target = {};\n    }\n    // Extend jQuery itself if only one argument is passed\n    if (i === length) {\n        target = this || {};\n        i--;\n    }\n    for (; i < length; i++) {\n        options = arguments[i];\n        // Only deal with non-null/undefined values\n        if (options !== null) {\n            // Extend the base object\n            for (name in options) {\n                if (!!name) {\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    copyIsArray = Array.isArray(copy);\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && ($isPlainObject(copy) || copyIsArray)) {\n                        src = target[name];\n                        // Ensure proper type for the source value\n                        if (copyIsArray && !Array.isArray(src)) {\n                            clone = [];\n                        }\n                        else if (!copyIsArray && !$isPlainObject(src)) {\n                            clone = {};\n                        }\n                        else {\n                            clone = src;\n                        }\n                        copyIsArray = false;\n                        // Never move original objects, clone them\n                        target[name] = $extend(deep, clone, copy);\n                        // Don't bring in undefined values\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n    }\n    // Return the modified object\n    return target;\n}\nexports.$extend = $extend;\n// debounce method\nfunction $debounce(handler, tick) {\n    if (tick === void 0) { tick = 10; }\n    var _timer = null;\n    function _dbce() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _ctx = this;\n        if (_timer) {\n            return;\n        }\n        _timer = setTimeout(function () {\n            handler.apply(_ctx, args);\n            _timer = null;\n        }, tick);\n    }\n    // clear debounce\n    _dbce.clear = function () {\n        clearTimeout(_timer);\n        _timer = null;\n    };\n    return _dbce;\n}\nexports.$debounce = $debounce;\n","\"use strict\";\nexports.__esModule = true;\nvar constants_1 = require(\"../util/constants\");\nvar tools_1 = require(\"../util/tools\");\nvar data_1 = require(\"./provider/data\");\nvar layout_1 = require(\"./provider/layout\");\nvar view_1 = require(\"./provider/view\");\nvar util_1 = require(\"../util\");\nvar node_array_1 = require(\"./format/node_array\");\nvar shortcut_1 = require(\"./provider/shortcut\");\nvar pugin_1 = require(\"./pugin\");\n// global use register\nexports.use = pugin_1.globalUse;\n// mind direction\nexports.TSMindDirectionMap = { left: -1, center: 0, right: 1 };\n// mind event type\nexports.TSMindEventTypeMap = { show: 1, resize: 2, edit: 3, select: 4 };\n// mind core class\nvar TSMind = /** @class */ (function () {\n    function TSMind(options) {\n        var _this = this;\n        // public properties\n        this.options = {\n            container: \"\"\n        };\n        this.mind = null;\n        this.initialized = false;\n        this.event_handles = [];\n        // private plugin list\n        this._plugins = {};\n        this.plugins = {};\n        /**\n         * register private plugin\n         * @param plugin: ITSMPlugin\n         */\n        this.use = function (pname, plugin) {\n            _this._plugins[pname] = plugin;\n        };\n        // initial plugin's main methods\n        this.init_plugins = function (tsm, opts) {\n            var _all_plug = tools_1.$extend({}, _this._plugins, pugin_1.GLOBAl_PLUGIN_LIST);\n            // call plugin in async way, to make sure plugin register no execution-order dependences.\n            setTimeout(function () {\n                for (var pname in _all_plug) {\n                    if (pname)\n                        // 确保Class类型的插件能够成功初始化\n                        _this.plugins[pname] = new _all_plug[pname](tsm, opts);\n                }\n            }, 0);\n        };\n        this.enable_edit = function () {\n            return (_this.options.editable = true);\n        };\n        this.disable_edit = function () {\n            return (_this.options.editable = false);\n        };\n        // call enable_event_handle('dblclick')\n        // options are 'mousedown', 'click', 'dblclick'\n        this.enable_event_handle = function (event_handle) {\n            _this.options.default_event_handle[\"enable_\" + event_handle + \"_handle\"] = true;\n        };\n        // call disable_event_handle('dblclick')\n        // options are 'mousedown', 'click', 'dblclick'\n        this.disable_event_handle = function (event_handle) {\n            _this.options.default_event_handle[\"enable_\" + event_handle + \"_handle\"] = false;\n        };\n        this.get_editable = function () {\n            return _this.options.editable;\n        };\n        this.set_theme = function (theme) {\n            var theme_old = _this.options.theme;\n            _this.options.theme = !!theme ? theme : \"primary\";\n            if (theme_old !== _this.options.theme) {\n                _this.view_provider.reset_theme();\n                _this.view_provider.reset_custom_style();\n            }\n        };\n        this._event_bind = function () {\n            _this.view_provider.add_event(_this, \"mousedown\", _this.mousedown_handle);\n            _this.view_provider.add_event(_this, \"click\", _this.click_handle);\n            _this.view_provider.add_event(_this, \"dblclick\", _this.dblclick_handle);\n        };\n        this.mousedown_handle = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.options.default_event_handle.enable_mousedown_handle) {\n                return;\n            }\n            var element = (e.target || e.srcElement);\n            var nodeid = _this.view_provider.get_binded_nodeid(element);\n            if (!!nodeid) {\n                _this.select_node(nodeid);\n            }\n            else {\n                _this.select_clear();\n            }\n        };\n        this.click_handle = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.options.default_event_handle.enable_click_handle) {\n                return;\n            }\n            var element = (e.target || e.srcElement);\n            var isexpander = _this.view_provider.is_expander(element);\n            if (isexpander) {\n                var nodeid = _this.view_provider.get_binded_nodeid(element);\n                if (!!nodeid) {\n                    _this.toggle_node(nodeid);\n                }\n            }\n        };\n        this.dblclick_handle = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.options.default_event_handle.enable_dblclick_handle) {\n                return;\n            }\n            if (_this.get_editable()) {\n                var element = (e.target || e.srcElement);\n                var nodeid = _this.view_provider.get_binded_nodeid(element);\n                if (!!nodeid) {\n                    _this.begin_edit(nodeid);\n                }\n            }\n        };\n        this.begin_edit = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return false;\n                }\n                else {\n                    return _this.begin_edit(the_node);\n                }\n            }\n            if (_this.get_editable()) {\n                _this.view_provider.edit_node_begin(node);\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable.\");\n                return;\n            }\n        };\n        this.end_edit = function () {\n            _this.view_provider.edit_node_end();\n        };\n        this.toggle_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.toggle_node(the_node);\n                }\n            }\n            if (node.isroot) {\n                return;\n            }\n            _this.view_provider.save_location(node);\n            _this.layout_provider.toggle_node(node);\n            _this.view_provider.relayout();\n            _this.view_provider.restore_location(node);\n        };\n        this.expand_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.expand_node(the_node);\n                }\n            }\n            if (node.isroot) {\n                return;\n            }\n            _this.view_provider.save_location(node);\n            _this.layout_provider.expand_node(node);\n            _this.view_provider.relayout();\n            _this.view_provider.restore_location(node);\n        };\n        this.collapse_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.collapse_node(the_node);\n                }\n            }\n            if (node.isroot) {\n                return;\n            }\n            _this.view_provider.save_location(node);\n            _this.layout_provider.collapse_node(node);\n            _this.view_provider.relayout();\n            _this.view_provider.restore_location(node);\n        };\n        this.expand_all = function () {\n            _this.layout_provider.expand_all();\n            _this.view_provider.relayout();\n        };\n        this.collapse_all = function () {\n            _this.layout_provider.collapse_all();\n            _this.view_provider.relayout();\n        };\n        this.expand_to_depth = function (depth) {\n            _this.layout_provider.expand_to_depth(depth);\n            _this.view_provider.relayout();\n        };\n        this._reset = function () {\n            _this.view_provider.reset();\n            _this.layout_provider.reset();\n            _this.data_provider.reset();\n        };\n        this._show = function (mind) {\n            var m = mind || node_array_1.node_array.example;\n            _this.mind = _this.data_provider.load(m);\n            if (!_this.mind) {\n                tools_1.$logger.error(\"data.load error\");\n                return;\n            }\n            else {\n                tools_1.$logger.debug(\"data.load ok\");\n            }\n            _this.view_provider.load();\n            tools_1.$logger.debug(\"view.load ok\");\n            _this.layout_provider.layout();\n            tools_1.$logger.debug(\"layout.layout ok\");\n            _this.view_provider.show(true);\n            tools_1.$logger.debug(\"view.show ok\");\n            _this.invoke_event_handle(exports.TSMindEventTypeMap.show, { data: [mind] });\n        };\n        this.show = function (mind) {\n            _this._reset();\n            _this._show(mind);\n        };\n        this.get_meta = function () {\n            return {\n                name: _this.mind.name,\n                author: _this.mind.author,\n                version: _this.mind.version\n            };\n        };\n        this.get_data = function (data_format) {\n            if (data_format === void 0) { data_format = \"node_tree\"; }\n            return _this.data_provider.get_data(data_format);\n        };\n        this.get_root = function () {\n            return _this.mind.root;\n        };\n        this.get_node = function (nodeid) {\n            return _this.mind.get_node(nodeid);\n        };\n        this.add_node = function (parent_node, nodeid, topic, data) {\n            if (_this.get_editable()) {\n                var node = _this.mind.add_node(parent_node, nodeid, topic, data);\n                if (!!node) {\n                    _this.view_provider.add_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.view_provider.reset_node_custom_style(node);\n                    _this.expand_node(parent_node);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"add_node\", data: [parent_node.id, nodeid, topic, data], node: nodeid });\n                }\n                return node;\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return null;\n            }\n        };\n        this.insert_node_before = function (node_before, nodeid, topic, data) {\n            if (_this.get_editable()) {\n                var beforeid = util_1[\"default\"].is_node(node_before) ? node_before.id : node_before;\n                var node = _this.mind.insert_node_before(node_before, nodeid, topic, data);\n                if (!!node) {\n                    _this.view_provider.add_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"insert_node_before\", data: [beforeid, nodeid, topic, data], node: nodeid });\n                }\n                return node;\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return null;\n            }\n        };\n        this.insert_node_after = function (node_after, nodeid, topic, data) {\n            if (_this.get_editable()) {\n                var afterid = util_1[\"default\"].is_node(node_after) ? node_after.id : node_after;\n                var node = _this.mind.insert_node_after(node_after, nodeid, topic, data);\n                if (!!node) {\n                    _this.view_provider.add_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"insert_node_after\", data: [afterid, nodeid, topic, data], node: nodeid });\n                }\n                return node;\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return null;\n            }\n        };\n        this.remove_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return false;\n                }\n                else {\n                    return _this.remove_node(the_node);\n                }\n            }\n            if (_this.get_editable()) {\n                if (node.isroot) {\n                    tools_1.$logger.error(\"fail, can not remove root node\");\n                    return false;\n                }\n                var nodeid = node.id;\n                var parentid = node.parent.id;\n                var parent_node = _this.get_node(parentid);\n                parent_node && _this.view_provider.save_location(parent_node);\n                _this.view_provider.remove_node(node);\n                _this.mind.remove_node(node);\n                _this.layout_provider.layout();\n                _this.view_provider.show(false);\n                parent_node && _this.view_provider.restore_location(parent_node);\n                _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"remove_node\", data: [nodeid], node: parentid });\n                return true;\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return false;\n            }\n        };\n        this.update_node = function (nodeid, topic) {\n            if (_this.get_editable()) {\n                if (util_1[\"default\"].text.is_empty(topic)) {\n                    tools_1.$logger.warn(\"fail, topic can not be empty\");\n                    return;\n                }\n                var node = _this.get_node(nodeid);\n                if (!!node) {\n                    if (node.topic === topic) {\n                        tools_1.$logger.info(\"nothing changed\");\n                        _this.view_provider.update_node(node);\n                        return;\n                    }\n                    node.topic = topic;\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"update_node\", data: [nodeid, topic], node: nodeid });\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return;\n            }\n        };\n        this.move_node = function (nodeid, beforeid, parentid, direction) {\n            if (_this.get_editable()) {\n                var node = _this.mind.move_node(nodeid, beforeid, parentid, direction);\n                if (!!node) {\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"move_node\", data: [nodeid, beforeid, parentid, direction], node: nodeid });\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return;\n            }\n        };\n        this.select_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.select_node(the_node);\n                }\n            }\n            if (!_this.layout_provider.is_visible(node)) {\n                return;\n            }\n            _this.mind.selected = node;\n            _this.view_provider.select_node(node);\n        };\n        this.get_selected_node = function () {\n            if (!!_this.mind) {\n                return _this.mind.selected;\n            }\n            else {\n                return null;\n            }\n        };\n        this.select_clear = function () {\n            if (!!_this.mind) {\n                _this.mind.selected = null;\n                _this.view_provider.select_clear();\n            }\n        };\n        this.is_node_visible = function (node) {\n            return _this.layout_provider.is_visible(node);\n        };\n        this.find_node_before = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.find_node_before(the_node);\n                }\n            }\n            if (node.isroot) {\n                return null;\n            }\n            var n = null;\n            if (node.parent.isroot) {\n                var c = node.parent.children;\n                var prev = null;\n                for (var _i = 0, c_1 = c; _i < c_1.length; _i++) {\n                    var ni = c_1[_i];\n                    if (node.direction === ni.direction) {\n                        if (node.id === ni.id) {\n                            n = prev;\n                        }\n                        prev = ni;\n                    }\n                }\n            }\n            else {\n                n = _this.mind.get_node_before(node);\n            }\n            return n;\n        };\n        this.find_node_after = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.find_node_after(the_node);\n                }\n            }\n            if (node.isroot) {\n                return null;\n            }\n            var n = null;\n            if (node.parent.isroot) {\n                var c = node.parent.children;\n                var getthis = false;\n                for (var _i = 0, c_2 = c; _i < c_2.length; _i++) {\n                    var ni = c_2[_i];\n                    if (node.direction === ni.direction) {\n                        if (getthis) {\n                            n = ni;\n                            break;\n                        }\n                        if (node.id === ni.id) {\n                            getthis = true;\n                        }\n                    }\n                }\n            }\n            else {\n                n = _this.mind.get_node_after(node);\n            }\n            return n;\n        };\n        this.set_node_color = function (nodeid, bgcolor, fgcolor) {\n            if (_this.get_editable()) {\n                var node = _this.mind.get_node(nodeid);\n                if (!!node) {\n                    if (!!bgcolor) {\n                        node.data[\"background-color\"] = bgcolor;\n                    }\n                    if (!!fgcolor) {\n                        node.data[\"foreground-color\"] = fgcolor;\n                    }\n                    _this.view_provider.reset_node_custom_style(node);\n                    return true;\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n            }\n            return false;\n        };\n        this.set_node_font_style = function (nodeid, size, weight, style) {\n            if (_this.get_editable()) {\n                var node = _this.mind.get_node(nodeid);\n                if (!!node) {\n                    if (!!size) {\n                        node.data[\"font-size\"] = size;\n                    }\n                    if (!!weight) {\n                        node.data[\"font-weight\"] = weight;\n                    }\n                    if (!!style) {\n                        node.data[\"font-style\"] = style;\n                    }\n                    _this.view_provider.reset_node_custom_style(node);\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    return true;\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n            }\n            return false;\n        };\n        this.set_node_background_image = function (nodeid, image, width, height, rotation) {\n            if (_this.get_editable()) {\n                var node = _this.mind.get_node(nodeid);\n                if (!!node) {\n                    if (!!image) {\n                        node.data[\"background-image\"] = image;\n                    }\n                    if (!!width) {\n                        node.data.width = width;\n                    }\n                    if (!!height) {\n                        node.data.height = height;\n                    }\n                    if (!!rotation) {\n                        node.data[\"background-rotation\"] = rotation;\n                    }\n                    _this.view_provider.reset_node_custom_style(node);\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    return true;\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n            }\n            return false;\n        };\n        this.set_node_background_rotation = function (nodeid, rotation) {\n            if (_this.get_editable()) {\n                var node = _this.mind.get_node(nodeid);\n                if (!!node) {\n                    if (!node.data[\"background-image\"]) {\n                        tools_1.$logger.error(\"fail, only can change rotation angle of node with background image\");\n                        return false;\n                    }\n                    node.data[\"background-rotation\"] = rotation;\n                    _this.view_provider.reset_node_custom_style(node);\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    return true;\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n            }\n            return false;\n        };\n        this.resize = function () {\n            _this.view_provider.resize();\n        };\n        // callback(type ,data)\n        this.add_event_listener = function (callback) {\n            if (callback === void 0) { callback = function () { return void 0; }; }\n            if (typeof callback === \"function\") {\n                _this.event_handles.push(callback);\n            }\n        };\n        this.invoke_event_handle = function (type, data) {\n            var j = _this;\n            window.setTimeout(function () {\n                j._invoke_event_handle(type, data);\n            }, 0);\n        };\n        this._invoke_event_handle = function (type, data) {\n            var l = _this.event_handles.length;\n            for (var i = 0; i < l; i++) {\n                _this.event_handles[i](type, data);\n            }\n        };\n        if (!options.container) {\n            throw Error(\"the options.container should not be null or empty.\");\n        }\n        this.options = tools_1.$extend(true, constants_1.DEFAULT_OPTIONS, options);\n        if (this.initialized) {\n            return;\n        }\n        this.initialized = true;\n        var opts = this.options;\n        var opts_layout = {\n            mode: opts.mode,\n            hspace: opts.layout.hspace,\n            vspace: opts.layout.vspace,\n            pspace: opts.layout.pspace\n        };\n        var opts_view = {\n            container: opts.container,\n            support_html: opts.support_html,\n            hmargin: opts.view.hmargin,\n            vmargin: opts.view.vmargin,\n            line_width: opts.view.line_width,\n            line_color: opts.view.line_color\n        };\n        // create instance of function provider\n        this.data_provider = new data_1.data_provider(this);\n        this.layout_provider = new layout_1[\"default\"](this, opts_layout);\n        this.view_provider = new view_1[\"default\"](this, opts_view);\n        this.shortcut_provider = new shortcut_1[\"default\"](this, opts.shortcut);\n        this._event_bind();\n        this.init_plugins(this, options);\n    }\n    // static properties\n    TSMind.version = constants_1.__version__;\n    TSMind.direction = exports.TSMindDirectionMap;\n    TSMind.event_type = exports.TSMindEventTypeMap;\n    return TSMind;\n}());\nexports.TSMind = TSMind;\nexports[\"default\"] = TSMind;\n","\"use strict\";\nexports.__esModule = true;\nexports.__name__ = \"TSMind\";\n// library version\nexports.__version__ = \"0.5.0\";\n// authores\nexports.__authores__ = [\"1071115676@qq.com\", \"hizzgdev@163.com\"];\nexports.DEFAULT_OPTIONS = {\n    container: \"\",\n    editable: false,\n    theme: \"primary\",\n    mode: \"full\",\n    support_html: true,\n    view: {\n        hmargin: 100,\n        vmargin: 50,\n        line_width: 2,\n        line_color: \"#555\"\n    },\n    layout: {\n        hspace: 30,\n        vspace: 20,\n        pspace: 13\n    },\n    default_event_handle: {\n        enable_mousedown_handle: true,\n        enable_click_handle: true,\n        enable_dblclick_handle: true\n    },\n    shortcut: {\n        enable: true,\n        handles: {},\n        mapping: {\n            addchild: 45,\n            addbrother: 13,\n            editnode: 113,\n            delnode: 46,\n            toggle: 32,\n            left: 37,\n            up: 38,\n            right: 39,\n            down: 40 // Down\n        }\n    }\n};\n// custom node names\nexports.TSM_Node_Names = {\n    nodes: \"tsmnodes\",\n    node: \"tsmnode\",\n    fold: \"tsmfold\"\n};\n","\"use strict\";\nexports.__esModule = true;\nvar __1 = require(\"..\");\nvar TSM_node = /** @class */ (function () {\n    function TSM_node(sId, iIndex, sTopic, oData, bIsRoot, oParent, eDirection, bExpanded) {\n        if (oData === void 0) { oData = {}; }\n        if (eDirection === void 0) { eDirection = __1.TSMindDirectionMap.right; }\n        if (bExpanded === void 0) { bExpanded = true; }\n        var _this = this;\n        this.id = \"\";\n        this.index = 0;\n        this.topic = \"\";\n        this.data = {};\n        this.isroot = true;\n        this.direction = __1.TSMindDirectionMap.left;\n        this.expanded = true;\n        this.children = [];\n        this.expands = {};\n        this.width = 0;\n        this.height = 0;\n        this.view_data = {\n            element: null,\n            expander: null,\n            abs_x: 0,\n            abs_y: 0,\n            width: 0,\n            height: 0,\n            _saved_location: {\n                x: 0,\n                y: 0\n            }\n        };\n        this.layout_data = {\n            direction: __1.TSMindDirectionMap.right,\n            side_index: 0,\n            offset_x: 0,\n            offset_y: 0,\n            outer_height: 0,\n            left_nodes: [],\n            right_nodes: [],\n            outer_height_left: 0,\n            outer_height_right: 0,\n            visible: true,\n            _offset_: {\n                x: 0,\n                y: 0\n            }\n        };\n        this.get_location = function () {\n            var vd = _this.view_data;\n            return {\n                x: vd.abs_x || 0,\n                y: vd.abs_y || 0\n            };\n        };\n        this.get_size = function () {\n            var vd = _this.view_data;\n            return {\n                w: vd.width || 0,\n                h: vd.height || 0\n            };\n        };\n        this.id = sId;\n        this.index = iIndex;\n        this.topic = sTopic;\n        this.data = oData;\n        this.isroot = bIsRoot;\n        this.parent = oParent;\n        this.direction = eDirection;\n        this.expanded = bExpanded;\n    }\n    TSM_node.inherited = function (pnode, node) {\n        if (!!pnode && !!node) {\n            if (pnode.id === node.id) {\n                return true;\n            }\n            if (pnode.isroot) {\n                return true;\n            }\n            var pid = pnode.id;\n            var p = node;\n            while (!p.isroot) {\n                p = p.parent;\n                if (p.id === pid) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    TSM_node.compare = function (node1, node2) {\n        // '-1' is alwary the last\n        var r = 0;\n        var i1 = node1.index;\n        var i2 = node2.index;\n        if (i1 >= 0 && i2 >= 0) {\n            r = i1 - i2;\n        }\n        else if (i1 === -1 && i2 === -1) {\n            r = 0;\n        }\n        else if (i1 === -1) {\n            r = 1;\n        }\n        else if (i2 === -1) {\n            r = -1;\n        }\n        else {\n            r = 0;\n        }\n        // logger.debug(i1+' <> '+i2+'  =  '+r);\n        return r;\n    };\n    return TSM_node;\n}());\nexports.TSM_node = TSM_node;\n","\"use strict\";\nexports.__esModule = true;\nexports.dom = {\n    // target,eventType,handler\n    add_event: function (target, event, call) {\n        target.addEventListener(event, call, false);\n    },\n    css: function (cstyle, property_name) {\n        return cstyle.getPropertyValue(property_name);\n    },\n    is_visible: function (cstyle) {\n        var visibility = exports.dom.css(cstyle, \"visibility\");\n        var display = exports.dom.css(cstyle, \"display\");\n        exports.dom.css(cstyle, \"backface-visibility\");\n        return visibility !== \"hidden\" && display !== \"none\";\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nexports.canvas = {\n    bezierto: function (ctx, x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(x1 + ((x2 - x1) * 2) / 3, y1, x1, y2, x2, y2);\n        ctx.stroke();\n    },\n    lineto: function (ctx, x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n    },\n    clear: function (ctx, x, y, w, h) {\n        ctx.clearRect(x, y, w, h);\n    },\n    rect: function (ctx, x, y, w, h, r) {\n        if (w < 2 * r)\n            r = w / 2;\n        if (h < 2 * r)\n            r = h / 2;\n        ctx.moveTo(x + r, y);\n        ctx.arcTo(x + w, y, x + w, y + h, r);\n        ctx.arcTo(x + w, y + h, x, y + h, r);\n        ctx.arcTo(x, y + h, x, y, r);\n        ctx.arcTo(x, y, x + w, y, r);\n    },\n    text_multiline: function (ctx, text, x, y, w, h, lineheight) {\n        var line = \"\";\n        var text_len = text.length;\n        var chars = text.split(\"\");\n        var test_line = null;\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\";\n        for (var i = 0; i < text_len; i++) {\n            test_line = line + chars[i];\n            if (ctx.measureText(test_line).width > w && i > 0) {\n                ctx.fillText(line, x, y);\n                line = chars[i];\n                y += lineheight;\n            }\n            else {\n                line = test_line;\n            }\n        }\n        ctx.fillText(line, x, y);\n    },\n    text_ellipsis: function (ctx, text, x, y, w, h) {\n        var center_y = y + h / 2;\n        text = exports.canvas.fittingString(ctx, text, w);\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(text, x, center_y, w);\n    },\n    fittingString: function (ctx, text, max_width) {\n        var width = ctx.measureText(text).width;\n        var ellipsis = \"…\";\n        var ellipsis_width = ctx.measureText(ellipsis).width;\n        if (width <= max_width || width <= ellipsis_width) {\n            return text;\n        }\n        else {\n            var len = text.length;\n            while (width >= max_width - ellipsis_width && len-- > 0) {\n                text = text.substring(0, len);\n                width = ctx.measureText(text).width;\n            }\n            return text + ellipsis;\n        }\n    },\n    image: function (ctx, backgroundUrl, x, y, w, h, r, rotation, callback) {\n        if (callback === void 0) { callback = function () { }; }\n        var img = new Image();\n        img.onload = function () {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.save();\n            ctx.beginPath();\n            exports.canvas.rect(ctx, 0, 0, w, h, r);\n            ctx.closePath();\n            ctx.clip();\n            ctx.translate(w / 2, h / 2);\n            ctx.rotate((rotation * Math.PI) / 180);\n            ctx.drawImage(img, -w / 2, -h / 2);\n            ctx.restore();\n            ctx.restore();\n            callback();\n        };\n        img.src = backgroundUrl;\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"../../util/tools\");\nvar util_1 = require(\"../../util\");\nvar node_1 = require(\"../node\");\nvar __1 = require(\"..\");\nvar TSM_mind = /** @class */ (function () {\n    function TSM_mind() {\n        var _this = this;\n        this.name = null;\n        this.author = null;\n        this.version = null;\n        this.root = null;\n        this.selected = null;\n        this.nodes = {};\n        this.get_node = function (nodeid) {\n            if (nodeid in _this.nodes) {\n                return _this.nodes[nodeid];\n            }\n            else {\n                tools_1.$logger.warn(\"the node[id=\" + nodeid + \"] can not be found\");\n                return null;\n            }\n        };\n        this.set_root = function (nodeid, topic, data) {\n            if (_this.root == null) {\n                _this.root = new node_1.TSM_node(nodeid, 0, topic, data, true);\n                _this._put_node(_this.root);\n            }\n            else {\n                tools_1.$logger.error(\"root node is already exist\");\n            }\n        };\n        this.add_node = function (parent_node, nodeid, topic, data, idx, direction, expanded) {\n            if (idx === void 0) { idx = -1; }\n            if (!util_1[\"default\"].is_node(parent_node)) {\n                var the_parent_node = _this.get_node(parent_node);\n                if (!the_parent_node) {\n                    tools_1.$logger.error(\"the parent_node[id=\" + parent_node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.add_node(the_parent_node, nodeid, topic, data, idx, direction, expanded);\n                }\n            }\n            var nodeindex = idx;\n            var node = null;\n            parent_node = parent_node;\n            if (parent_node.isroot) {\n                var d = __1[\"default\"].direction.right;\n                if (isNaN(direction)) {\n                    var children = parent_node.children;\n                    var children_len = children.length;\n                    var r = 0;\n                    for (var i = 0; i < children_len; i++) {\n                        if (children[i].direction === __1[\"default\"].direction.left) {\n                            r--;\n                        }\n                        else {\n                            r++;\n                        }\n                    }\n                    d = children_len > 1 && r > 0 ? __1[\"default\"].direction.left : __1[\"default\"].direction.right;\n                }\n                else {\n                    d = direction !== __1[\"default\"].direction.left ? __1[\"default\"].direction.right : __1[\"default\"].direction.left;\n                }\n                node = new node_1.TSM_node(nodeid, nodeindex, topic, data, false, parent_node, d, expanded);\n            }\n            else {\n                node = new node_1.TSM_node(nodeid, nodeindex, topic, data, false, parent_node, parent_node.direction, expanded);\n            }\n            if (_this._put_node(node)) {\n                parent_node.children.push(node);\n                _this._reindex(parent_node);\n            }\n            else {\n                tools_1.$logger.error(\"fail, the nodeid '\" + node.id + \"' has been already exist.\");\n                node = null;\n            }\n            return node;\n        };\n        this.insert_node_before = function (node_before, nodeid, topic, data) {\n            if (!util_1[\"default\"].is_node(node_before)) {\n                var the_node_before = _this.get_node(node_before);\n                if (!the_node_before) {\n                    tools_1.$logger.error(\"the node_before[id=\" + node_before + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.insert_node_before(the_node_before, nodeid, topic, data);\n                }\n            }\n            node_before = node_before;\n            var node_index = node_before.index - 0.5;\n            return node_before.parent ? _this.add_node(node_before.parent, nodeid, topic, data, node_index) : null;\n        };\n        this.get_node_before = function (node) {\n            if (typeof node === \"string\") {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.get_node_before(the_node);\n                }\n            }\n            if (node.isroot) {\n                return null;\n            }\n            var idx = node.index - 2;\n            if (idx >= 0) {\n                return node.parent.children[idx] || null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.insert_node_after = function (node_after, nodeid, topic, data) {\n            if (typeof node_after === \"string\") {\n                var the_node_after = _this.get_node(node_after);\n                if (!the_node_after) {\n                    tools_1.$logger.error(\"the node_after[id=\" + node_after + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.insert_node_after(the_node_after, nodeid, topic, data);\n                }\n            }\n            var node_index = node_after.index + 0.5;\n            return node_after.parent ? _this.add_node(node_after.parent, nodeid, topic, data, node_index) : null;\n        };\n        this.get_node_after = function (node) {\n            if (typeof node === \"string\") {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.get_node_after(the_node);\n                }\n            }\n            if (node.isroot) {\n                return null;\n            }\n            var idx = node.index;\n            var brothers = node.parent.children || null;\n            if (brothers.length >= idx) {\n                return node.parent.children[idx] || null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.move_node = function (node, beforeid, parentid, direction) {\n            if (typeof node === \"string\") {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.move_node(the_node, beforeid, parentid, direction);\n                }\n            }\n            if (!parentid) {\n                parentid = node.parent.id;\n            }\n            return _this._move_node(node, beforeid, parentid, direction);\n        };\n        this._flow_node_direction = function (node, direction) {\n            if (typeof direction === \"undefined\") {\n                direction = node.direction;\n            }\n            else {\n                node.direction = direction;\n            }\n            var len = node.children.length;\n            while (len--) {\n                _this._flow_node_direction(node.children[len], direction);\n            }\n        };\n        this._move_node_internal = function (node, beforeid) {\n            if (!!node && !!beforeid) {\n                if (beforeid === \"_last_\") {\n                    node.index = -1;\n                    _this._reindex(node.parent);\n                }\n                else if (beforeid === \"_first_\") {\n                    node.index = 0;\n                    _this._reindex(node.parent);\n                }\n                else {\n                    var node_before = !!beforeid ? _this.get_node(beforeid) : null;\n                    if (node_before != null && node_before.parent != null && node_before.parent.id === node.parent.id) {\n                        node.index = node_before.index - 0.5;\n                        _this._reindex(node.parent);\n                    }\n                }\n            }\n            return node;\n        };\n        this._move_node = function (node, beforeid, parentid, direction) {\n            if (!!node && !!parentid) {\n                if (node.parent.id !== parentid) {\n                    // remove from parent's children\n                    var sibling = node.parent.children;\n                    var si = sibling.length;\n                    while (si--) {\n                        if (sibling[si].id === node.id) {\n                            sibling.splice(si, 1);\n                            break;\n                        }\n                    }\n                    var _nparent = _this.get_node(parentid);\n                    if (_nparent) {\n                        node.parent = _nparent;\n                        node.parent.children.push(node);\n                    }\n                }\n                if (node.parent.isroot) {\n                    if (direction === __1[\"default\"].direction.left) {\n                        node.direction = direction;\n                    }\n                    else {\n                        node.direction = __1[\"default\"].direction.right;\n                    }\n                }\n                else {\n                    node.direction = node.parent.direction;\n                }\n                _this._move_node_internal(node, beforeid);\n                _this._flow_node_direction(node);\n            }\n            return node;\n        };\n        this.remove_node = function (node) {\n            if (typeof node === \"string\") {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return false;\n                }\n                else {\n                    return _this.remove_node(the_node);\n                }\n            }\n            if (!node) {\n                tools_1.$logger.error(\"fail, the node can not be found\");\n                return false;\n            }\n            if (node.isroot) {\n                tools_1.$logger.error(\"fail, can not remove root node\");\n                return false;\n            }\n            if (_this.selected !== null && _this.selected.id === node.id) {\n                _this.selected = null;\n            }\n            // clean all subordinate nodes\n            var children = node.children;\n            var ci = children.length;\n            while (ci--) {\n                _this.remove_node(children[ci]);\n            }\n            // clean all children\n            children.length = 0;\n            // remove from parent's children\n            var sibling = node.parent.children || [];\n            var si = sibling.length;\n            while (si--) {\n                if (sibling[si].id === node.id) {\n                    sibling.splice(si, 1);\n                    break;\n                }\n            }\n            // remove from global nodes\n            delete _this.nodes[node.id];\n            // clean all properties\n            Object.keys(node).map(function (k) {\n                delete node[k];\n            });\n            // remove it's self\n            node = null;\n            // delete node;\n            return true;\n        };\n        this._put_node = function (node) {\n            if (node.id in _this.nodes) {\n                tools_1.$logger.warn(\"the nodeid '\" + node.id + \"' has been already exist.\");\n                return false;\n            }\n            else {\n                _this.nodes[node.id] = node;\n                return true;\n            }\n        };\n        this._reindex = function (node) {\n            if (node instanceof node_1.TSM_node) {\n                node.children.sort(node_1.TSM_node.compare);\n                for (var i = 0; i < node.children.length; i++) {\n                    node.children[i].index = i + 1;\n                }\n            }\n        };\n    }\n    return TSM_mind;\n}());\nexports.TSM_mind = TSM_mind;\n","\"use strict\";\nexports.__esModule = true;\nvar node_1 = require(\"../core/node\");\nvar canvas_1 = require(\"./canvas\");\nvar file_1 = require(\"./file\");\nvar json_1 = require(\"./json\");\nvar ajax_1 = require(\"./ajax\");\nvar dom_1 = require(\"./dom\");\nvar uuid_1 = require(\"./uuid\");\nvar text_1 = require(\"./text\");\nvar array = require(\"./array\");\nexports.util = {\n    is_node: function (node) {\n        return node instanceof node_1.TSM_node;\n    },\n    ajax: ajax_1.ajax,\n    dom: dom_1.dom,\n    canvas: canvas_1.canvas,\n    file: file_1.file,\n    json: json_1.json,\n    uuid: uuid_1.uuid,\n    text: text_1.text,\n    array: array\n};\nexports[\"default\"] = exports.util;\n","\"use strict\";\nexports.__esModule = true;\nexports._slice = Array.prototype.slice;\n","\"use strict\";\nexports.__esModule = true;\nvar constants_1 = require(\"../../util/constants\");\nvar mind_1 = require(\"../mind\");\nvar tools_1 = require(\"../../util/tools\");\nvar node_1 = require(\"../node\");\nvar __1 = require(\"..\");\nexports.node_array = {\n    example: {\n        meta: {\n            name: constants_1.__name__,\n            author: constants_1.__authores__,\n            version: constants_1.__version__\n        },\n        format: \"node_array\",\n        data: [\n            { id: \"root\", topic: \"jsMind Example\", isroot: true }\n        ]\n    },\n    get_mind: function (source) {\n        var df = exports.node_array;\n        var mind = new mind_1.TSM_mind();\n        mind.name = source.meta.name;\n        mind.author = source.meta.author;\n        mind.version = source.meta.version;\n        df._parse(mind, source.data);\n        return mind;\n    },\n    get_data: function (mind) {\n        var df = exports.node_array;\n        var data = [];\n        df._array(mind, data);\n        return {\n            meta: {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version\n            },\n            format: \"node_array\",\n            data: data\n        };\n    },\n    _parse: function (mind, nodes) {\n        var df = exports.node_array;\n        var narray = nodes.slice(0);\n        // reverse array for improving looping performance\n        narray.reverse();\n        var root_id = df._extract_root(mind, narray);\n        if (!!root_id) {\n            df._extract_subnode(mind, root_id, narray);\n        }\n        else {\n            tools_1.$logger.error(\"root node can not be found\");\n        }\n    },\n    _extract_root: function (mind, nodes) {\n        var df = exports.node_array;\n        var i = nodes.length;\n        while (i--) {\n            if (\"isroot\" in nodes[i] && nodes[i].isroot) {\n                var root_json = nodes[i];\n                var data = df._extract_data(root_json);\n                mind.set_root(root_json.id, root_json.topic, data);\n                nodes.splice(i, 1);\n                return root_json.id;\n            }\n        }\n        return null;\n    },\n    _extract_subnode: function (mind, parentid, nodes) {\n        var df = exports.node_array;\n        var i = nodes.length;\n        var node_json = null;\n        var data = null;\n        var extract_count = 0;\n        while (i--) {\n            node_json = nodes[i];\n            if (node_json.parentid === parentid) {\n                data = df._extract_data(node_json);\n                var node_direction = node_json.direction;\n                mind.add_node(parentid, node_json.id, node_json.topic, data, undefined, node_direction\n                    ? node_direction === \"left\"\n                        ? __1[\"default\"].direction.left\n                        : __1[\"default\"].direction.right\n                    : undefined, node_json.expanded);\n                nodes.splice(i, 1);\n                extract_count++;\n                var sub_extract_count = df._extract_subnode(mind, node_json.id, nodes);\n                if (sub_extract_count > 0) {\n                    // reset loop index after extract subordinate node\n                    i = nodes.length;\n                    extract_count += sub_extract_count;\n                }\n            }\n        }\n        return extract_count;\n    },\n    _extract_data: function (node_json) {\n        var data = {};\n        for (var k in node_json) {\n            if (k === \"id\" ||\n                k === \"topic\" ||\n                k === \"parentid\" ||\n                k === \"isroot\" ||\n                k === \"direction\" ||\n                k === \"expanded\") {\n                continue;\n            }\n            data[k] = node_json[k];\n        }\n        return data;\n    },\n    _array: function (mind, nodes) {\n        var df = exports.node_array;\n        mind.root && df._array_node(mind.root, nodes);\n    },\n    _array_node: function (node, nodes) {\n        var df = exports.node_array;\n        if (!(node instanceof node_1.TSM_node)) {\n            return;\n        }\n        var o = {\n            id: node.id,\n            topic: node.topic,\n            expanded: node.expanded,\n            children: [],\n            width: 0,\n            height: 0\n        };\n        if (!!node.parent) {\n            o.parentid = node.parent.id;\n        }\n        if (node.isroot) {\n            o.isroot = true;\n        }\n        if (!!node.parent && node.parent.isroot) {\n            o.direction = node.direction === __1[\"default\"].direction.left ? \"left\" : \"right\";\n        }\n        if (node.data != null) {\n            var node_data_1 = node.data;\n            Object.keys(node_data_1).map(function (k) {\n                o[k] = node_data_1[k];\n            });\n        }\n        nodes.push(o);\n        var ci = node.children.length;\n        for (var i = 0; i < ci; i++) {\n            df._array_node(node.children[i], nodes);\n        }\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"./tools\");\nexports.json = {\n    json2string: function (json) {\n        if (!!JSON) {\n            try {\n                var json_str = JSON.stringify(json);\n                return json_str;\n            }\n            catch (e) {\n                tools_1.$logger.warn(e);\n                tools_1.$logger.warn(\"can not convert to string\");\n                return null;\n            }\n        }\n        return null;\n    },\n    string2json: function (json_str) {\n        if (!!JSON) {\n            try {\n                var json_1 = JSON.parse(json_str);\n                return json_1;\n            }\n            catch (e) {\n                tools_1.$logger.warn(e);\n                tools_1.$logger.warn(\"can not parse to json\");\n                return null;\n            }\n        }\n    },\n    merge: function (b, a) {\n        return tools_1.$extend(b, a);\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nexports.text = {\n    is_empty: function (s) {\n        if (!s) {\n            return true;\n        }\n        return s.replace(/\\s*/, \"\").length === 0;\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./core/index\"), exports);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"../../util/tools\");\nvar node_array_1 = require(\"../format/node_array\");\nvar node_tree_1 = require(\"../format/node_tree\");\nvar freemind_1 = require(\"../format/freemind\");\nvar data_provider = /** @class */ (function () {\n    function data_provider(tsm) {\n        var _this = this;\n        this.reset = function () {\n            tools_1.$logger.debug(\"data.reset\");\n        };\n        this.load = function (mind_data) {\n            var df = null;\n            var mind = null;\n            if (typeof mind_data === \"object\") {\n                if (!!mind_data.format) {\n                    df = mind_data.format;\n                }\n                else {\n                    df = \"node_tree\";\n                }\n            }\n            else {\n                df = \"freemind\";\n            }\n            if (df === \"node_array\") {\n                mind = node_array_1.node_array.get_mind(mind_data);\n            }\n            else if (df === \"node_tree\") {\n                mind = node_tree_1.node_tree.get_mind(mind_data);\n            }\n            else if (df === \"freemind\") {\n                mind = freemind_1.freemind.get_mind(mind_data);\n            }\n            else {\n                tools_1.$logger.warn(\"unsupported format\");\n            }\n            return mind;\n        };\n        this.get_data = function (data_format) {\n            var data = null;\n            if (!_this.tsm.mind)\n                return data;\n            if (data_format === \"node_array\") {\n                data = node_array_1.node_array.get_data(_this.tsm.mind);\n            }\n            else if (data_format === \"node_tree\") {\n                data = node_tree_1.node_tree.get_data(_this.tsm.mind);\n            }\n            else if (data_format === \"freemind\") {\n                data = freemind_1.freemind.get_data(_this.tsm.mind);\n            }\n            else {\n                tools_1.$logger.error(\"unsupported \" + data_format + \" format\");\n            }\n            return data;\n        };\n        this.tsm = tsm;\n        tools_1.$logger.debug(\"data.init\");\n    }\n    return data_provider;\n}());\nexports.data_provider = data_provider;\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"./tools\");\nexports.file = {\n    read: function (file_data, fn_callback) {\n        var reader = new FileReader();\n        reader.onload = function () {\n            if (typeof fn_callback === \"function\") {\n                fn_callback(this.result, file_data.name);\n            }\n        };\n        reader.readAsText(file_data);\n    },\n    save: function (file_data, type, name) {\n        var blob;\n        var _wind = window;\n        if (typeof _wind.Blob === \"function\") {\n            blob = new Blob([file_data], { type: type });\n        }\n        else {\n            var BlobBuilder = _wind.BlobBuilder || _wind.MozBlobBuilder || _wind.WebKitBlobBuilder || _wind.MSBlobBuilder;\n            var bb = new BlobBuilder();\n            bb.append(file_data);\n            blob = bb.getBlob(type);\n        }\n        if (navigator.msSaveBlob) {\n            navigator.msSaveBlob(blob, name);\n        }\n        else {\n            var URL_1 = _wind.URL || _wind.webkitURL;\n            var bloburl = URL_1.createObjectURL(blob);\n            var anchor = tools_1.$doc.createElement(\"a\");\n            if (\"download\" in anchor) {\n                anchor.style.visibility = \"hidden\";\n                anchor.href = bloburl;\n                anchor.download = name;\n                tools_1.$doc.body.appendChild(anchor);\n                var evt = tools_1.$doc.createEvent(\"MouseEvents\");\n                evt.initEvent(\"click\", true, true);\n                anchor.dispatchEvent(evt);\n                tools_1.$doc.body.removeChild(anchor);\n            }\n            else {\n                location.href = bloburl;\n            }\n        }\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar json_1 = require(\"./json\");\nvar tools_1 = require(\"./tools\");\nexports.ajax = {\n    _xhr: function () {\n        var xhr = null;\n        if (\"XMLHttpRequest\" in window) {\n            xhr = new XMLHttpRequest();\n        }\n        else {\n            try {\n                xhr = new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n            }\n            catch (e) { }\n        }\n        return xhr;\n    },\n    _eurl: function (url) {\n        return encodeURIComponent(url);\n    },\n    request: function (url, param, method, callback, fail_callback) {\n        if (param === void 0) { param = {}; }\n        if (method === void 0) { method = \"GET\"; }\n        if (callback === void 0) { callback = tools_1.$noop; }\n        if (fail_callback === void 0) { fail_callback = tools_1.$noop; }\n        var a = exports.ajax;\n        var p = null;\n        var tmp_param = [];\n        Object.keys(param).map(function (k) {\n            tmp_param.push(a._eurl(k) + \"=\" + a._eurl(param[k]));\n        });\n        if (tmp_param.length > 0) {\n            p = tmp_param.join(\"&\");\n        }\n        var xhr = a._xhr();\n        if (!xhr) {\n            return;\n        }\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200 || xhr.status === 0) {\n                    var data = json_1.json.string2json(xhr.responseText);\n                    if (data != null) {\n                        callback(data);\n                    }\n                    else {\n                        callback(xhr.responseText);\n                    }\n                }\n                else {\n                    fail_callback(xhr);\n                    tools_1.$logger.error(\"xhr request failed.\", xhr);\n                }\n            }\n        };\n        method = method || \"GET\";\n        xhr.open(method, url, true);\n        xhr.setRequestHeader(\"If-Modified-Since\", \"0\");\n        if (method === \"POST\") {\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");\n            xhr.send(p);\n        }\n        else {\n            xhr.send();\n        }\n    },\n    get: function (url, callback) {\n        return exports.ajax.request(url, {}, \"GET\", callback);\n    },\n    post: function (url, param, callback) {\n        return exports.ajax.request(url, param, \"POST\", callback);\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nexports.uuid = {\n    newid: function () {\n        return (new Date().getTime().toString(16) +\n            Math.random()\n                .toString(16)\n                .substr(2)).substr(2, 16);\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar constants_1 = require(\"../../util/constants\");\nvar mind_1 = require(\"../mind\");\nvar __1 = require(\"..\");\nvar node_1 = require(\"../node\");\nexports.node_tree = {\n    example: {\n        meta: {\n            name: constants_1.__name__,\n            author: constants_1.__authores__,\n            version: constants_1.__version__\n        },\n        format: \"node_tree\",\n        data: { id: \"root\", topic: \"jsMind Example\" }\n    },\n    get_mind: function (source) {\n        var df = exports.node_tree;\n        var mind = new mind_1.TSM_mind();\n        mind.name = source.meta.name;\n        mind.author = source.meta.author;\n        mind.version = source.meta.version;\n        df._parse(mind, source.data);\n        return mind;\n    },\n    get_data: function (mind) {\n        var df = exports.node_tree;\n        return {\n            meta: {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version\n            },\n            format: \"node_tree\",\n            data: df._buildnode(mind.root)\n        };\n    },\n    _parse: function (mind, node_root) {\n        var df = exports.node_tree;\n        var data = df._extract_data(node_root);\n        mind.set_root(node_root.id, node_root.topic, data);\n        if (\"children\" in node_root) {\n            var children = node_root.children;\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var child = children_1[_i];\n                df._extract_subnode(mind, mind.root, child);\n            }\n        }\n    },\n    _extract_data: function (node_json) {\n        var data = {};\n        for (var k in node_json) {\n            if (k === \"id\" ||\n                k === \"topic\" ||\n                k === \"children\" ||\n                k === \"direction\" ||\n                k === \"expanded\") {\n                continue;\n            }\n            data[k] = node_json[k];\n        }\n        return data;\n    },\n    _extract_subnode: function (mind, node_parent, node_json) {\n        var df = exports.node_tree;\n        var data = df._extract_data(node_json);\n        var dir = __1.TSMindDirectionMap.right;\n        if (node_parent.isroot) {\n            dir = __1.TSMindDirectionMap[node_json.direction];\n        }\n        var node = mind.add_node(node_parent, node_json.id, node_json.topic, data, undefined, dir, node_json.expanded);\n        if (\"children\" in node_json) {\n            var children = node_json.children;\n            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n                var child = children_2[_i];\n                df._extract_subnode(mind, node, child);\n            }\n        }\n    },\n    _buildnode: function (node) {\n        var df = exports.node_tree;\n        if (!(node instanceof node_1.TSM_node)) {\n            return;\n        }\n        var o = {\n            id: node.id,\n            topic: node.topic,\n            expanded: node.expanded\n        };\n        if (!!node.parent && node.parent.isroot) {\n            o.direction =\n                node.direction === __1.TSMindDirectionMap.left ? \"left\" : \"right\";\n        }\n        if (node.data != null) {\n            var node_data = node.data;\n            for (var k in node_data) {\n                if (k) {\n                    o[k] = node_data[k];\n                }\n            }\n        }\n        var children = node.children;\n        if (children.length > 0) {\n            o.children = [];\n            for (var _i = 0, children_3 = children; _i < children_3.length; _i++) {\n                var child = children_3[_i];\n                o.children.push(df._buildnode(child));\n            }\n        }\n        return o;\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar constants_1 = require(\"../../util/constants\");\nvar mind_1 = require(\"../mind\");\nvar __1 = require(\"..\");\nvar array_1 = require(\"../../util/array\");\nexports.freemind = {\n    example: {\n        meta: {\n            name: constants_1.__name__,\n            author: constants_1.__authores__,\n            version: constants_1.__version__\n        },\n        format: \"freemind\",\n        data: \"<map version=\\\"\" + constants_1.__version__ + \"\\\"><node ID=\\\"root\\\" TEXT=\\\"freemind Example\\\"/></map>\"\n    },\n    get_mind: function (source) {\n        var df = exports.freemind;\n        var mind = new mind_1.TSM_mind();\n        mind.name = source.meta.name;\n        mind.author = source.meta.author;\n        mind.version = source.meta.version;\n        var xml = source.data;\n        var xml_doc = df._parse_xml(xml);\n        var xml_root = df._find_root(xml_doc);\n        df._load_node(mind, null, xml_root);\n        return mind;\n    },\n    get_data: function (mind) {\n        var df = exports.freemind;\n        var json = {\n            meta: {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version\n            },\n            format: \"freemind\",\n            data: \"\"\n        };\n        var xmllines = [];\n        xmllines.push(\"<map version=\\\"\" + constants_1.__version__ + \"\\\">\");\n        df._buildmap(mind.root, xmllines);\n        xmllines.push(\"</map>\");\n        json.data = xmllines.join(\" \");\n        return json;\n    },\n    _parse_xml: function (xml) {\n        var xml_doc = null;\n        if (!!DOMParser) {\n            var parser = new DOMParser();\n            xml_doc = parser.parseFromString(xml, \"text/xml\");\n        }\n        else {\n            // Internet Explorer\n            xml_doc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n            xml_doc.async = false;\n            xml_doc.loadXML(xml);\n        }\n        return xml_doc;\n    },\n    _find_root: function (xml_doc) {\n        var nodes = array_1._slice.call(xml_doc.childNodes);\n        var node = null;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var n = nodes_1[_i];\n            if (n.nodeType === 1 && n.tagName === \"map\") {\n                node = n;\n                break;\n            }\n        }\n        if (!!node) {\n            var ns = array_1._slice.call(node.childNodes);\n            node = null;\n            for (var _a = 0, ns_1 = ns; _a < ns_1.length; _a++) {\n                var n = ns_1[_a];\n                if (n.nodeType === 1 && n.tagName === \"node\") {\n                    node = n;\n                    break;\n                }\n            }\n        }\n        return node;\n    },\n    _load_node: function (mind, parent_id, xml_node) {\n        var df = exports.freemind;\n        var node_id = xml_node.getAttribute(\"ID\");\n        if (!node_id)\n            return;\n        var node_topic = xml_node.getAttribute(\"TEXT\");\n        // look for richcontent\n        if (node_topic == null) {\n            var topic_children = array_1._slice.call(xml_node.childNodes);\n            for (var _i = 0, topic_children_1 = topic_children; _i < topic_children_1.length; _i++) {\n                var topic_child = topic_children_1[_i];\n                // logger.debug(topic_child.tagName);\n                if (topic_child.nodeType === 1 &&\n                    topic_child.tagName === \"richcontent\") {\n                    node_topic = topic_child.textContent;\n                    break;\n                }\n            }\n        }\n        var node_data = df._load_attributes(xml_node);\n        var node_expanded = \"expanded\" in node_data ? node_data.expanded === \"true\" : true;\n        delete node_data.expanded;\n        var node_position = xml_node.getAttribute(\"POSITION\");\n        var node_direction = node_position\n            ? __1[\"default\"].direction[node_position]\n            : undefined;\n        // logger.debug(node_position +':'+ node_direction);\n        if (!!parent_id) {\n            mind.add_node(parent_id, node_id, node_topic, node_data, undefined, node_direction, node_expanded);\n        }\n        else {\n            mind.set_root(node_id, node_topic, node_data);\n        }\n        var children = array_1._slice.call(xml_node.childNodes);\n        for (var _a = 0, children_1 = children; _a < children_1.length; _a++) {\n            var child = children_1[_a];\n            if (child.nodeType === 1 && child.tagName === \"node\") {\n                df._load_node(mind, node_id, child);\n            }\n        }\n    },\n    _load_attributes: function (xml_node) {\n        var children = array_1._slice.call(xml_node.childNodes);\n        var attr_data = {};\n        for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n            var attr = children_2[_i];\n            if (attr.nodeType === 1 && attr.tagName === \"attribute\") {\n                attr_data[attr.getAttribute(\"NAME\")] = attr.getAttribute(\"VALUE\");\n            }\n        }\n        return attr_data;\n    },\n    _buildmap: function (node, xmllines) {\n        if (!node)\n            return;\n        var df = exports.freemind;\n        var pos = null;\n        if (!!node.parent && node.parent.isroot) {\n            pos = node.direction === __1[\"default\"].direction.left ? \"left\" : \"right\";\n        }\n        xmllines.push(\"<node\");\n        xmllines.push('ID=\"' + node.id + '\"');\n        if (!!pos) {\n            xmllines.push('POSITION=\"' + pos + '\"');\n        }\n        xmllines.push('TEXT=\"' + node.topic + '\">');\n        // store expanded status as an attribute\n        xmllines.push('<attribute NAME=\"expanded\" VALUE=\"' + node.expanded + '\"/>');\n        // for attributes\n        if (node.data) {\n            Object.keys(node.data).map(function (k) {\n                xmllines.push('<attribute NAME=\"' + k + '\" VALUE=\"' + node.data[k] + '\"/>');\n            });\n        }\n        // for children\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            df._buildmap(child, xmllines);\n        }\n        xmllines.push(\"</node>\");\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar __1 = require(\"..\");\nvar tools_1 = require(\"../../util/tools\");\nvar layout_provider = /** @class */ (function () {\n    function layout_provider(tsm, options) {\n        var _this = this;\n        this.bounds = { n: 0, s: 0, w: 0, e: 0 };\n        this.reset = function () {\n            tools_1.$logger.debug(\"layout.reset\");\n            _this.bounds = { n: 0, s: 0, w: 0, e: 0 };\n        };\n        this.layout = function () {\n            tools_1.$logger.debug(\"layout.layout\");\n            _this.layout_direction();\n            _this.layout_offset();\n        };\n        this.layout_direction = function () {\n            _this._layout_direction_root();\n        };\n        this._layout_direction_root = function () {\n            var node = _this.tsm.mind.root;\n            if (!node)\n                return;\n            // $logger.debug(node);\n            var children = node.children;\n            var children_count = children.length;\n            node.layout_data.direction = __1[\"default\"].direction.center;\n            node.layout_data.side_index = 0;\n            if (_this.isside) {\n                var i = children_count;\n                while (i--) {\n                    _this._layout_direction_side(children[i], __1[\"default\"].direction.right, i);\n                }\n            }\n            else {\n                var i = children_count;\n                var subnode = null;\n                while (i--) {\n                    subnode = children[i];\n                    if (subnode.direction === __1[\"default\"].direction.left) {\n                        _this._layout_direction_side(subnode, __1[\"default\"].direction.left, i);\n                    }\n                    else {\n                        _this._layout_direction_side(subnode, __1[\"default\"].direction.right, i);\n                    }\n                }\n                /*\n                          var boundary = Math.ceil(children_count/2);\n                          var i = children_count;\n                          while(i--){\n                              if(i>=boundary){\n                                  this._layout_direction_side(children[i],tsm.direction.left, children_count-i-1);\n                              }else{\n                                  this._layout_direction_side(children[i],tsm.direction.right, i);\n                              }\n                          }*/\n            }\n        };\n        this._layout_direction_side = function (node, direction, side_index) {\n            var layout_data = node.layout_data;\n            var children = node.children;\n            var children_count = children.length;\n            layout_data.direction = direction;\n            layout_data.side_index = side_index;\n            var i = children_count;\n            while (i--) {\n                _this._layout_direction_side(children[i], direction, i);\n            }\n        };\n        this.layout_offset = function () {\n            var node = _this.tsm.mind.root;\n            if (!node)\n                return;\n            var layout_data = node.layout_data;\n            if (!layout_data)\n                return;\n            var children = node.children;\n            var i = children.length;\n            var left_nodes = [];\n            var right_nodes = [];\n            var subnode = null;\n            while (i--) {\n                subnode = children[i];\n                if (subnode.layout_data.direction === __1[\"default\"].direction.right) {\n                    right_nodes.unshift(subnode);\n                }\n                else {\n                    left_nodes.unshift(subnode);\n                }\n            }\n            layout_data.left_nodes = left_nodes;\n            layout_data.right_nodes = right_nodes;\n            layout_data.outer_height_left = _this._layout_offset_subnodes(left_nodes);\n            layout_data.outer_height_right = _this._layout_offset_subnodes(right_nodes);\n            _this.bounds.e = (node.view_data.width || 0) / 2;\n            _this.bounds.w = 0 - _this.bounds.e;\n            // $logger.debug(this.bounds.w);\n            _this.bounds.n = 0;\n            _this.bounds.s = Math.max(layout_data.outer_height_left, layout_data.outer_height_right);\n        };\n        // layout both the x and y axis\n        this._layout_offset_subnodes = function (nodes) {\n            var total_height = 0;\n            var nodes_count = nodes.length;\n            var i = nodes_count;\n            var node = null;\n            var node_outer_height = 0;\n            var base_y = 0;\n            var pd = null; // parent._data\n            while (i--) {\n                node = nodes[i];\n                var layout_data = node.layout_data;\n                if (pd == null) {\n                    pd = node.parent;\n                }\n                node_outer_height = _this._layout_offset_subnodes(node.children);\n                if (!node.expanded) {\n                    node_outer_height = 0;\n                    _this.set_visible(node.children, false);\n                }\n                node_outer_height = Math.max(node.view_data.height || 0, node_outer_height);\n                layout_data.outer_height = node_outer_height;\n                layout_data.offset_y = base_y - node_outer_height / 2;\n                layout_data.offset_x = _this.opts.hspace * layout_data.direction + (pd.view_data.width * (pd.layout_data.direction + layout_data.direction)) / 2;\n                if (!node.parent.isroot) {\n                    layout_data.offset_x += _this.opts.pspace * layout_data.direction;\n                }\n                base_y = base_y - node_outer_height - _this.opts.vspace;\n                total_height += node_outer_height;\n            }\n            if (nodes_count > 1) {\n                total_height += _this.opts.vspace * (nodes_count - 1);\n            }\n            i = nodes_count;\n            var middle_height = total_height / 2;\n            while (i--) {\n                node = nodes[i];\n                node.layout_data.offset_y += middle_height;\n            }\n            return total_height;\n        };\n        // layout the y axis only, for collapse/expand a node\n        this._layout_offset_subnodes_height = function (nodes) {\n            var total_height = 0;\n            var nodes_count = nodes.length;\n            var i = nodes_count;\n            var node = null;\n            var node_outer_height = 0;\n            var layout_data = null;\n            var base_y = 0;\n            while (i--) {\n                node = nodes[i];\n                layout_data = node.layout_data;\n                node_outer_height = _this._layout_offset_subnodes_height(node.children);\n                if (!node.expanded) {\n                    node_outer_height = 0;\n                }\n                node_outer_height = Math.max(node.view_data.height, node_outer_height);\n                layout_data.outer_height = node_outer_height;\n                layout_data.offset_y = base_y - node_outer_height / 2;\n                base_y = base_y - node_outer_height - _this.opts.vspace;\n                total_height += node_outer_height;\n            }\n            if (nodes_count > 1) {\n                total_height += _this.opts.vspace * (nodes_count - 1);\n            }\n            i = nodes_count;\n            var middle_height = total_height / 2;\n            while (i--) {\n                node = nodes[i];\n                node.layout_data.offset_y += middle_height;\n                // $logger.debug(node.topic);\n                // $logger.debug(node.layout_data.offset_y);\n            }\n            return total_height;\n        };\n        this.get_node_offset = function (node) {\n            var layout_data = node.layout_data;\n            var offset_cache = { x: -1, y: -1 };\n            if (\"_offset_\" in layout_data && _this.cache_valid) {\n                offset_cache = layout_data._offset_;\n            }\n            else {\n                layout_data._offset_ = offset_cache;\n            }\n            if (offset_cache.x === -1 || offset_cache.y === -1) {\n                var x = layout_data.offset_x;\n                var y = layout_data.offset_y;\n                if (!node.isroot) {\n                    var offset_p = _this.get_node_offset(node.parent);\n                    x += offset_p.x;\n                    y += offset_p.y;\n                }\n                offset_cache.x = x;\n                offset_cache.y = y;\n            }\n            return offset_cache;\n        };\n        this.get_node_point = function (node) {\n            var offset_p = _this.get_node_offset(node);\n            tools_1.$logger.debug(offset_p);\n            var p = {\n                x: offset_p.x + (node.view_data.width * (node.layout_data.direction - 1)) / 2,\n                y: offset_p.y - node.view_data.height / 2\n            };\n            // $logger.debug(p);\n            return p;\n        };\n        this.get_node_point_in = function (node) {\n            return _this.get_node_offset(node);\n        };\n        this.get_node_point_out = function (node) {\n            var pout_cache = { x: -1, y: -1 };\n            if (pout_cache.x === -1 || pout_cache.y === -1) {\n                if (node.isroot) {\n                    pout_cache.x = 0;\n                    pout_cache.y = 0;\n                }\n                else {\n                    var offset_p = _this.get_node_offset(node);\n                    pout_cache.x = offset_p.x + (node.view_data.width + _this.opts.pspace) * node.layout_data.direction;\n                    pout_cache.y = offset_p.y;\n                    // $logger.debug('pout');\n                    // $logger.debug(pout_cache);\n                }\n            }\n            return pout_cache;\n        };\n        this.get_expander_point = function (node) {\n            var p = _this.get_node_point_out(node);\n            var ex_p = {\n                x: 0,\n                y: 0\n            };\n            if (node.layout_data.direction === __1[\"default\"].direction.right) {\n                ex_p.x = p.x - _this.opts.pspace;\n            }\n            else {\n                ex_p.x = p.x;\n            }\n            ex_p.y = p.y - Math.ceil(_this.opts.pspace / 2);\n            return ex_p;\n        };\n        this.get_min_size = function () {\n            var nodes = _this.tsm.mind.nodes;\n            if (!nodes)\n                return;\n            var node = null;\n            var pout = null;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                pout = _this.get_node_point_out(node);\n                // $logger.debug(pout.x);\n                if (pout.x > _this.bounds.e) {\n                    _this.bounds.e = pout.x;\n                }\n                if (pout.x < _this.bounds.w) {\n                    _this.bounds.w = pout.x;\n                }\n            }\n            return {\n                w: _this.bounds.e - _this.bounds.w,\n                h: _this.bounds.s - _this.bounds.n\n            };\n        };\n        this.toggle_node = function (node) {\n            if (node.isroot) {\n                return;\n            }\n            if (node.expanded) {\n                _this.collapse_node(node);\n            }\n            else {\n                _this.expand_node(node);\n            }\n        };\n        this.expand_node = function (node) {\n            node.expanded = true;\n            _this.part_layout(node);\n            _this.set_visible(node.children, true);\n        };\n        this.collapse_node = function (node) {\n            node.expanded = false;\n            _this.part_layout(node);\n            _this.set_visible(node.children, false);\n        };\n        this.expand_all = function () {\n            var nodes = _this.tsm.mind.nodes;\n            if (!nodes)\n                return;\n            var c = 0;\n            var node;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                if (!node.expanded) {\n                    node.expanded = true;\n                    c++;\n                }\n            }\n            if (c > 0) {\n                var root = _this.tsm.mind.root;\n                if (!root)\n                    return;\n                _this.part_layout(root);\n                _this.set_visible(root.children, true);\n            }\n        };\n        this.collapse_all = function () {\n            var nodes = _this.tsm.mind.nodes;\n            var c = 0;\n            var node;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                if (node.expanded && !node.isroot) {\n                    node.expanded = false;\n                    c++;\n                }\n            }\n            if (c > 0) {\n                var root = _this.tsm.mind.root;\n                if (!root)\n                    return;\n                _this.part_layout(root);\n                _this.set_visible(root.children, true);\n            }\n        };\n        this.expand_to_depth = function (target_depth, curr_nodes, curr_depth) {\n            if (curr_nodes === void 0) { curr_nodes = _this.tsm.mind.root.children; }\n            if (curr_depth === void 0) { curr_depth = 1; }\n            if (target_depth < 1) {\n                return;\n            }\n            var i = curr_nodes.length;\n            var node = null;\n            while (i--) {\n                node = curr_nodes[i];\n                if (curr_depth < target_depth) {\n                    if (!node.expanded) {\n                        _this.expand_node(node);\n                    }\n                    _this.expand_to_depth(target_depth, node.children, curr_depth + 1);\n                }\n                if (curr_depth === target_depth) {\n                    if (node.expanded) {\n                        _this.collapse_node(node);\n                    }\n                }\n            }\n        };\n        this.part_layout = function (node) {\n            var root = _this.tsm.mind.root;\n            if (!!root) {\n                var root_layout_data = root.layout_data;\n                if (!root_layout_data)\n                    return;\n                if (node.isroot) {\n                    root_layout_data.right_nodes && (root_layout_data.outer_height_right = _this._layout_offset_subnodes_height(root_layout_data.right_nodes));\n                    root_layout_data.left_nodes && (root_layout_data.outer_height_left = _this._layout_offset_subnodes_height(root_layout_data.left_nodes));\n                }\n                else {\n                    if (node.layout_data.direction === __1[\"default\"].direction.right) {\n                        root_layout_data.right_nodes && (root_layout_data.outer_height_right = _this._layout_offset_subnodes_height(root_layout_data.right_nodes));\n                    }\n                    else {\n                        root_layout_data.left_nodes && (root_layout_data.outer_height_left = _this._layout_offset_subnodes_height(root_layout_data.left_nodes));\n                    }\n                }\n                _this.bounds.s = Math.max(root_layout_data.outer_height_left, root_layout_data.outer_height_right);\n                _this.cache_valid = false;\n            }\n            else {\n                tools_1.$logger.warn(\"can not found root node\");\n            }\n        };\n        this.set_visible = function (nodes, visible) {\n            var i = nodes.length;\n            var node = null;\n            // let layout_data: any;\n            while (i--) {\n                node = nodes[i];\n                // layout_data = node.layout_data;\n                if (node.expanded) {\n                    _this.set_visible(node.children, visible);\n                }\n                else {\n                    _this.set_visible(node.children, false);\n                }\n                if (!node.isroot) {\n                    node.layout_data.visible = visible;\n                }\n            }\n        };\n        this.is_expand = function (node) {\n            return node.expanded;\n        };\n        this.is_visible = function (node) {\n            return !!node.layout_data.visible;\n        };\n        this.opts = options;\n        this.tsm = tsm;\n        this.isside = this.opts.mode === \"side\";\n        this.cache_valid = false;\n        tools_1.$logger.debug(\"layout.init\");\n    }\n    return layout_provider;\n}());\nexports[\"default\"] = layout_provider;\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"../../util/tools\");\nvar dom_1 = require(\"../../util/dom\");\nvar __1 = require(\"..\");\nvar text_1 = require(\"../../util/text\");\nvar array_1 = require(\"../../util/array\");\nvar canvas_1 = require(\"../../util/canvas\");\nvar constants_1 = require(\"../../util/constants\");\nvar view_provider = /** @class */ (function () {\n    function view_provider(tsm, options) {\n        var _this = this;\n        this.e_panel = tools_1.$doc.createElement(\"div\");\n        this.e_nodes = tools_1.$doc.createElement(constants_1.TSM_Node_Names.nodes);\n        this.e_canvas = tools_1.$doc.createElement(\"canvas\");\n        this.e_editor = tools_1.$doc.createElement(\"input\");\n        this.canvas_ctx = this.e_canvas.getContext(\"2d\");\n        this.size = { w: 0, h: 0 };\n        this.selected_node = null;\n        this.editing_node = null;\n        // view zoom\n        this.actualZoom = 1;\n        this.zoomStep = 0.1;\n        this.minZoom = 0.5;\n        this.maxZoom = 2;\n        this.add_event = function (obj, event_name, event_handle) {\n            _this.e_nodes &&\n                dom_1.dom.add_event(_this.e_nodes, event_name, function (e) {\n                    var evt = e || event;\n                    event_handle.call(obj, evt);\n                });\n        };\n        this.is_expander = function (element) {\n            return element.tagName.toLowerCase() === constants_1.TSM_Node_Names.fold;\n        };\n        this.reset = function () {\n            tools_1.$logger.debug(\"view.reset\");\n            _this.selected_node = null;\n            _this.clear_lines();\n            _this.clear_nodes();\n            _this.reset_theme();\n        };\n        this.reset_theme = function () {\n            var theme_name = _this.tsm.options.theme;\n            if (!!theme_name) {\n                _this.e_nodes.className = \"theme-\" + theme_name;\n            }\n            else {\n                _this.e_nodes.className = \"\";\n            }\n        };\n        this.reset_custom_style = function () {\n            var nodes = _this.tsm.mind.nodes;\n            for (var nodeid in nodes) {\n                if (nodeid)\n                    _this.reset_node_custom_style(nodes[nodeid]);\n            }\n        };\n        this.load = function () {\n            tools_1.$logger.debug(\"view.load\");\n            _this.init_nodes();\n        };\n        this.expand_size = function () {\n            var min_size = _this.layout.get_min_size();\n            if (!min_size)\n                return;\n            var min_height = min_size.h + _this.opts.vmargin * 2;\n            var min_width = min_size.w + _this.opts.hmargin * 2;\n            var client_w = _this.e_panel.clientWidth || 0;\n            var client_h = _this.e_panel.clientHeight || 0;\n            if (client_w < min_width) {\n                client_w = min_width;\n            }\n            if (client_h < min_height) {\n                client_h = min_height;\n            }\n            _this.size.w = client_w;\n            _this.size.h = client_h;\n        };\n        this.init_nodes_size = function (node) {\n            if (!node.view_data.element)\n                return;\n            node.view_data.width = node.view_data.element.clientWidth;\n            node.view_data.height = node.view_data.element.clientHeight;\n        };\n        this.init_nodes = function () {\n            var nodes = _this.tsm.mind.nodes;\n            var doc_frag = tools_1.$doc.createDocumentFragment();\n            for (var nodeid in nodes) {\n                if (nodeid)\n                    _this.create_node_element(nodes[nodeid], doc_frag);\n            }\n            _this.e_nodes.appendChild(doc_frag);\n            for (var nodeid in nodes) {\n                if (nodeid)\n                    _this.init_nodes_size(nodes[nodeid]);\n            }\n        };\n        this.add_node = function (node) {\n            _this.create_node_element(node, _this.e_nodes);\n            _this.init_nodes_size(node);\n        };\n        this.create_node_element = function (node, parent_node) {\n            var d = tools_1.$doc.createElement(constants_1.TSM_Node_Names.node);\n            if (node.isroot) {\n                d.className = \"root\";\n                // d.style.visibility = \"visible\";\n            }\n            else {\n                var d_e = tools_1.$doc.createElement(constants_1.TSM_Node_Names.fold);\n                tools_1.$pushText(d_e, \"-\");\n                d_e.setAttribute(\"nodeid\", node.id);\n                d_e.style.visibility = \"hidden\";\n                parent_node.appendChild(d_e);\n                node.view_data.expander = d_e;\n            }\n            if (!!node.topic) {\n                if (_this.opts.support_html) {\n                    tools_1.$pushChild(d, node.topic);\n                }\n                else {\n                    tools_1.$pushText(d, node.topic);\n                }\n            }\n            d.setAttribute(\"nodeid\", node.id);\n            // d.style.visibility = \"hidden\";\n            _this._reset_node_custom_style(d, node.data);\n            parent_node.appendChild(d);\n            node.view_data.element = d;\n        };\n        this.remove_node = function (node) {\n            if (_this.selected_node != null && _this.selected_node.id === node.id) {\n                _this.selected_node = null;\n            }\n            if (_this.editing_node !== null && _this.editing_node.id === node.id && node.view_data.element) {\n                node.view_data.element.removeChild(_this.e_editor);\n                _this.editing_node = null;\n            }\n            var children = node.children;\n            var i = children.length;\n            while (i--) {\n                _this.remove_node(children[i]);\n            }\n            var element = node.view_data.element;\n            var expander = node.view_data.expander;\n            if (_this.e_nodes) {\n                element && _this.e_nodes.removeChild(element);\n                expander && _this.e_nodes.removeChild(expander);\n                node.view_data.element = null;\n                node.view_data.expander = null;\n            }\n        };\n        this.update_node = function (node) {\n            var element = node.view_data.element;\n            if (!!node.topic) {\n                if (_this.opts.support_html) {\n                    tools_1.$pushChild(element, node.topic);\n                }\n                else {\n                    tools_1.$pushText(element, node.topic);\n                }\n            }\n            node.view_data.width = element.clientWidth;\n            node.view_data.height = element.clientHeight;\n        };\n        this.select_node = function (node) {\n            if (!node || !_this.selected_node)\n                return;\n            var selected_node_ele = _this.selected_node.view_data.element;\n            var node_ele = node.view_data.element;\n            if (!!selected_node_ele) {\n                selected_node_ele.className = selected_node_ele.className.replace(/\\s*selected\\b/i, \"\");\n                _this.reset_node_custom_style(_this.selected_node);\n            }\n            if (!!node && !!node_ele) {\n                _this.selected_node = node;\n                node_ele.className += \" selected\";\n                _this.clear_node_custom_style(node);\n            }\n        };\n        this.select_clear = function () {\n            _this.select_node(null);\n        };\n        this.get_editing_node = function () {\n            return _this.editing_node;\n        };\n        this.is_editing = function () {\n            return !!_this.editing_node;\n        };\n        this.edit_node_begin = function (node) {\n            if (!node.topic) {\n                tools_1.$logger.warn(\"don't edit image nodes\");\n                return;\n            }\n            if (_this.editing_node != null) {\n                _this.edit_node_end();\n            }\n            _this.editing_node = node;\n            var element = node.view_data.element;\n            if (!element)\n                return;\n            var topic = node.topic;\n            var ncs = getComputedStyle(element);\n            _this.e_editor.value = topic;\n            _this.e_editor.style.width =\n                element.clientWidth - parseInt(ncs.getPropertyValue(\"padding-left\"), 10) - parseInt(ncs.getPropertyValue(\"padding-right\"), 10) + \"px\";\n            element.innerHTML = \"\";\n            element.appendChild(_this.e_editor);\n            element.style.zIndex = \"5\";\n            _this.e_editor.focus();\n            _this.e_editor.select();\n        };\n        this.edit_node_end = function () {\n            if (_this.editing_node != null) {\n                var node = _this.editing_node;\n                _this.editing_node = null;\n                var element = node.view_data.element;\n                var topic = _this.e_editor.value;\n                element.style.zIndex = \"auto\";\n                element.removeChild(_this.e_editor);\n                if (text_1.text.is_empty(topic) || node.topic === topic) {\n                    if (_this.opts.support_html) {\n                        tools_1.$pushChild(element, node.topic);\n                    }\n                    else {\n                        tools_1.$pushText(element, node.topic);\n                    }\n                }\n                else {\n                    _this.tsm.update_node(node.id, topic);\n                }\n            }\n        };\n        this.get_view_offset = function () {\n            var bounds = _this.layout.bounds;\n            return { x: (_this.size.w - bounds.e - bounds.w) / 2, y: _this.size.h / 2 };\n        };\n        this.resize = function () {\n            _this.e_canvas.width = 1;\n            _this.e_canvas.height = 1;\n            _this.e_nodes.style.width = \"1px\";\n            _this.e_nodes.style.height = \"1px\";\n            _this.expand_size();\n            _this._show();\n        };\n        this._show = function () {\n            _this.e_canvas.width = _this.size.w;\n            _this.e_canvas.height = _this.size.h;\n            _this.e_nodes.style.width = _this.size.w + \"px\";\n            _this.e_nodes.style.height = _this.size.h + \"px\";\n            _this.show_nodes();\n            _this.show_lines();\n            // this.layout.cache_valid = true;\n            _this.tsm.invoke_event_handle(__1.TSMindEventTypeMap.resize, { data: [] });\n        };\n        this.zoomIn = function () {\n            return _this.setZoom(_this.actualZoom + _this.zoomStep);\n        };\n        this.zoomOut = function () {\n            return _this.setZoom(_this.actualZoom - _this.zoomStep);\n        };\n        this.setZoom = function (zoom) {\n            if (zoom < _this.minZoom || zoom > _this.maxZoom) {\n                return false;\n            }\n            _this.actualZoom = zoom;\n            var _children = array_1._slice.call(_this.e_panel.children);\n            for (var _i = 0, _children_1 = _children; _i < _children_1.length; _i++) {\n                var child = _children_1[_i];\n                child.style.transform = \"scale(\" + zoom + \")\";\n            }\n            _this.show(true);\n            return true;\n        };\n        this._center_root = function () {\n            // center root node\n            var outer_w = _this.e_panel.clientWidth;\n            var outer_h = _this.e_panel.clientHeight;\n            if (_this.size.w > outer_w) {\n                var _offset = _this.get_view_offset();\n                _this.e_panel.scrollLeft = _offset.x - outer_w / 2;\n            }\n            if (_this.size.h > outer_h) {\n                _this.e_panel.scrollTop = (_this.size.h - outer_h) / 2;\n            }\n        };\n        this.show = function (keep_center) {\n            tools_1.$logger.debug(\"view.show\");\n            _this.expand_size();\n            _this._show();\n            if (keep_center) {\n                _this._center_root();\n            }\n        };\n        this.relayout = function () {\n            _this.expand_size();\n            _this._show();\n        };\n        this.save_location = function (node) {\n            var vd = node.view_data;\n            if (vd)\n                vd._saved_location = {\n                    x: Number(vd.element.style.left) - _this.e_panel.scrollLeft,\n                    y: Number(vd.element.style.top) - _this.e_panel.scrollTop\n                };\n        };\n        this.restore_location = function (node) {\n            var vd = node.view_data;\n            if (vd && vd.element) {\n                var _ele = vd.element;\n                _this.e_panel.scrollLeft = Number(_ele.style.left) - vd._saved_location.x;\n                _this.e_panel.scrollTop = Number(vd.element.style.top) - vd._saved_location.y;\n            }\n        };\n        this.clear_nodes = function () {\n            var mind = _this.tsm.mind;\n            if (mind == null) {\n                return;\n            }\n            var nodes = mind.nodes;\n            var node = null;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                node.view_data.element = null;\n                node.view_data.expander = null;\n            }\n            _this.e_nodes.innerHTML = \"\";\n        };\n        this.show_nodes = function () {\n            var nodes = _this.tsm.mind.nodes;\n            var _offset = _this.get_view_offset();\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                var node = nodes[nodeid];\n                tools_1.$logger.log(node);\n                var node_element = node.view_data.element;\n                var expander = node.view_data.expander;\n                if (!node_element)\n                    continue;\n                if (!_this.layout.is_visible(node)) {\n                    node_element.style.display = \"none\";\n                    expander.style.display = \"none\";\n                    continue;\n                }\n                _this.reset_node_custom_style(node);\n                var p = _this.layout.get_node_point(node);\n                node.view_data.abs_x = _offset.x + p.x;\n                node.view_data.abs_y = _offset.y + p.y;\n                node_element.style.left = node.view_data.abs_x + \"px\";\n                node_element.style.top = node.view_data.abs_y + \"px\";\n                node_element.style.display = \"\";\n                node_element.style.visibility = \"visible\";\n                //\n                if (!node.isroot && node.children.length > 0) {\n                    var expander_text = node.expanded ? \"-\" : \"+\";\n                    var p_expander = _this.layout.get_expander_point(node);\n                    if (expander) {\n                        expander.style.left = _offset.x + p_expander.x + \"px\";\n                        expander.style.top = _offset.y + p_expander.y + \"px\";\n                        expander.style.display = \"\";\n                        expander.style.visibility = \"visible\";\n                        tools_1.$pushText(expander, expander_text);\n                    }\n                }\n                // hide expander while all children have been removed\n                if (!node.isroot && node.children.length === 0 && expander) {\n                    expander.style.display = \"none\";\n                    expander.style.visibility = \"hidden\";\n                }\n            }\n        };\n        this.reset_node_custom_style = function (node) {\n            _this._reset_node_custom_style(node.view_data.element, node.data);\n        };\n        this._reset_node_custom_style = function (node_element, node_data) {\n            if (\"background-color\" in node_data) {\n                node_element.style.backgroundColor = node_data[\"background-color\"];\n            }\n            if (\"foreground-color\" in node_data) {\n                node_element.style.color = node_data[\"foreground-color\"];\n            }\n            if (\"width\" in node_data) {\n                node_element.style.width = node_data.width + \"px\";\n            }\n            if (\"height\" in node_data) {\n                node_element.style.height = node_data.height + \"px\";\n            }\n            if (\"font-size\" in node_data) {\n                node_element.style.fontSize = node_data[\"font-size\"] + \"px\";\n            }\n            if (\"font-weight\" in node_data) {\n                node_element.style.fontWeight = node_data[\"font-weight\"];\n            }\n            if (\"font-style\" in node_data) {\n                node_element.style.fontStyle = node_data[\"font-style\"];\n            }\n            if (\"background-image\" in node_data) {\n                var backgroundImage = node_data[\"background-image\"];\n                if (backgroundImage.startsWith(\"data\") && node_data.width && node_data.height) {\n                    var img = new Image();\n                    img.onload = function () {\n                        var c = tools_1.$doc.createElement(\"canvas\");\n                        c.width = node_element.clientWidth;\n                        c.height = node_element.clientHeight;\n                        var img = this;\n                        if (c.getContext) {\n                            var ctx = c.getContext(\"2d\");\n                            ctx.drawImage(img, 2, 2, node_element.clientWidth, node_element.clientHeight);\n                            var scaledImageData = c.toDataURL();\n                            node_element.style.backgroundImage = \"url(\" + scaledImageData + \")\";\n                        }\n                    };\n                    img.src = backgroundImage;\n                }\n                else {\n                    node_element.style.backgroundImage = \"url(\" + backgroundImage + \")\";\n                }\n                node_element.style.backgroundSize = \"99%\";\n                if (\"background-rotation\" in node_data) {\n                    node_element.style.transform = \"rotate(\" + node_data[\"background-rotation\"] + \"deg)\";\n                }\n            }\n        };\n        this.clear_node_custom_style = function (node) {\n            var node_element = node.view_data.element;\n            if (node_element) {\n                node_element.style.backgroundColor = \"\";\n                node_element.style.color = \"\";\n            }\n        };\n        this.clear_lines = function (canvas_ctx) {\n            if (canvas_ctx === void 0) { canvas_ctx = _this.canvas_ctx; }\n            canvas_1.canvas.clear(canvas_ctx, 0, 0, _this.size.w, _this.size.h);\n        };\n        this.show_lines = function (canvas_ctx) {\n            if (canvas_ctx === void 0) { canvas_ctx = _this.canvas_ctx; }\n            _this.clear_lines(canvas_ctx);\n            var nodes = _this.tsm.mind.nodes;\n            var node = null;\n            var pin = null;\n            var pout = null;\n            var _offset = _this.get_view_offset();\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                if (!!node.isroot) {\n                    continue;\n                }\n                if (\"visible\" in node.layout_data && !node.layout_data.visible) {\n                    continue;\n                }\n                pin = _this.layout.get_node_point_in(node);\n                pout = _this.layout.get_node_point_out(node.parent);\n                _this.draw_line(pout, pin, _offset, canvas_ctx);\n            }\n        };\n        this.draw_line = function (pin, pout, offset, canvas_ctx) {\n            if (canvas_ctx === void 0) { canvas_ctx = _this.canvas_ctx; }\n            canvas_ctx.strokeStyle = _this.opts.line_color;\n            canvas_ctx.lineWidth = _this.opts.line_width;\n            canvas_ctx.lineCap = \"round\";\n            canvas_1.canvas.bezierto(canvas_ctx, pin.x + offset.x, pin.y + offset.y, pout.x + offset.x, pout.y + offset.y);\n        };\n        this.opts = options;\n        this.tsm = tsm;\n        this.layout = tsm.layout_provider;\n        tools_1.$logger.debug(\"view.init\");\n        this.container = tools_1.$isEl(this.opts.container) ? this.opts.container : tools_1.$elByID(this.opts.container);\n        if (!this.container) {\n            tools_1.$logger.error(\"the options.view.container was not be found in dom\");\n            return;\n        }\n        this.e_panel.className = \"jsmind-inner\";\n        this.e_panel.appendChild(this.e_canvas);\n        this.e_panel.appendChild(this.e_nodes);\n        this.e_editor.className = \"jsmind-editor\";\n        this.e_editor.type = \"text\";\n        var v = this;\n        dom_1.dom.add_event(this.e_editor, \"keydown\", function (e) {\n            var evt = e || event;\n            if (evt.keyCode === 13) {\n                v.edit_node_end();\n                evt.stopPropagation();\n            }\n        });\n        dom_1.dom.add_event(this.e_editor, \"blur\", function () {\n            v.edit_node_end();\n        });\n        this.container.appendChild(this.e_panel);\n    }\n    view_provider.prototype.get_binded_nodeid = function (element) {\n        if (element == null) {\n            return null;\n        }\n        var tagName = element.tagName.toLowerCase();\n        if (tagName === constants_1.TSM_Node_Names.nodes || tagName === \"body\" || tagName === \"html\") {\n            return null;\n        }\n        if (tagName === constants_1.TSM_Node_Names.node || tagName === constants_1.TSM_Node_Names.fold) {\n            return element.getAttribute(\"nodeid\");\n        }\n        else if (element.parentElement) {\n            return this.get_binded_nodeid(element.parentElement);\n        }\n        return null;\n    };\n    return view_provider;\n}());\nexports[\"default\"] = view_provider;\n","\"use strict\";\nexports.__esModule = true;\nvar dom_1 = require(\"../../util/dom\");\nvar tools_1 = require(\"../../util/tools\");\nvar __1 = require(\"..\");\nvar util_1 = require(\"../../util\");\nvar shortcut_provider = /** @class */ (function () {\n    function shortcut_provider(tsm, options) {\n        var _this = this;\n        this._mapping = {};\n        this.enable_shortcut = function () {\n            _this.opts.enable = true;\n        };\n        this.disable_shortcut = function () {\n            _this.opts.enable = false;\n        };\n        this.handler = function (e) {\n            if (e === void 0) { e = event; }\n            if (_this.tsm.view_provider.is_editing()) {\n                return;\n            }\n            if (!_this.opts.enable) {\n                return true;\n            }\n            var kc = e.keyCode;\n            if (kc in _this._mapping) {\n                _this._mapping[kc].call(_this, _this.tsm, e);\n            }\n        };\n        this.handle_addchild = function (tsm) {\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                var nodeid = util_1[\"default\"].uuid.newid();\n                var node = tsm.add_node(selected_node, nodeid, \"New Node\");\n                if (!!node) {\n                    tsm.select_node(nodeid);\n                    tsm.begin_edit(nodeid);\n                }\n            }\n        };\n        this.handle_addbrother = function (tsm) {\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node && !selected_node.isroot) {\n                var nodeid = util_1[\"default\"].uuid.newid();\n                var node = tsm.insert_node_after(selected_node, nodeid, \"New Node\");\n                if (!!node) {\n                    tsm.select_node(nodeid);\n                    tsm.begin_edit(nodeid);\n                }\n            }\n        };\n        this.handle_editnode = function (tsm) {\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                tsm.begin_edit(selected_node);\n            }\n        };\n        this.handle_delnode = function (tsm) {\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node && !selected_node.isroot) {\n                tsm.select_node(selected_node.parent);\n                tsm.remove_node(selected_node);\n            }\n        };\n        this.handle_toggle = function (tsm, e) {\n            if (e === void 0) { e = event; }\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                tsm.toggle_node(selected_node.id);\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        };\n        this.handle_up = function (tsm, e) {\n            if (e === void 0) { e = event; }\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                var up_node = tsm.find_node_before(selected_node);\n                if (!up_node) {\n                    var np = tsm.find_node_before(selected_node.parent);\n                    if (!!np && np.children.length > 0) {\n                        up_node = np.children[np.children.length - 1];\n                    }\n                }\n                if (!!up_node) {\n                    tsm.select_node(up_node);\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        };\n        this.handle_down = function (tsm, e) {\n            if (e === void 0) { e = event; }\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                var down_node = tsm.find_node_after(selected_node);\n                if (!down_node) {\n                    var np = tsm.find_node_after(selected_node.parent);\n                    if (!!np && np.children.length > 0) {\n                        down_node = np.children[0];\n                    }\n                }\n                if (!!down_node) {\n                    tsm.select_node(down_node);\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        };\n        this.handle_left = function (tsm, e) {\n            _this._handle_direction(tsm, e, __1[\"default\"].direction.left);\n        };\n        this.handle_right = function (tsm, e) {\n            _this._handle_direction(tsm, e, __1[\"default\"].direction.right);\n        };\n        this._handle_direction = function (tsm, e, d) {\n            if (e === void 0) { e = event; }\n            var selected_node = tsm.get_selected_node();\n            var node = null;\n            if (!!selected_node) {\n                if (selected_node.isroot) {\n                    var c = selected_node.children;\n                    var children = [];\n                    for (var i = 0; i < c.length; i++) {\n                        if (c[i].direction === d) {\n                            children.push(i);\n                        }\n                    }\n                    node = c[children[Math.floor((children.length - 1) / 2)]];\n                }\n                else if (selected_node.direction === d) {\n                    var children = selected_node.children;\n                    var childrencount = children.length;\n                    if (childrencount > 0) {\n                        node = children[Math.floor((childrencount - 1) / 2)];\n                    }\n                }\n                else {\n                    node = selected_node.parent;\n                }\n                if (!!node) {\n                    tsm.select_node(node);\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        };\n        this.tsm = tsm;\n        this.opts = options;\n        this.mapping = options.mapping;\n        this.handles = options.handles;\n        dom_1.dom.add_event(tools_1.$doc, \"keydown\", this.handler.bind(this));\n        this.handles.addchild = this.handle_addchild;\n        this.handles.addbrother = this.handle_addbrother;\n        this.handles.editnode = this.handle_editnode;\n        this.handles.delnode = this.handle_delnode;\n        this.handles.toggle = this.handle_toggle;\n        this.handles.up = this.handle_up;\n        this.handles.down = this.handle_down;\n        this.handles.left = this.handle_left;\n        this.handles.right = this.handle_right;\n        for (var handle in this.mapping) {\n            if (!!this.mapping[handle] && handle in this.handles) {\n                this._mapping[this.mapping[handle]] = this.handles[handle];\n            }\n        }\n    }\n    return shortcut_provider;\n}());\nexports[\"default\"] = shortcut_provider;\n","\"use strict\";\nexports.__esModule = true;\nvar draggable_1 = require(\"./draggable\");\nvar screenshot_1 = require(\"./screenshot\");\n// global plugin list\nexports.GLOBAl_PLUGIN_LIST = {};\n/**\n * register global plugin list\n * @param initializer: ITSMPlugin\n */\nfunction globalUse(pname, initializer) {\n    exports.GLOBAl_PLUGIN_LIST[pname] = initializer;\n}\nexports.globalUse = globalUse;\nexports[\"default\"] = globalUse;\n// global regiter drag support\nglobalUse(\"draggable\", draggable_1[\"default\"]);\nglobalUse(\"screenshot\", screenshot_1[\"default\"]);\n","\"use strict\";\nexports.__esModule = true;\nvar __1 = require(\"..\");\nvar tools_1 = require(\"../../util/tools\");\nvar constants_1 = require(\"../../util/constants\");\nvar canvas_1 = require(\"../../util/canvas\");\nvar dom_1 = require(\"../../util/dom\");\nvar node_1 = require(\"../node\");\nvar dragOptions = {\n    line_width: 5,\n    lookup_delay: 500,\n    lookup_interval: 80\n};\nvar clear_selection = \"getSelection\" in window\n    ? function () {\n        window.getSelection().removeAllRanges();\n    }\n    : function () {\n        document.selection.empty();\n    };\nvar draggable = /** @class */ (function () {\n    function draggable(tsm, opts) {\n        var _this = this;\n        this.e_canvas = null;\n        this.canvas_ctx = null;\n        this.shadow = null;\n        this.shadow_w = 0;\n        this.shadow_h = 0;\n        this.active_node = null;\n        this.target_node = null;\n        this.target_direct = null;\n        this.client_w = 0;\n        this.client_h = 0;\n        this.client_hw = 0;\n        this.client_hh = 0;\n        this.offset_x = 0;\n        this.offset_y = 0;\n        // private set\n        // whether tag the drag-event has begun!\n        this._drag_begun = false;\n        this._drag_moved = false;\n        this.resize = function () {\n            _this.shadow && _this.tsm.view_provider.e_nodes.appendChild(_this.shadow);\n            _this.e_canvas.width = _this.tsm.view_provider.size.w;\n            _this.e_canvas.height = _this.tsm.view_provider.size.h;\n        };\n        this._create_canvas = function () {\n            var c = tools_1.$doc.createElement(\"canvas\");\n            c.width = Number(_this.tsm.view_provider.e_panel.clientWidth);\n            c.height = Number(_this.tsm.view_provider.e_panel.clientHeight);\n            _this.tsm.view_provider.e_panel.appendChild(c);\n            var ctx = c.getContext(\"2d\");\n            _this.e_canvas = c;\n            _this.canvas_ctx = ctx;\n        };\n        this._create_shadow = function () {\n            var s = tools_1.$doc.createElement(constants_1.TSM_Node_Names.node);\n            s.style.visibility = \"hidden\";\n            s.style.zIndex = \"3\";\n            s.style.cursor = \"move\";\n            s.style.opacity = \"0.7\";\n            _this.shadow = s;\n            _this.tsm.view_provider.e_panel.appendChild(s);\n        };\n        this.reset_shadow = function (el) {\n            if (!_this.shadow)\n                return;\n            var s = _this.shadow.style;\n            _this.shadow.innerHTML = el.innerHTML;\n            s.left = el.style.left;\n            s.top = el.style.top;\n            s.width = el.style.width;\n            s.height = el.style.height;\n            s.backgroundImage = el.style.backgroundImage;\n            s.backgroundSize = el.style.backgroundSize;\n            s.transform = el.style.transform;\n            _this.shadow_w = _this.shadow.clientWidth;\n            _this.shadow_h = _this.shadow.clientHeight;\n        };\n        this.show_shadow = function () {\n            if (!_this._drag_moved && _this.shadow) {\n                _this.shadow.style.visibility = \"visible\";\n            }\n        };\n        this.hide_shadow = function () {\n            _this.shadow.style.visibility = \"hidden\";\n        };\n        this.clear_lines = function () {\n            _this.canvas_ctx && canvas_1.canvas.clear(_this.canvas_ctx, 0, 0, _this.tsm.view_provider.size.w, _this.tsm.view_provider.size.h);\n        };\n        this._magnet_shadow = function (node) {\n            if (!!node && !!_this.canvas_ctx) {\n                _this.canvas_ctx.lineWidth = dragOptions.line_width;\n                _this.canvas_ctx.strokeStyle = \"rgba(0,0,0,0.3)\";\n                _this.canvas_ctx.lineCap = \"round\";\n                _this.clear_lines();\n                canvas_1.canvas.lineto(_this.canvas_ctx, node.sp.x, node.sp.y, node.np.x, node.np.y);\n            }\n        };\n        this._lookup_close_node = function () {\n            var root = _this.tsm.get_root();\n            if (!root)\n                return null;\n            var root_location = root.get_location();\n            var root_size = root.get_size();\n            var root_x = root_location.x + root_size.w / 2;\n            // console.info(root_location);\n            var sw = _this.shadow_w;\n            var sh = _this.shadow_h;\n            var sx = _this.shadow.offsetLeft || 0;\n            var sy = _this.shadow.offsetTop || 0;\n            var ns;\n            var nl;\n            var direct = sx + sw / 2 >= root_x ? __1[\"default\"].direction.right : __1[\"default\"].direction.left;\n            var nodes = _this.tsm.mind.nodes;\n            if (!nodes)\n                return null;\n            var node = null;\n            var min_distance = Number.MAX_VALUE;\n            var distance = 0;\n            var closest_node = null;\n            var closest_p = null;\n            var shadow_p = null;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                var np = void 0;\n                var sp = void 0;\n                node = nodes[nodeid];\n                if (node.isroot || node.direction === direct) {\n                    if (node.id === _this.active_node.id) {\n                        continue;\n                    }\n                    ns = node.get_size();\n                    nl = node.get_location();\n                    if (direct === __1[\"default\"].direction.right) {\n                        if (sx - nl.x - ns.w <= 0) {\n                            continue;\n                        }\n                        distance = Math.abs(sx - nl.x - ns.w) + Math.abs(sy + sh / 2 - nl.y - ns.h / 2);\n                        np = { x: nl.x + ns.w - dragOptions.line_width, y: nl.y + ns.h / 2 };\n                        sp = { x: sx + dragOptions.line_width, y: sy + sh / 2 };\n                    }\n                    else {\n                        if (nl.x - sx - sw <= 0) {\n                            continue;\n                        }\n                        distance = Math.abs(sx + sw - nl.x) + Math.abs(sy + sh / 2 - nl.y - ns.h / 2);\n                        np = { x: nl.x + dragOptions.line_width, y: nl.y + ns.h / 2 };\n                        sp = { x: sx + sw - dragOptions.line_width, y: sy + sh / 2 };\n                    }\n                    if (distance < min_distance) {\n                        closest_node = node;\n                        closest_p = np;\n                        shadow_p = sp;\n                        min_distance = distance;\n                    }\n                }\n            }\n            var result_node = null;\n            if (!!closest_node) {\n                result_node = {\n                    node: closest_node,\n                    direction: direct,\n                    sp: shadow_p,\n                    np: closest_p\n                };\n            }\n            return result_node;\n        };\n        // to ensure better draw-line performance\n        this.lookup_close_node = tools_1.$debounce(function () {\n            var node_data = _this._lookup_close_node();\n            if (!!node_data) {\n                _this._magnet_shadow(node_data);\n                _this.target_node = node_data.node;\n                _this.target_direct = node_data.direction;\n            }\n        });\n        this._event_bind = function () {\n            if (!_this.tsm.view_provider.container)\n                return;\n            var _self = _this;\n            var container = _this.tsm.view_provider.container;\n            dom_1.dom.add_event(container, \"mousedown\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.dragstart.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"mousemove\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.drag.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"mouseup\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.dragend.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"touchstart\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.dragstart.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"touchmove\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.drag.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"touchend\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.dragend.call(_self, e);\n            });\n        };\n        this.dragstart = function (e) {\n            if (e === void 0) { e = event; }\n            if (_this._drag_begun) {\n                return;\n            }\n            if (!_this.tsm.get_editable()) {\n                return;\n            }\n            _this.active_node = null;\n            var tsview = _this.tsm.view_provider;\n            var el = (e.target || e.srcElement);\n            if (el.tagName.toLowerCase() !== constants_1.TSM_Node_Names.node) {\n                return;\n            }\n            var nodeid = tsview.get_binded_nodeid(el);\n            var isTouch = e.type.match(/^touch/);\n            if (!!nodeid) {\n                var node = _this.tsm.get_node(nodeid);\n                if (!!node && !node.isroot) {\n                    _this.reset_shadow(el);\n                    _this.active_node = node;\n                    var _client = (isTouch ? e.touches[0] : e);\n                    _this.offset_x = _client.clientX - el.offsetLeft;\n                    _this.offset_y = _client.clientY - el.offsetTop;\n                    _this.client_hw = Math.floor(el.clientWidth / 2);\n                    _this.client_hh = Math.floor(el.clientHeight / 2);\n                    // start to drag\n                    _this._drag_begun = true;\n                }\n            }\n        };\n        this.drag = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.tsm.get_editable()) {\n                return;\n            }\n            if (_this._drag_begun) {\n                var isTouch = e.type.match(/^touch/);\n                e.preventDefault();\n                _this.show_shadow();\n                _this._drag_moved = true;\n                clear_selection();\n                var _client = (isTouch ? e.touches[0] : e);\n                var px = _client.clientX - _this.offset_x;\n                var py = _client.clientY - _this.offset_y;\n                _this.shadow.style.left = px + \"px\";\n                _this.shadow.style.top = py + \"px\";\n                clear_selection();\n                _this.lookup_close_node();\n            }\n        };\n        this.dragend = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.tsm.get_editable()) {\n                return;\n            }\n            if (_this._drag_begun) {\n                if (_this._drag_moved) {\n                    var src_node = _this.active_node;\n                    var target_node = _this.target_node;\n                    var target_direct = _this.target_direct;\n                    src_node && target_node && target_direct && _this.move_node(src_node, target_node, target_direct);\n                }\n                _this.hide_shadow();\n                _this.clear_lines();\n                _this._drag_moved = false;\n                _this._drag_begun = false;\n            }\n        };\n        this.move_node = function (src_node, target_node, target_direct) {\n            if (!_this.shadow)\n                return;\n            var shadow_h = _this.shadow.offsetTop;\n            if (!!target_node && !!src_node && !node_1.TSM_node.inherited(src_node, target_node)) {\n                // lookup before_node\n                var sibling_nodes = target_node.children;\n                var sc = sibling_nodes.length;\n                var node = null;\n                var delta_y = Number.MAX_VALUE;\n                var node_before = null;\n                var beforeid = \"_last_\";\n                while (sc--) {\n                    node = sibling_nodes[sc];\n                    if (node.direction === target_direct && node.id !== src_node.id) {\n                        var dy = node.get_location().y - shadow_h;\n                        if (dy > 0 && dy < delta_y) {\n                            delta_y = dy;\n                            node_before = node;\n                            beforeid = \"_first_\";\n                        }\n                    }\n                }\n                if (!!node_before) {\n                    beforeid = node_before.id;\n                }\n                _this.tsm.move_node(src_node.id, beforeid, target_node.id, target_direct);\n            }\n            _this.active_node = null;\n            _this.target_node = null;\n            _this.target_direct = null;\n        };\n        this.event_handle = function (type) {\n            if (type === __1[\"default\"].event_type.resize) {\n                _this.resize();\n            }\n        };\n        this.tsm = tsm;\n        this.options = opts;\n        tsm.add_event_listener(this.event_handle);\n        this._create_canvas();\n        this._create_shadow();\n        this._event_bind();\n    }\n    return draggable;\n}());\nexports[\"default\"] = draggable;\n","\"use strict\";\nexports.__esModule = true;\nvar __1 = require(\"..\");\nvar tools_1 = require(\"../../util/tools\");\nvar dom_1 = require(\"../../util/dom\");\nvar canvas_1 = require(\"../../util/canvas\");\nvar screenshot = /** @class */ (function () {\n    function screenshot(tsm, opts) {\n        var _this = this;\n        this.canvas_elem = null;\n        this.canvas_ctx = null;\n        this._inited = false;\n        this.shoot = function (callback) {\n            _this.init();\n            var scs = _this;\n            _this._draw(function () {\n                if (!!callback) {\n                    callback(scs);\n                }\n                scs.clean();\n            });\n            _this._watermark();\n        };\n        this.shootDownload = function () {\n            _this.shoot(function (scs) {\n                scs._download();\n            });\n        };\n        this.shootAsDataURL = function (callback) {\n            _this.shoot(function (scs) {\n                callback(scs.canvas_elem.toDataURL());\n            });\n        };\n        this.resize = function () {\n            if (_this._inited && _this.canvas_elem) {\n                _this.canvas_elem.width = _this.tsm.view_provider.size.w;\n                _this.canvas_elem.height = _this.tsm.view_provider.size.h;\n            }\n        };\n        this.clean = function () {\n            var c = _this.canvas_elem;\n            if (c && _this.canvas_ctx)\n                _this.canvas_ctx.clearRect(0, 0, c.width, c.height);\n        };\n        this._draw = function (callback) {\n            var ctx = _this.canvas_ctx;\n            if (!ctx)\n                return;\n            ctx.textAlign = \"left\";\n            ctx.textBaseline = \"top\";\n            _this._draw_lines();\n            _this._draw_nodes(callback);\n        };\n        this._watermark = function () {\n            var c = _this.canvas_elem;\n            var ctx = _this.canvas_ctx;\n            if (!c || !ctx)\n                return;\n            ctx.textAlign = \"right\";\n            ctx.textBaseline = \"bottom\";\n            ctx.fillStyle = \"#000\";\n            ctx.font = \"11px Verdana,Arial,Helvetica,sans-serif\";\n            ctx.fillText(\"hizzgdev.github.io/jsmind\", c.width - 5.5, c.height - 2.5);\n            ctx.textAlign = \"left\";\n            ctx.fillText(location.href, 5.5, c.height - 2.5);\n        };\n        this._draw_lines = function () {\n            _this.canvas_ctx && _this.tsm.view_provider.show_lines(_this.canvas_ctx);\n        };\n        this._draw_nodes = function (callback) {\n            var nodes = _this.tsm.mind.nodes;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                var node = nodes[nodeid];\n                _this._draw_node(node);\n            }\n            function check_nodes_ready() {\n                console.log(\"check_node_ready\" + new Date());\n                var allOk = true;\n                for (var nodeid in nodes) {\n                    if (!nodeid)\n                        continue;\n                    var node = nodes[nodeid];\n                    allOk = allOk && node.expands.screen_shot_ready;\n                }\n                if (!allOk) {\n                    setTimeout(check_nodes_ready, 200);\n                }\n                else {\n                    setTimeout(callback, 200);\n                }\n            }\n            check_nodes_ready();\n        };\n        this._draw_node = function (node) {\n            var ctx = _this.canvas_ctx;\n            var view_data = node.view_data;\n            var node_element = view_data.element;\n            if (!node_element || !ctx)\n                return;\n            var ncs = getComputedStyle(node_element);\n            if (!dom_1.dom.is_visible(ncs)) {\n                node.expands.screen_shot_ready = true;\n                return;\n            }\n            var bgcolor = dom_1.dom.css(ncs, \"background-color\");\n            var round_radius = parseInt(dom_1.dom.css(ncs, \"border-top-left-radius\"), 10);\n            var color = dom_1.dom.css(ncs, \"color\");\n            var padding_left = parseInt(dom_1.dom.css(ncs, \"padding-left\"), 10);\n            var padding_right = parseInt(dom_1.dom.css(ncs, \"padding-right\"), 10);\n            var padding_top = parseInt(dom_1.dom.css(ncs, \"padding-top\"), 10);\n            var padding_bottom = parseInt(dom_1.dom.css(ncs, \"padding-bottom\"), 10);\n            var text_overflow = dom_1.dom.css(ncs, \"text-overflow\");\n            var font = dom_1.dom.css(ncs, \"font-style\") + \" \" + dom_1.dom.css(ncs, \"font-variant\") + \" \" + dom_1.dom.css(ncs, \"font-weight\") + \" \" + dom_1.dom.css(ncs, \"font-size\") + \"/\" + dom_1.dom.css(ncs, \"line-height\") + \" \" + dom_1.dom.css(ncs, \"font-family\");\n            var rb = { x: view_data.abs_x || 0, y: view_data.abs_y || 0, w: (view_data.width || 0) + 1, h: (view_data.height || 0) + 1 };\n            var tb = { x: rb.x + padding_left, y: rb.y + padding_top, w: rb.w - padding_left - padding_right, h: rb.h - padding_top - padding_bottom };\n            ctx.font = font;\n            ctx.fillStyle = bgcolor;\n            ctx.beginPath();\n            canvas_1.canvas.rect(ctx, rb.x, rb.y, rb.w, rb.h, round_radius);\n            ctx.closePath();\n            ctx.fill();\n            ctx.fillStyle = color;\n            if (\"background-image\" in node.data) {\n                var backgroundUrl = dom_1.dom.css(ncs, \"background-image\").slice(5, -2);\n                node.expands.screen_shot_ready = false;\n                var rotation = 0;\n                if (\"background-rotation\" in node.data) {\n                    rotation = node.data[\"background-rotation\"];\n                }\n                canvas_1.canvas.image(ctx, backgroundUrl, rb.x, rb.y, rb.w, rb.h, round_radius, rotation, function () {\n                    node.expands.screen_shot_ready = true;\n                });\n            }\n            if (!!node.topic) {\n                if (text_overflow === \"ellipsis\") {\n                    canvas_1.canvas.text_ellipsis(ctx, node.topic, tb.x, tb.y, tb.w, tb.h);\n                }\n                else {\n                    var line_height = parseInt(dom_1.dom.css(ncs, \"line-height\"), 10);\n                    canvas_1.canvas.text_multiline(ctx, node.topic, tb.x, tb.y, tb.w, tb.h, line_height);\n                }\n            }\n            if (!!view_data.expander) {\n                _this._draw_expander(view_data.expander);\n            }\n            if (!(\"background-image\" in node.data)) {\n                node.expands.screen_shot_ready = true;\n            }\n        };\n        this._draw_expander = function (expander) {\n            var ctx = _this.canvas_ctx;\n            var ncs = getComputedStyle(expander);\n            if (!dom_1.dom.is_visible(ncs) || !ctx) {\n                return;\n            }\n            var style_left = dom_1.dom.css(ncs, \"left\");\n            var style_top = dom_1.dom.css(ncs, \"top\");\n            // const font = dom.css(ncs, \"font\");\n            var left = parseInt(style_left, 10);\n            var top = parseInt(style_top, 10);\n            var is_plus = expander.innerHTML === \"+\";\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.arc(left + 7, top + 7, 5, 0, Math.PI * 2, true);\n            ctx.moveTo(left + 10, top + 7);\n            ctx.lineTo(left + 4, top + 7);\n            if (is_plus) {\n                ctx.moveTo(left + 7, top + 4);\n                ctx.lineTo(left + 7, top + 10);\n            }\n            ctx.closePath();\n            ctx.stroke();\n        };\n        this._download = function () {\n            var c = _this.canvas_elem;\n            if (!c)\n                return;\n            var name = _this.tsm.mind.name + \".png\";\n            var _toblob = !!c.toBlob || !!c.msToBlob;\n            if (navigator.msSaveBlob && _toblob) {\n                if (\"toBlob\" in c)\n                    c.toBlob(function (blob) {\n                        navigator.msSaveBlob(blob, name);\n                    });\n                else if (\"msToBlob\" in c) {\n                    var blob = c.msToBlob();\n                    navigator.msSaveBlob(blob, name);\n                }\n            }\n            else {\n                var bloburl = _this.canvas_elem.toDataURL();\n                var anchor = tools_1.$doc.createElement(\"a\");\n                if (\"download\" in anchor) {\n                    anchor.style.visibility = \"hidden\";\n                    anchor.href = bloburl;\n                    anchor.download = name;\n                    tools_1.$doc.body.appendChild(anchor);\n                    var evt = tools_1.$doc.createEvent(\"MouseEvents\");\n                    evt.initEvent(\"click\", true, true);\n                    anchor.dispatchEvent(evt);\n                    tools_1.$doc.body.removeChild(anchor);\n                }\n                else {\n                    location.href = bloburl;\n                }\n            }\n        };\n        this.event_handle = function (type) {\n            if (type === __1.TSMindEventTypeMap.resize) {\n                _this.resize();\n            }\n        };\n        this.tsm = tsm;\n        this.options = opts;\n        tsm.add_event_listener(this.event_handle);\n    }\n    screenshot.prototype.init = function () {\n        if (this._inited) {\n            return;\n        }\n        console.log(\"init\");\n        var c = tools_1.$doc.createElement(\"canvas\");\n        var ctx = c.getContext(\"2d\");\n        this.canvas_elem = c;\n        this.canvas_ctx = ctx;\n        this.tsm.view_provider.e_panel.appendChild(c);\n        this._inited = true;\n        this.resize();\n    };\n    return screenshot;\n}());\nexports[\"default\"] = screenshot;\n"],"sourceRoot":""}