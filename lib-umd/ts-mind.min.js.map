{"version":3,"sources":["webpack://TSMind/webpack/universalModuleDefinition","webpack://TSMind/webpack/bootstrap","webpack://TSMind/./src/util/tools.ts","webpack://TSMind/./src/core/index.ts","webpack://TSMind/./src/util/constants.ts","webpack://TSMind/./src/core/node/index.ts","webpack://TSMind/./src/util/dom.ts","webpack://TSMind/./src/util/canvas.ts","webpack://TSMind/./src/core/mind/index.ts","webpack://TSMind/./src/util/index.ts","webpack://TSMind/./src/util/array.ts","webpack://TSMind/./src/core/format/node_array.ts","webpack://TSMind/./src/util/json.ts","webpack://TSMind/./src/util/text.ts","webpack://TSMind/./src/index.ts","webpack://TSMind/./node_modules/tslib/tslib.es6.js","webpack://TSMind/./src/core/provider/data.ts","webpack://TSMind/./src/util/file.ts","webpack://TSMind/./src/util/ajax.ts","webpack://TSMind/./src/util/uuid.ts","webpack://TSMind/./src/core/format/node_tree.ts","webpack://TSMind/./src/core/format/freemind.ts","webpack://TSMind/./src/core/provider/layout.ts","webpack://TSMind/./src/core/provider/view.ts","webpack://TSMind/./src/core/provider/shortcut.ts","webpack://TSMind/./src/core/pugin/index.ts","webpack://TSMind/./src/core/pugin/draggable.ts","webpack://TSMind/./src/core/pugin/screenshot.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$isFunc","tar","$isPlainObject","obj","toString","nodeType","setInterval","constructor","$hasOwnProperty","undefined","$noop","arg","_i","arguments","length","$logger","console","log","debug","error","warn","info","$doc","document","$elByID","id","getElementById","$pushText","parent","txt","hasChildNodes","firstChild","nodeValue","appendChild","createTextNode","$pushChild","child","HTMLElement","innerHTML","$isEl","el","$startWith","str","beg","slice","$extend","options","src","copy","copyIsArray","clone","target","deep","this","Array","isArray","$debounce","handler","tick","_timer","_dbce","args","_ctx","setTimeout","apply","clear","clearTimeout","constants_1","tools_1","data_1","layout_1","view_1","util_1","node_array_1","shortcut_1","pugin_1","use","globalUse","TSMindDirectionMap","left","center","right","TSMindEventTypeMap","show","resize","edit","select","TSMind","_this","container","mind","initialized","event_handles","_plugins","plugins","pname","plugin","init_plugins","tsm","opts","_all_plug","GLOBAl_PLUGIN_LIST","enable_edit","editable","disable_edit","enable_event_handle","event_handle","default_event_handle","disable_event_handle","get_editable","set_theme","theme","theme_old","view_provider","reset_theme","reset_custom_style","_event_bind","add_event","mousedown_handle","click_handle","dblclick_handle","e","event","enable_mousedown_handle","element","srcElement","nodeid","get_binded_nodeid","select_node","select_clear","enable_click_handle","is_expander","toggle_node","enable_dblclick_handle","begin_edit","node","is_node","the_node","get_node","edit_node_begin","end_edit","edit_node_end","isroot","save_location","layout_provider","relayout","restore_location","expand_node","collapse_node","expand_all","collapse_all","expand_to_depth","depth","_reset","reset","data_provider","_show","node_array","example","load","layout","invoke_event_handle","data","get_meta","author","version","get_data","data_format","get_root","add_node","parent_node","topic","reset_node_custom_style","evt","insert_node_before","node_before","beforeid","insert_node_after","node_after","afterid","remove_node","parentid","update_node","text","is_empty","move_node","direction","is_visible","selected","get_selected_node","is_node_visible","find_node_before","prev","c_1","children","ni","get_node_before","find_node_after","getthis","c_2","get_node_after","set_node_color","bgcolor","fgcolor","set_node_font_style","size","weight","style","set_node_background_image","image","width","height","rotation","set_node_background_rotation","add_event_listener","callback","push","type","j","_invoke_event_handle","Error","DEFAULT_OPTIONS","opts_layout","hspace","vspace","pspace","opts_view","support_html","hmargin","view","vmargin","line_width","line_color","shortcut_provider","shortcut","__version__","event_type","__name__","__authores__","enable","handles","mapping","addchild","addbrother","editnode","delnode","toggle","up","down","TSM_Node_Names","nodes","fold","__1","TSM_node","sId","iIndex","sTopic","oData","bIsRoot","oParent","eDirection","bExpanded","index","expanded","expands","view_data","expander","abs_x","abs_y","_saved_location","x","y","layout_data","side_index","offset_x","offset_y","outer_height","left_nodes","right_nodes","outer_height_left","outer_height_right","visible","_offset_","get_location","vd","get_size","w","h","inherited","pnode","pid","compare","node1","node2","i1","i2","dom","addEventListener","css","cstyle","property_name","getPropertyValue","visibility","display","canvas","bezierto","ctx","x1","y1","x2","y2","beginPath","moveTo","bezierCurveTo","stroke","lineto","lineTo","clearRect","rect","arcTo","text_multiline","lineheight","line","text_len","chars","split","test_line","textAlign","textBaseline","measureText","fillText","text_ellipsis","center_y","fittingString","max_width","ellipsis_width","len","substring","backgroundUrl","img","Image","onload","save","translate","closePath","clip","rotate","Math","PI","drawImage","restore","node_1","TSM_mind","set_root","_put_node","idx","the_parent_node","nodeindex","isNaN","children_len","_reindex","the_node_before","node_index","the_node_after","_move_node","_flow_node_direction","_move_node_internal","sibling","si","splice","_nparent","ci","keys","map","k","sort","canvas_1","file_1","json_1","ajax_1","dom_1","uuid_1","text_1","array","util","ajax","file","json","uuid","_slice","mind_1","meta","format","get_mind","source","df","_parse","_array","narray","reverse","root_id","_extract_root","_extract_subnode","root_json","_extract_data","node_json","extract_count","node_direction","sub_extract_count","_array_node","node_data_1","json2string","JSON","stringify","string2json","json_str","parse","merge","b","a","replace","__exportStar","__webpack_exports__","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","setPrototypeOf","__proto__","__","assign","indexOf","getOwnPropertySymbols","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","body","f","g","_","label","sent","trys","ops","verb","throw","return","iterator","v","op","TypeError","pop","ar","concat","asyncIterator","q","resume","fulfill","settle","shift","cooked","raw","mod","default","node_tree_1","freemind_1","mind_data","node_tree","freemind","read","file_data","fn_callback","reader","FileReader","readAsText","blob","_wind","Blob","bb","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","MSBlobBuilder","append","getBlob","navigator","msSaveBlob","bloburl","URL","webkitURL","createObjectURL","anchor","createElement","href","download","createEvent","initEvent","dispatchEvent","removeChild","location","_xhr","xhr","XMLHttpRequest","ActiveXObject","_eurl","url","encodeURIComponent","request","param","method","fail_callback","tmp_param","join","onreadystatechange","readyState","status","responseText","open","setRequestHeader","send","post","newid","Date","getTime","random","substr","_buildnode","node_root","children_1","node_parent","dir","children_2","node_data","children_3","array_1","xml","xml_doc","_parse_xml","xml_root","_find_root","_load_node","xmllines","_buildmap","DOMParser","parseFromString","async","loadXML","nodes_1","childNodes","tagName","_a","ns_1","parent_id","xml_node","node_id","getAttribute","node_topic","topic_children_1","topic_child","textContent","_load_attributes","node_expanded","node_position","attr_data","attr","pos","bounds","layout_direction","layout_offset","_layout_direction_root","children_count","isside","_layout_direction_side","subnode","unshift","_layout_offset_subnodes","max","total_height","nodes_count","node_outer_height","base_y","pd","set_visible","middle_height","_layout_offset_subnodes_height","get_node_offset","offset_cache","cache_valid","offset_p","get_node_point","get_node_point_in","get_node_point_out","pout_cache","get_expander_point","ex_p","ceil","get_min_size","pout","part_layout","target_depth","curr_nodes","curr_depth","root_layout_data","is_expand","e_panel","e_nodes","e_canvas","e_editor","canvas_ctx","getContext","selected_node","editing_node","actualZoom","zoomStep","minZoom","maxZoom","event_name","toLowerCase","clear_lines","clear_nodes","theme_name","className","init_nodes","expand_size","min_size","min_height","min_width","client_w","clientWidth","client_h","clientHeight","init_nodes_size","doc_frag","createDocumentFragment","create_node_element","d_e","setAttribute","_reset_node_custom_style","selected_node_ele","node_ele","clear_node_custom_style","get_editing_node","is_editing","ncs","getComputedStyle","parseInt","zIndex","focus","get_view_offset","show_nodes","show_lines","zoomIn","setZoom","zoomOut","zoom","_children_1","transform","_center_root","outer_w","outer_h","_offset","scrollLeft","scrollTop","keep_center","Number","top","_ele","node_element","expander_text","p_expander","backgroundColor","color","fontSize","fontWeight","fontStyle","backgroundImage","startsWith","scaledImageData","toDataURL","backgroundSize","pin","draw_line","offset","strokeStyle","lineWidth","lineCap","keyCode","stopPropagation","parentElement","handle","_mapping","enable_shortcut","disable_shortcut","kc","handle_addchild","handle_addbrother","handle_editnode","handle_delnode","handle_toggle","preventDefault","handle_up","up_node","np","handle_down","down_node","handle_left","_handle_direction","handle_right","floor","childrencount","draggable_1","screenshot_1","initializer","dragOptions","lookup_delay","lookup_interval","clear_selection","getSelection","removeAllRanges","selection","empty","draggable","shadow","shadow_w","shadow_h","active_node","target_node","target_direct","client_hw","client_hh","_drag_begun","_drag_moved","_create_canvas","_create_shadow","cursor","opacity","reset_shadow","show_shadow","hide_shadow","_magnet_shadow","sp","_lookup_close_node","nl","root_location","root_size","root_x","sw","sh","sx","offsetLeft","sy","offsetTop","direct","min_distance","MAX_VALUE","distance","closest_node","closest_p","shadow_p","abs","result_node","lookup_close_node","_self","dragstart","drag","dragend","tsview","isTouch","match","_client","touches","clientX","clientY","px","py","src_node","sibling_nodes","sc","delta_y","dy","screenshot","canvas_elem","_inited","shoot","init","scs","_draw","clean","_watermark","shootDownload","_download","shootAsDataURL","_draw_lines","_draw_nodes","fillStyle","font","_draw_node","check_nodes_ready","allOk","screen_shot_ready","round_radius","padding_left","padding_right","padding_top","padding_bottom","text_overflow","rb","tb","fill","line_height","_draw_expander","style_left","style_top","is_plus","arc","_toblob","toBlob","msToBlob"],"mappings":"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","file":"ts-mind.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TSMind\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TSMind\"] = factory();\n\telse\n\t\troot[\"TSMind\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","\"use strict\";\nexports.__esModule = true;\nexports.$noop = function () {\n    var arg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arg[_i] = arguments[_i];\n    }\n};\nexports.$logger = console || {\n    log: exports.$noop,\n    debug: exports.$noop,\n    error: exports.$noop,\n    warn: exports.$noop,\n    info: exports.$noop\n};\n// NODE Operation\nexports.$doc = window.document;\n// $g=>getElementById\nfunction $elByID(id) {\n    return exports.$doc.getElementById(id);\n}\nexports.$elByID = $elByID;\n// $t=>push-textNode\nfunction $pushText(parent, txt) {\n    if (parent.hasChildNodes()) {\n        parent.firstChild.nodeValue = txt;\n    }\n    else\n        parent.appendChild(exports.$doc.createTextNode(txt));\n}\nexports.$pushText = $pushText;\n// $h=>push-childNode\nfunction $pushChild(parent, child) {\n    if (child instanceof HTMLElement) {\n        parent.innerHTML = \"\";\n        parent.appendChild(child);\n    }\n    else {\n        parent.innerHTML = child;\n    }\n}\nexports.$pushChild = $pushChild;\n// $i=>isElement\nfunction $isEl(el) {\n    return \"nodeType\" in el;\n}\nexports.$isEl = $isEl;\n// To determine whether a string starting with [beg].\nfunction $startWith(str, beg) {\n    return str.slice(0, beg.length) === beg;\n}\nexports.$startWith = $startWith;\n// To determine whether a target is a Function.\nfunction $isFunc(tar) {\n    return typeof tar === \"function\";\n}\nexports.$isFunc = $isFunc;\n// The abbreviation of hasOwnProperty method.\nexports.$hasOwnProperty = Object.prototype.hasOwnProperty;\n// To determine the plain-object.\nfunction $isPlainObject(obj) {\n    // Must be an Object.\n    // Because of IE, we also have to check the presence of the constructor property.\n    // Make sure that DOM nodes and window objects don't pass through, as well\n    if (!obj || toString.call(obj) !== \"[object Object]\" || obj.nodeType || obj.setInterval) {\n        return false;\n    }\n    // Not own constructor property must be Object\n    if (obj.constructor && !exports.$hasOwnProperty.call(obj, \"constructor\") && !exports.$hasOwnProperty.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n        return false;\n    }\n    // Own properties are enumerated firstly, so to speed up,\n    // if last one is own, then all properties are own.\n    var key;\n    for (key in obj) {\n    }\n    return key === undefined || exports.$hasOwnProperty.call(obj, key);\n}\nexports.$isPlainObject = $isPlainObject;\nfunction $extend() {\n    var options;\n    var name;\n    var src;\n    var copy;\n    var copyIsArray;\n    var clone;\n    var target = arguments[0] || {};\n    var i = 1;\n    var length = arguments.length;\n    var deep = false;\n    // Handle a deep copy situation\n    if (typeof target === \"boolean\") {\n        deep = target;\n        // Skip the boolean and the target\n        target = arguments[i] || {};\n        i++;\n    }\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== \"object\" && !$isFunc(target)) {\n        target = {};\n    }\n    // Extend jQuery itself if only one argument is passed\n    if (i === length) {\n        target = this || {};\n        i--;\n    }\n    for (; i < length; i++) {\n        options = arguments[i];\n        // Only deal with non-null/undefined values\n        if (options !== null) {\n            // Extend the base object\n            for (name in options) {\n                if (!!name) {\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    copyIsArray = Array.isArray(copy);\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && ($isPlainObject(copy) || copyIsArray)) {\n                        src = target[name];\n                        // Ensure proper type for the source value\n                        if (copyIsArray && !Array.isArray(src)) {\n                            clone = [];\n                        }\n                        else if (!copyIsArray && !$isPlainObject(src)) {\n                            clone = {};\n                        }\n                        else {\n                            clone = src;\n                        }\n                        copyIsArray = false;\n                        // Never move original objects, clone them\n                        target[name] = $extend(deep, clone, copy);\n                        // Don't bring in undefined values\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n    }\n    // Return the modified object\n    return target;\n}\nexports.$extend = $extend;\n// debounce method\nfunction $debounce(handler, tick) {\n    if (tick === void 0) { tick = 10; }\n    var _timer = null;\n    function _dbce() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _ctx = this;\n        if (_timer) {\n            return;\n        }\n        _timer = setTimeout(function () {\n            handler.apply(_ctx, args);\n            _timer = null;\n        }, tick);\n    }\n    // clear debounce\n    _dbce.clear = function () {\n        clearTimeout(_timer);\n        _timer = null;\n    };\n    return _dbce;\n}\nexports.$debounce = $debounce;\n","\"use strict\";\nexports.__esModule = true;\nvar constants_1 = require(\"../util/constants\");\nvar tools_1 = require(\"../util/tools\");\nvar data_1 = require(\"./provider/data\");\nvar layout_1 = require(\"./provider/layout\");\nvar view_1 = require(\"./provider/view\");\nvar util_1 = require(\"../util\");\nvar node_array_1 = require(\"./format/node_array\");\nvar shortcut_1 = require(\"./provider/shortcut\");\nvar pugin_1 = require(\"./pugin\");\n// global use register\nexports.use = pugin_1.globalUse;\n// mind direction\nexports.TSMindDirectionMap = { left: -1, center: 0, right: 1 };\n// mind event type\nexports.TSMindEventTypeMap = { show: 1, resize: 2, edit: 3, select: 4 };\n// mind core class\nvar TSMind = /** @class */ (function () {\n    function TSMind(options) {\n        var _this = this;\n        // public properties\n        this.options = {\n            container: \"\"\n        };\n        this.mind = null;\n        this.initialized = false;\n        this.event_handles = [];\n        // private plugin list\n        this._plugins = {};\n        this.plugins = {};\n        /**\n         * register private plugin\n         * @param plugin: ITSMPlugin\n         */\n        this.use = function (pname, plugin) {\n            _this._plugins[pname] = plugin;\n        };\n        // initial plugin's main methods\n        this.init_plugins = function (tsm, opts) {\n            var _all_plug = tools_1.$extend({}, _this._plugins, pugin_1.GLOBAl_PLUGIN_LIST);\n            // call plugin in async way, to make sure plugin register no execution-order dependences.\n            setTimeout(function () {\n                for (var pname in _all_plug) {\n                    if (pname)\n                        // 确保Class类型的插件能够成功初始化\n                        _this.plugins[pname] = new _all_plug[pname](tsm, opts);\n                }\n            }, 0);\n        };\n        this.enable_edit = function () {\n            return (_this.options.editable = true);\n        };\n        this.disable_edit = function () {\n            return (_this.options.editable = false);\n        };\n        // call enable_event_handle('dblclick')\n        // options are 'mousedown', 'click', 'dblclick'\n        this.enable_event_handle = function (event_handle) {\n            _this.options.default_event_handle[\"enable_\" + event_handle + \"_handle\"] = true;\n        };\n        // call disable_event_handle('dblclick')\n        // options are 'mousedown', 'click', 'dblclick'\n        this.disable_event_handle = function (event_handle) {\n            _this.options.default_event_handle[\"enable_\" + event_handle + \"_handle\"] = false;\n        };\n        this.get_editable = function () {\n            return _this.options.editable;\n        };\n        this.set_theme = function (theme) {\n            var theme_old = _this.options.theme;\n            _this.options.theme = !!theme ? theme : \"primary\";\n            if (theme_old !== _this.options.theme) {\n                _this.view_provider.reset_theme();\n                _this.view_provider.reset_custom_style();\n            }\n        };\n        this._event_bind = function () {\n            _this.view_provider.add_event(_this, \"mousedown\", _this.mousedown_handle);\n            _this.view_provider.add_event(_this, \"click\", _this.click_handle);\n            _this.view_provider.add_event(_this, \"dblclick\", _this.dblclick_handle);\n        };\n        this.mousedown_handle = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.options.default_event_handle.enable_mousedown_handle) {\n                return;\n            }\n            var element = (e.target || e.srcElement);\n            var nodeid = _this.view_provider.get_binded_nodeid(element);\n            if (!!nodeid) {\n                _this.select_node(nodeid);\n            }\n            else {\n                _this.select_clear();\n            }\n        };\n        this.click_handle = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.options.default_event_handle.enable_click_handle) {\n                return;\n            }\n            var element = (e.target || e.srcElement);\n            var isexpander = _this.view_provider.is_expander(element);\n            if (isexpander) {\n                var nodeid = _this.view_provider.get_binded_nodeid(element);\n                if (!!nodeid) {\n                    _this.toggle_node(nodeid);\n                }\n            }\n        };\n        this.dblclick_handle = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.options.default_event_handle.enable_dblclick_handle) {\n                return;\n            }\n            if (_this.get_editable()) {\n                var element = (e.target || e.srcElement);\n                var nodeid = _this.view_provider.get_binded_nodeid(element);\n                if (!!nodeid) {\n                    _this.begin_edit(nodeid);\n                }\n            }\n        };\n        this.begin_edit = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return false;\n                }\n                else {\n                    return _this.begin_edit(the_node);\n                }\n            }\n            if (_this.get_editable()) {\n                _this.view_provider.edit_node_begin(node);\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable.\");\n                return;\n            }\n        };\n        this.end_edit = function () {\n            _this.view_provider.edit_node_end();\n        };\n        this.toggle_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.toggle_node(the_node);\n                }\n            }\n            if (node.isroot) {\n                return;\n            }\n            _this.view_provider.save_location(node);\n            _this.layout_provider.toggle_node(node);\n            _this.view_provider.relayout();\n            _this.view_provider.restore_location(node);\n        };\n        this.expand_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.expand_node(the_node);\n                }\n            }\n            if (node.isroot) {\n                return;\n            }\n            _this.view_provider.save_location(node);\n            _this.layout_provider.expand_node(node);\n            _this.view_provider.relayout();\n            _this.view_provider.restore_location(node);\n        };\n        this.collapse_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.collapse_node(the_node);\n                }\n            }\n            if (node.isroot) {\n                return;\n            }\n            _this.view_provider.save_location(node);\n            _this.layout_provider.collapse_node(node);\n            _this.view_provider.relayout();\n            _this.view_provider.restore_location(node);\n        };\n        this.expand_all = function () {\n            _this.layout_provider.expand_all();\n            _this.view_provider.relayout();\n        };\n        this.collapse_all = function () {\n            _this.layout_provider.collapse_all();\n            _this.view_provider.relayout();\n        };\n        this.expand_to_depth = function (depth) {\n            _this.layout_provider.expand_to_depth(depth);\n            _this.view_provider.relayout();\n        };\n        this._reset = function () {\n            _this.view_provider.reset();\n            _this.layout_provider.reset();\n            _this.data_provider.reset();\n        };\n        this._show = function (mind) {\n            var m = mind || node_array_1.node_array.example;\n            _this.mind = _this.data_provider.load(m);\n            if (!_this.mind) {\n                tools_1.$logger.error(\"data.load error\");\n                return;\n            }\n            else {\n                tools_1.$logger.debug(\"data.load ok\");\n            }\n            _this.view_provider.load();\n            tools_1.$logger.debug(\"view.load ok\");\n            _this.layout_provider.layout();\n            tools_1.$logger.debug(\"layout.layout ok\");\n            _this.view_provider.show(true);\n            tools_1.$logger.debug(\"view.show ok\");\n            _this.invoke_event_handle(exports.TSMindEventTypeMap.show, { data: [mind] });\n        };\n        this.show = function (mind) {\n            _this._reset();\n            _this._show(mind);\n        };\n        this.get_meta = function () {\n            return {\n                name: _this.mind.name,\n                author: _this.mind.author,\n                version: _this.mind.version\n            };\n        };\n        this.get_data = function (data_format) {\n            if (data_format === void 0) { data_format = \"node_tree\"; }\n            return _this.data_provider.get_data(data_format);\n        };\n        this.get_root = function () {\n            return _this.mind.root;\n        };\n        this.get_node = function (nodeid) {\n            return _this.mind.get_node(nodeid);\n        };\n        this.add_node = function (parent_node, nodeid, topic, data) {\n            if (_this.get_editable()) {\n                var node = _this.mind.add_node(parent_node, nodeid, topic, data);\n                if (!!node) {\n                    _this.view_provider.add_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.view_provider.reset_node_custom_style(node);\n                    _this.expand_node(parent_node);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"add_node\", data: [parent_node.id, nodeid, topic, data], node: nodeid });\n                }\n                return node;\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return null;\n            }\n        };\n        this.insert_node_before = function (node_before, nodeid, topic, data) {\n            if (_this.get_editable()) {\n                var beforeid = util_1[\"default\"].is_node(node_before) ? node_before.id : node_before;\n                var node = _this.mind.insert_node_before(node_before, nodeid, topic, data);\n                if (!!node) {\n                    _this.view_provider.add_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"insert_node_before\", data: [beforeid, nodeid, topic, data], node: nodeid });\n                }\n                return node;\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return null;\n            }\n        };\n        this.insert_node_after = function (node_after, nodeid, topic, data) {\n            if (_this.get_editable()) {\n                var afterid = util_1[\"default\"].is_node(node_after) ? node_after.id : node_after;\n                var node = _this.mind.insert_node_after(node_after, nodeid, topic, data);\n                if (!!node) {\n                    _this.view_provider.add_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"insert_node_after\", data: [afterid, nodeid, topic, data], node: nodeid });\n                }\n                return node;\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return null;\n            }\n        };\n        this.remove_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return false;\n                }\n                else {\n                    return _this.remove_node(the_node);\n                }\n            }\n            if (_this.get_editable()) {\n                if (node.isroot) {\n                    tools_1.$logger.error(\"fail, can not remove root node\");\n                    return false;\n                }\n                var nodeid = node.id;\n                var parentid = node.parent.id;\n                var parent_node = _this.get_node(parentid);\n                parent_node && _this.view_provider.save_location(parent_node);\n                _this.view_provider.remove_node(node);\n                _this.mind.remove_node(node);\n                _this.layout_provider.layout();\n                _this.view_provider.show(false);\n                parent_node && _this.view_provider.restore_location(parent_node);\n                _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"remove_node\", data: [nodeid], node: parentid });\n                return true;\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return false;\n            }\n        };\n        this.update_node = function (nodeid, topic) {\n            if (_this.get_editable()) {\n                if (util_1[\"default\"].text.is_empty(topic)) {\n                    tools_1.$logger.warn(\"fail, topic can not be empty\");\n                    return;\n                }\n                var node = _this.get_node(nodeid);\n                if (!!node) {\n                    if (node.topic === topic) {\n                        tools_1.$logger.info(\"nothing changed\");\n                        _this.view_provider.update_node(node);\n                        return;\n                    }\n                    node.topic = topic;\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"update_node\", data: [nodeid, topic], node: nodeid });\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return;\n            }\n        };\n        this.move_node = function (nodeid, beforeid, parentid, direction) {\n            if (_this.get_editable()) {\n                var node = _this.mind.move_node(nodeid, beforeid, parentid, direction);\n                if (!!node) {\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    _this.invoke_event_handle(exports.TSMindEventTypeMap.edit, { evt: \"move_node\", data: [nodeid, beforeid, parentid, direction], node: nodeid });\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n                return;\n            }\n        };\n        this.select_node = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.select_node(the_node);\n                }\n            }\n            if (!_this.layout_provider.is_visible(node)) {\n                return;\n            }\n            _this.mind.selected = node;\n            _this.view_provider.select_node(node);\n        };\n        this.get_selected_node = function () {\n            if (!!_this.mind) {\n                return _this.mind.selected;\n            }\n            else {\n                return null;\n            }\n        };\n        this.select_clear = function () {\n            if (!!_this.mind) {\n                _this.mind.selected = null;\n                _this.view_provider.select_clear();\n            }\n        };\n        this.is_node_visible = function (node) {\n            return _this.layout_provider.is_visible(node);\n        };\n        this.find_node_before = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.find_node_before(the_node);\n                }\n            }\n            if (node.isroot) {\n                return null;\n            }\n            var n = null;\n            if (node.parent.isroot) {\n                var c = node.parent.children;\n                var prev = null;\n                for (var _i = 0, c_1 = c; _i < c_1.length; _i++) {\n                    var ni = c_1[_i];\n                    if (node.direction === ni.direction) {\n                        if (node.id === ni.id) {\n                            n = prev;\n                        }\n                        prev = ni;\n                    }\n                }\n            }\n            else {\n                n = _this.mind.get_node_before(node);\n            }\n            return n;\n        };\n        this.find_node_after = function (node) {\n            if (!util_1[\"default\"].is_node(node)) {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return;\n                }\n                else {\n                    return _this.find_node_after(the_node);\n                }\n            }\n            if (node.isroot) {\n                return null;\n            }\n            var n = null;\n            if (node.parent.isroot) {\n                var c = node.parent.children;\n                var getthis = false;\n                for (var _i = 0, c_2 = c; _i < c_2.length; _i++) {\n                    var ni = c_2[_i];\n                    if (node.direction === ni.direction) {\n                        if (getthis) {\n                            n = ni;\n                            break;\n                        }\n                        if (node.id === ni.id) {\n                            getthis = true;\n                        }\n                    }\n                }\n            }\n            else {\n                n = _this.mind.get_node_after(node);\n            }\n            return n;\n        };\n        this.set_node_color = function (nodeid, bgcolor, fgcolor) {\n            if (_this.get_editable()) {\n                var node = _this.mind.get_node(nodeid);\n                if (!!node) {\n                    if (!!bgcolor) {\n                        node.data[\"background-color\"] = bgcolor;\n                    }\n                    if (!!fgcolor) {\n                        node.data[\"foreground-color\"] = fgcolor;\n                    }\n                    _this.view_provider.reset_node_custom_style(node);\n                    return true;\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n            }\n            return false;\n        };\n        this.set_node_font_style = function (nodeid, size, weight, style) {\n            if (_this.get_editable()) {\n                var node = _this.mind.get_node(nodeid);\n                if (!!node) {\n                    if (!!size) {\n                        node.data[\"font-size\"] = size;\n                    }\n                    if (!!weight) {\n                        node.data[\"font-weight\"] = weight;\n                    }\n                    if (!!style) {\n                        node.data[\"font-style\"] = style;\n                    }\n                    _this.view_provider.reset_node_custom_style(node);\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    return true;\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n            }\n            return false;\n        };\n        this.set_node_background_image = function (nodeid, image, width, height, rotation) {\n            if (_this.get_editable()) {\n                var node = _this.mind.get_node(nodeid);\n                if (!!node) {\n                    if (!!image) {\n                        node.data[\"background-image\"] = image;\n                    }\n                    if (!!width) {\n                        node.data.width = width;\n                    }\n                    if (!!height) {\n                        node.data.height = height;\n                    }\n                    if (!!rotation) {\n                        node.data[\"background-rotation\"] = rotation;\n                    }\n                    _this.view_provider.reset_node_custom_style(node);\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    return true;\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n            }\n            return false;\n        };\n        this.set_node_background_rotation = function (nodeid, rotation) {\n            if (_this.get_editable()) {\n                var node = _this.mind.get_node(nodeid);\n                if (!!node) {\n                    if (!node.data[\"background-image\"]) {\n                        tools_1.$logger.error(\"fail, only can change rotation angle of node with background image\");\n                        return false;\n                    }\n                    node.data[\"background-rotation\"] = rotation;\n                    _this.view_provider.reset_node_custom_style(node);\n                    _this.view_provider.update_node(node);\n                    _this.layout_provider.layout();\n                    _this.view_provider.show(false);\n                    return true;\n                }\n            }\n            else {\n                tools_1.$logger.error(\"fail, this mind map is not editable\");\n            }\n            return false;\n        };\n        this.resize = function () {\n            _this.view_provider.resize();\n        };\n        // callback(type ,data)\n        this.add_event_listener = function (callback) {\n            if (callback === void 0) { callback = function () { return void 0; }; }\n            if (typeof callback === \"function\") {\n                _this.event_handles.push(callback);\n            }\n        };\n        this.invoke_event_handle = function (type, data) {\n            var j = _this;\n            window.setTimeout(function () {\n                j._invoke_event_handle(type, data);\n            }, 0);\n        };\n        this._invoke_event_handle = function (type, data) {\n            var l = _this.event_handles.length;\n            for (var i = 0; i < l; i++) {\n                _this.event_handles[i](type, data);\n            }\n        };\n        if (!options.container) {\n            throw Error(\"the options.container should not be null or empty.\");\n        }\n        this.options = tools_1.$extend(true, constants_1.DEFAULT_OPTIONS, options);\n        if (this.initialized) {\n            return;\n        }\n        this.initialized = true;\n        var opts = this.options;\n        var opts_layout = {\n            mode: opts.mode,\n            hspace: opts.layout.hspace,\n            vspace: opts.layout.vspace,\n            pspace: opts.layout.pspace\n        };\n        var opts_view = {\n            container: opts.container,\n            support_html: opts.support_html,\n            hmargin: opts.view.hmargin,\n            vmargin: opts.view.vmargin,\n            line_width: opts.view.line_width,\n            line_color: opts.view.line_color\n        };\n        // create instance of function provider\n        this.data_provider = new data_1.data_provider(this);\n        this.layout_provider = new layout_1[\"default\"](this, opts_layout);\n        this.view_provider = new view_1[\"default\"](this, opts_view);\n        this.shortcut_provider = new shortcut_1[\"default\"](this, opts.shortcut);\n        this._event_bind();\n        this.init_plugins(this, options);\n    }\n    // static properties\n    TSMind.version = constants_1.__version__;\n    TSMind.direction = exports.TSMindDirectionMap;\n    TSMind.event_type = exports.TSMindEventTypeMap;\n    return TSMind;\n}());\nexports.TSMind = TSMind;\nexports[\"default\"] = TSMind;\n","\"use strict\";\nexports.__esModule = true;\nexports.__name__ = \"TSMind\";\n// library version\nexports.__version__ = \"0.5.0\";\n// authores\nexports.__authores__ = [\"1071115676@qq.com\", \"hizzgdev@163.com\"];\nexports.DEFAULT_OPTIONS = {\n    container: \"\",\n    editable: false,\n    theme: \"primary\",\n    mode: \"full\",\n    support_html: true,\n    view: {\n        hmargin: 100,\n        vmargin: 50,\n        line_width: 2,\n        line_color: \"#555\"\n    },\n    layout: {\n        hspace: 30,\n        vspace: 20,\n        pspace: 13\n    },\n    default_event_handle: {\n        enable_mousedown_handle: true,\n        enable_click_handle: true,\n        enable_dblclick_handle: true\n    },\n    shortcut: {\n        enable: true,\n        handles: {},\n        mapping: {\n            addchild: 45,\n            addbrother: 13,\n            editnode: 113,\n            delnode: 46,\n            toggle: 32,\n            left: 37,\n            up: 38,\n            right: 39,\n            down: 40 // Down\n        }\n    }\n};\n// custom node names\nexports.TSM_Node_Names = {\n    nodes: \"tsmnodes\",\n    node: \"tsmnode\",\n    fold: \"tsmfold\"\n};\n","\"use strict\";\nexports.__esModule = true;\nvar __1 = require(\"..\");\nvar TSM_node = /** @class */ (function () {\n    function TSM_node(sId, iIndex, sTopic, oData, bIsRoot, oParent, eDirection, bExpanded) {\n        if (oData === void 0) { oData = {}; }\n        if (eDirection === void 0) { eDirection = __1.TSMindDirectionMap.right; }\n        if (bExpanded === void 0) { bExpanded = true; }\n        var _this = this;\n        this.id = \"\";\n        this.index = 0;\n        this.topic = \"\";\n        this.data = {};\n        this.isroot = true;\n        this.direction = __1.TSMindDirectionMap.left;\n        this.expanded = true;\n        this.children = [];\n        this.expands = {};\n        this.width = 0;\n        this.height = 0;\n        this.view_data = {\n            element: null,\n            expander: null,\n            abs_x: 0,\n            abs_y: 0,\n            width: 0,\n            height: 0,\n            _saved_location: {\n                x: 0,\n                y: 0\n            }\n        };\n        this.layout_data = {\n            direction: __1.TSMindDirectionMap.right,\n            side_index: 0,\n            offset_x: 0,\n            offset_y: 0,\n            outer_height: 0,\n            left_nodes: [],\n            right_nodes: [],\n            outer_height_left: 0,\n            outer_height_right: 0,\n            visible: true,\n            _offset_: {\n                x: 0,\n                y: 0\n            }\n        };\n        this.get_location = function () {\n            var vd = _this.view_data;\n            return {\n                x: vd.abs_x || 0,\n                y: vd.abs_y || 0\n            };\n        };\n        this.get_size = function () {\n            var vd = _this.view_data;\n            return {\n                w: vd.width || 0,\n                h: vd.height || 0\n            };\n        };\n        this.id = sId;\n        this.index = iIndex;\n        this.topic = sTopic;\n        this.data = oData;\n        this.isroot = bIsRoot;\n        this.parent = oParent;\n        this.direction = eDirection;\n        this.expanded = bExpanded;\n    }\n    TSM_node.inherited = function (pnode, node) {\n        if (!!pnode && !!node) {\n            if (pnode.id === node.id) {\n                return true;\n            }\n            if (pnode.isroot) {\n                return true;\n            }\n            var pid = pnode.id;\n            var p = node;\n            while (!p.isroot) {\n                p = p.parent;\n                if (p.id === pid) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    TSM_node.compare = function (node1, node2) {\n        // '-1' is alwary the last\n        var r = 0;\n        var i1 = node1.index;\n        var i2 = node2.index;\n        if (i1 >= 0 && i2 >= 0) {\n            r = i1 - i2;\n        }\n        else if (i1 === -1 && i2 === -1) {\n            r = 0;\n        }\n        else if (i1 === -1) {\n            r = 1;\n        }\n        else if (i2 === -1) {\n            r = -1;\n        }\n        else {\n            r = 0;\n        }\n        // logger.debug(i1+' <> '+i2+'  =  '+r);\n        return r;\n    };\n    return TSM_node;\n}());\nexports.TSM_node = TSM_node;\n","\"use strict\";\nexports.__esModule = true;\nexports.dom = {\n    // target,eventType,handler\n    add_event: function (target, event, call) {\n        target.addEventListener(event, call, false);\n    },\n    css: function (cstyle, property_name) {\n        return cstyle.getPropertyValue(property_name);\n    },\n    is_visible: function (cstyle) {\n        var visibility = exports.dom.css(cstyle, \"visibility\");\n        var display = exports.dom.css(cstyle, \"display\");\n        exports.dom.css(cstyle, \"backface-visibility\");\n        return visibility !== \"hidden\" && display !== \"none\";\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nexports.canvas = {\n    bezierto: function (ctx, x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(x1 + ((x2 - x1) * 2) / 3, y1, x1, y2, x2, y2);\n        ctx.stroke();\n    },\n    lineto: function (ctx, x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n    },\n    clear: function (ctx, x, y, w, h) {\n        ctx.clearRect(x, y, w, h);\n    },\n    rect: function (ctx, x, y, w, h, r) {\n        if (w < 2 * r)\n            r = w / 2;\n        if (h < 2 * r)\n            r = h / 2;\n        ctx.moveTo(x + r, y);\n        ctx.arcTo(x + w, y, x + w, y + h, r);\n        ctx.arcTo(x + w, y + h, x, y + h, r);\n        ctx.arcTo(x, y + h, x, y, r);\n        ctx.arcTo(x, y, x + w, y, r);\n    },\n    text_multiline: function (ctx, text, x, y, w, h, lineheight) {\n        var line = \"\";\n        var text_len = text.length;\n        var chars = text.split(\"\");\n        var test_line = null;\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\";\n        for (var i = 0; i < text_len; i++) {\n            test_line = line + chars[i];\n            if (ctx.measureText(test_line).width > w && i > 0) {\n                ctx.fillText(line, x, y);\n                line = chars[i];\n                y += lineheight;\n            }\n            else {\n                line = test_line;\n            }\n        }\n        ctx.fillText(line, x, y);\n    },\n    text_ellipsis: function (ctx, text, x, y, w, h) {\n        var center_y = y + h / 2;\n        text = exports.canvas.fittingString(ctx, text, w);\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(text, x, center_y, w);\n    },\n    fittingString: function (ctx, text, max_width) {\n        var width = ctx.measureText(text).width;\n        var ellipsis = \"…\";\n        var ellipsis_width = ctx.measureText(ellipsis).width;\n        if (width <= max_width || width <= ellipsis_width) {\n            return text;\n        }\n        else {\n            var len = text.length;\n            while (width >= max_width - ellipsis_width && len-- > 0) {\n                text = text.substring(0, len);\n                width = ctx.measureText(text).width;\n            }\n            return text + ellipsis;\n        }\n    },\n    image: function (ctx, backgroundUrl, x, y, w, h, r, rotation, callback) {\n        if (callback === void 0) { callback = function () { }; }\n        var img = new Image();\n        img.onload = function () {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.save();\n            ctx.beginPath();\n            exports.canvas.rect(ctx, 0, 0, w, h, r);\n            ctx.closePath();\n            ctx.clip();\n            ctx.translate(w / 2, h / 2);\n            ctx.rotate((rotation * Math.PI) / 180);\n            ctx.drawImage(img, -w / 2, -h / 2);\n            ctx.restore();\n            ctx.restore();\n            callback();\n        };\n        img.src = backgroundUrl;\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"../../util/tools\");\nvar util_1 = require(\"../../util\");\nvar node_1 = require(\"../node\");\nvar __1 = require(\"..\");\nvar TSM_mind = /** @class */ (function () {\n    function TSM_mind() {\n        var _this = this;\n        this.name = null;\n        this.author = null;\n        this.version = null;\n        this.root = null;\n        this.selected = null;\n        this.nodes = {};\n        this.get_node = function (nodeid) {\n            if (nodeid in _this.nodes) {\n                return _this.nodes[nodeid];\n            }\n            else {\n                tools_1.$logger.warn(\"the node[id=\" + nodeid + \"] can not be found\");\n                return null;\n            }\n        };\n        this.set_root = function (nodeid, topic, data) {\n            if (_this.root == null) {\n                _this.root = new node_1.TSM_node(nodeid, 0, topic, data, true);\n                _this._put_node(_this.root);\n            }\n            else {\n                tools_1.$logger.error(\"root node is already exist\");\n            }\n        };\n        this.add_node = function (parent_node, nodeid, topic, data, idx, direction, expanded) {\n            if (idx === void 0) { idx = -1; }\n            if (!util_1[\"default\"].is_node(parent_node)) {\n                var the_parent_node = _this.get_node(parent_node);\n                if (!the_parent_node) {\n                    tools_1.$logger.error(\"the parent_node[id=\" + parent_node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.add_node(the_parent_node, nodeid, topic, data, idx, direction, expanded);\n                }\n            }\n            var nodeindex = idx;\n            var node = null;\n            parent_node = parent_node;\n            if (parent_node.isroot) {\n                var d = __1[\"default\"].direction.right;\n                if (isNaN(direction)) {\n                    var children = parent_node.children;\n                    var children_len = children.length;\n                    var r = 0;\n                    for (var i = 0; i < children_len; i++) {\n                        if (children[i].direction === __1[\"default\"].direction.left) {\n                            r--;\n                        }\n                        else {\n                            r++;\n                        }\n                    }\n                    d = children_len > 1 && r > 0 ? __1[\"default\"].direction.left : __1[\"default\"].direction.right;\n                }\n                else {\n                    d = direction !== __1[\"default\"].direction.left ? __1[\"default\"].direction.right : __1[\"default\"].direction.left;\n                }\n                node = new node_1.TSM_node(nodeid, nodeindex, topic, data, false, parent_node, d, expanded);\n            }\n            else {\n                node = new node_1.TSM_node(nodeid, nodeindex, topic, data, false, parent_node, parent_node.direction, expanded);\n            }\n            if (_this._put_node(node)) {\n                parent_node.children.push(node);\n                _this._reindex(parent_node);\n            }\n            else {\n                tools_1.$logger.error(\"fail, the nodeid '\" + node.id + \"' has been already exist.\");\n                node = null;\n            }\n            return node;\n        };\n        this.insert_node_before = function (node_before, nodeid, topic, data) {\n            if (!util_1[\"default\"].is_node(node_before)) {\n                var the_node_before = _this.get_node(node_before);\n                if (!the_node_before) {\n                    tools_1.$logger.error(\"the node_before[id=\" + node_before + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.insert_node_before(the_node_before, nodeid, topic, data);\n                }\n            }\n            node_before = node_before;\n            var node_index = node_before.index - 0.5;\n            return node_before.parent ? _this.add_node(node_before.parent, nodeid, topic, data, node_index) : null;\n        };\n        this.get_node_before = function (node) {\n            if (typeof node === \"string\") {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.get_node_before(the_node);\n                }\n            }\n            if (node.isroot) {\n                return null;\n            }\n            var idx = node.index - 2;\n            if (idx >= 0) {\n                return node.parent.children[idx] || null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.insert_node_after = function (node_after, nodeid, topic, data) {\n            if (typeof node_after === \"string\") {\n                var the_node_after = _this.get_node(node_after);\n                if (!the_node_after) {\n                    tools_1.$logger.error(\"the node_after[id=\" + node_after + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.insert_node_after(the_node_after, nodeid, topic, data);\n                }\n            }\n            var node_index = node_after.index + 0.5;\n            return node_after.parent ? _this.add_node(node_after.parent, nodeid, topic, data, node_index) : null;\n        };\n        this.get_node_after = function (node) {\n            if (typeof node === \"string\") {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.get_node_after(the_node);\n                }\n            }\n            if (node.isroot) {\n                return null;\n            }\n            var idx = node.index;\n            var brothers = node.parent.children || null;\n            if (brothers.length >= idx) {\n                return node.parent.children[idx] || null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.move_node = function (node, beforeid, parentid, direction) {\n            if (typeof node === \"string\") {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return null;\n                }\n                else {\n                    return _this.move_node(the_node, beforeid, parentid, direction);\n                }\n            }\n            if (!parentid) {\n                parentid = node.parent.id;\n            }\n            return _this._move_node(node, beforeid, parentid, direction);\n        };\n        this._flow_node_direction = function (node, direction) {\n            if (typeof direction === \"undefined\") {\n                direction = node.direction;\n            }\n            else {\n                node.direction = direction;\n            }\n            var len = node.children.length;\n            while (len--) {\n                _this._flow_node_direction(node.children[len], direction);\n            }\n        };\n        this._move_node_internal = function (node, beforeid) {\n            if (!!node && !!beforeid) {\n                if (beforeid === \"_last_\") {\n                    node.index = -1;\n                    _this._reindex(node.parent);\n                }\n                else if (beforeid === \"_first_\") {\n                    node.index = 0;\n                    _this._reindex(node.parent);\n                }\n                else {\n                    var node_before = !!beforeid ? _this.get_node(beforeid) : null;\n                    if (node_before != null && node_before.parent != null && node_before.parent.id === node.parent.id) {\n                        node.index = node_before.index - 0.5;\n                        _this._reindex(node.parent);\n                    }\n                }\n            }\n            return node;\n        };\n        this._move_node = function (node, beforeid, parentid, direction) {\n            if (!!node && !!parentid) {\n                if (node.parent.id !== parentid) {\n                    // remove from parent's children\n                    var sibling = node.parent.children;\n                    var si = sibling.length;\n                    while (si--) {\n                        if (sibling[si].id === node.id) {\n                            sibling.splice(si, 1);\n                            break;\n                        }\n                    }\n                    var _nparent = _this.get_node(parentid);\n                    if (_nparent) {\n                        node.parent = _nparent;\n                        node.parent.children.push(node);\n                    }\n                }\n                if (node.parent.isroot) {\n                    if (direction === __1[\"default\"].direction.left) {\n                        node.direction = direction;\n                    }\n                    else {\n                        node.direction = __1[\"default\"].direction.right;\n                    }\n                }\n                else {\n                    node.direction = node.parent.direction;\n                }\n                _this._move_node_internal(node, beforeid);\n                _this._flow_node_direction(node);\n            }\n            return node;\n        };\n        this.remove_node = function (node) {\n            if (typeof node === \"string\") {\n                var the_node = _this.get_node(node);\n                if (!the_node) {\n                    tools_1.$logger.error(\"the node[id=\" + node + \"] can not be found.\");\n                    return false;\n                }\n                else {\n                    return _this.remove_node(the_node);\n                }\n            }\n            if (!node) {\n                tools_1.$logger.error(\"fail, the node can not be found\");\n                return false;\n            }\n            if (node.isroot) {\n                tools_1.$logger.error(\"fail, can not remove root node\");\n                return false;\n            }\n            if (_this.selected !== null && _this.selected.id === node.id) {\n                _this.selected = null;\n            }\n            // clean all subordinate nodes\n            var children = node.children;\n            var ci = children.length;\n            while (ci--) {\n                _this.remove_node(children[ci]);\n            }\n            // clean all children\n            children.length = 0;\n            // remove from parent's children\n            var sibling = node.parent.children || [];\n            var si = sibling.length;\n            while (si--) {\n                if (sibling[si].id === node.id) {\n                    sibling.splice(si, 1);\n                    break;\n                }\n            }\n            // remove from global nodes\n            delete _this.nodes[node.id];\n            // clean all properties\n            Object.keys(node).map(function (k) {\n                delete node[k];\n            });\n            // remove it's self\n            node = null;\n            // delete node;\n            return true;\n        };\n        this._put_node = function (node) {\n            if (node.id in _this.nodes) {\n                tools_1.$logger.warn(\"the nodeid '\" + node.id + \"' has been already exist.\");\n                return false;\n            }\n            else {\n                _this.nodes[node.id] = node;\n                return true;\n            }\n        };\n        this._reindex = function (node) {\n            if (node instanceof node_1.TSM_node) {\n                node.children.sort(node_1.TSM_node.compare);\n                for (var i = 0; i < node.children.length; i++) {\n                    node.children[i].index = i + 1;\n                }\n            }\n        };\n    }\n    return TSM_mind;\n}());\nexports.TSM_mind = TSM_mind;\n","\"use strict\";\nexports.__esModule = true;\nvar node_1 = require(\"../core/node\");\nvar canvas_1 = require(\"./canvas\");\nvar file_1 = require(\"./file\");\nvar json_1 = require(\"./json\");\nvar ajax_1 = require(\"./ajax\");\nvar dom_1 = require(\"./dom\");\nvar uuid_1 = require(\"./uuid\");\nvar text_1 = require(\"./text\");\nvar array = require(\"./array\");\nexports.util = {\n    is_node: function (node) {\n        return node instanceof node_1.TSM_node;\n    },\n    ajax: ajax_1.ajax,\n    dom: dom_1.dom,\n    canvas: canvas_1.canvas,\n    file: file_1.file,\n    json: json_1.json,\n    uuid: uuid_1.uuid,\n    text: text_1.text,\n    array: array\n};\nexports[\"default\"] = exports.util;\n","\"use strict\";\nexports.__esModule = true;\nexports._slice = Array.prototype.slice;\n","\"use strict\";\nexports.__esModule = true;\nvar constants_1 = require(\"../../util/constants\");\nvar mind_1 = require(\"../mind\");\nvar tools_1 = require(\"../../util/tools\");\nvar node_1 = require(\"../node\");\nvar __1 = require(\"..\");\nexports.node_array = {\n    example: {\n        meta: {\n            name: constants_1.__name__,\n            author: constants_1.__authores__,\n            version: constants_1.__version__\n        },\n        format: \"node_array\",\n        data: [\n            { id: \"root\", topic: \"jsMind Example\", isroot: true }\n        ]\n    },\n    get_mind: function (source) {\n        var df = exports.node_array;\n        var mind = new mind_1.TSM_mind();\n        mind.name = source.meta.name;\n        mind.author = source.meta.author;\n        mind.version = source.meta.version;\n        df._parse(mind, source.data);\n        return mind;\n    },\n    get_data: function (mind) {\n        var df = exports.node_array;\n        var data = [];\n        df._array(mind, data);\n        return {\n            meta: {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version\n            },\n            format: \"node_array\",\n            data: data\n        };\n    },\n    _parse: function (mind, nodes) {\n        var df = exports.node_array;\n        var narray = nodes.slice(0);\n        // reverse array for improving looping performance\n        narray.reverse();\n        var root_id = df._extract_root(mind, narray);\n        if (!!root_id) {\n            df._extract_subnode(mind, root_id, narray);\n        }\n        else {\n            tools_1.$logger.error(\"root node can not be found\");\n        }\n    },\n    _extract_root: function (mind, nodes) {\n        var df = exports.node_array;\n        var i = nodes.length;\n        while (i--) {\n            if (\"isroot\" in nodes[i] && nodes[i].isroot) {\n                var root_json = nodes[i];\n                var data = df._extract_data(root_json);\n                mind.set_root(root_json.id, root_json.topic, data);\n                nodes.splice(i, 1);\n                return root_json.id;\n            }\n        }\n        return null;\n    },\n    _extract_subnode: function (mind, parentid, nodes) {\n        var df = exports.node_array;\n        var i = nodes.length;\n        var node_json = null;\n        var data = null;\n        var extract_count = 0;\n        while (i--) {\n            node_json = nodes[i];\n            if (node_json.parentid === parentid) {\n                data = df._extract_data(node_json);\n                var node_direction = node_json.direction;\n                mind.add_node(parentid, node_json.id, node_json.topic, data, undefined, node_direction\n                    ? node_direction === \"left\"\n                        ? __1[\"default\"].direction.left\n                        : __1[\"default\"].direction.right\n                    : undefined, node_json.expanded);\n                nodes.splice(i, 1);\n                extract_count++;\n                var sub_extract_count = df._extract_subnode(mind, node_json.id, nodes);\n                if (sub_extract_count > 0) {\n                    // reset loop index after extract subordinate node\n                    i = nodes.length;\n                    extract_count += sub_extract_count;\n                }\n            }\n        }\n        return extract_count;\n    },\n    _extract_data: function (node_json) {\n        var data = {};\n        for (var k in node_json) {\n            if (k === \"id\" ||\n                k === \"topic\" ||\n                k === \"parentid\" ||\n                k === \"isroot\" ||\n                k === \"direction\" ||\n                k === \"expanded\") {\n                continue;\n            }\n            data[k] = node_json[k];\n        }\n        return data;\n    },\n    _array: function (mind, nodes) {\n        var df = exports.node_array;\n        mind.root && df._array_node(mind.root, nodes);\n    },\n    _array_node: function (node, nodes) {\n        var df = exports.node_array;\n        if (!(node instanceof node_1.TSM_node)) {\n            return;\n        }\n        var o = {\n            id: node.id,\n            topic: node.topic,\n            expanded: node.expanded,\n            children: [],\n            width: 0,\n            height: 0\n        };\n        if (!!node.parent) {\n            o.parentid = node.parent.id;\n        }\n        if (node.isroot) {\n            o.isroot = true;\n        }\n        if (!!node.parent && node.parent.isroot) {\n            o.direction = node.direction === __1[\"default\"].direction.left ? \"left\" : \"right\";\n        }\n        if (node.data != null) {\n            var node_data_1 = node.data;\n            Object.keys(node_data_1).map(function (k) {\n                o[k] = node_data_1[k];\n            });\n        }\n        nodes.push(o);\n        var ci = node.children.length;\n        for (var i = 0; i < ci; i++) {\n            df._array_node(node.children[i], nodes);\n        }\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"./tools\");\nexports.json = {\n    json2string: function (json) {\n        if (!!JSON) {\n            try {\n                var json_str = JSON.stringify(json);\n                return json_str;\n            }\n            catch (e) {\n                tools_1.$logger.warn(e);\n                tools_1.$logger.warn(\"can not convert to string\");\n                return null;\n            }\n        }\n        return null;\n    },\n    string2json: function (json_str) {\n        if (!!JSON) {\n            try {\n                var json_1 = JSON.parse(json_str);\n                return json_1;\n            }\n            catch (e) {\n                tools_1.$logger.warn(e);\n                tools_1.$logger.warn(\"can not parse to json\");\n                return null;\n            }\n        }\n    },\n    merge: function (b, a) {\n        return tools_1.$extend(b, a);\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nexports.text = {\n    is_empty: function (s) {\n        if (!s) {\n            return true;\n        }\n        return s.replace(/\\s*/, \"\").length === 0;\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./core/index\"), exports);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"../../util/tools\");\nvar node_array_1 = require(\"../format/node_array\");\nvar node_tree_1 = require(\"../format/node_tree\");\nvar freemind_1 = require(\"../format/freemind\");\nvar data_provider = /** @class */ (function () {\n    function data_provider(tsm) {\n        var _this = this;\n        this.reset = function () {\n            tools_1.$logger.debug(\"data.reset\");\n        };\n        this.load = function (mind_data) {\n            var df = null;\n            var mind = null;\n            if (typeof mind_data === \"object\") {\n                if (!!mind_data.format) {\n                    df = mind_data.format;\n                }\n                else {\n                    df = \"node_tree\";\n                }\n            }\n            else {\n                df = \"freemind\";\n            }\n            if (df === \"node_array\") {\n                mind = node_array_1.node_array.get_mind(mind_data);\n            }\n            else if (df === \"node_tree\") {\n                mind = node_tree_1.node_tree.get_mind(mind_data);\n            }\n            else if (df === \"freemind\") {\n                mind = freemind_1.freemind.get_mind(mind_data);\n            }\n            else {\n                tools_1.$logger.warn(\"unsupported format\");\n            }\n            return mind;\n        };\n        this.get_data = function (data_format) {\n            var data = null;\n            if (!_this.tsm.mind)\n                return data;\n            if (data_format === \"node_array\") {\n                data = node_array_1.node_array.get_data(_this.tsm.mind);\n            }\n            else if (data_format === \"node_tree\") {\n                data = node_tree_1.node_tree.get_data(_this.tsm.mind);\n            }\n            else if (data_format === \"freemind\") {\n                data = freemind_1.freemind.get_data(_this.tsm.mind);\n            }\n            else {\n                tools_1.$logger.error(\"unsupported \" + data_format + \" format\");\n            }\n            return data;\n        };\n        this.tsm = tsm;\n        tools_1.$logger.debug(\"data.init\");\n    }\n    return data_provider;\n}());\nexports.data_provider = data_provider;\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"./tools\");\nexports.file = {\n    read: function (file_data, fn_callback) {\n        var reader = new FileReader();\n        reader.onload = function () {\n            if (typeof fn_callback === \"function\") {\n                fn_callback(this.result, file_data.name);\n            }\n        };\n        reader.readAsText(file_data);\n    },\n    save: function (file_data, type, name) {\n        var blob;\n        var _wind = window;\n        if (typeof _wind.Blob === \"function\") {\n            blob = new Blob([file_data], { type: type });\n        }\n        else {\n            var BlobBuilder = _wind.BlobBuilder || _wind.MozBlobBuilder || _wind.WebKitBlobBuilder || _wind.MSBlobBuilder;\n            var bb = new BlobBuilder();\n            bb.append(file_data);\n            blob = bb.getBlob(type);\n        }\n        if (navigator.msSaveBlob) {\n            navigator.msSaveBlob(blob, name);\n        }\n        else {\n            var URL_1 = _wind.URL || _wind.webkitURL;\n            var bloburl = URL_1.createObjectURL(blob);\n            var anchor = tools_1.$doc.createElement(\"a\");\n            if (\"download\" in anchor) {\n                anchor.style.visibility = \"hidden\";\n                anchor.href = bloburl;\n                anchor.download = name;\n                tools_1.$doc.body.appendChild(anchor);\n                var evt = tools_1.$doc.createEvent(\"MouseEvents\");\n                evt.initEvent(\"click\", true, true);\n                anchor.dispatchEvent(evt);\n                tools_1.$doc.body.removeChild(anchor);\n            }\n            else {\n                location.href = bloburl;\n            }\n        }\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar json_1 = require(\"./json\");\nvar tools_1 = require(\"./tools\");\nexports.ajax = {\n    _xhr: function () {\n        var xhr = null;\n        if (\"XMLHttpRequest\" in window) {\n            xhr = new XMLHttpRequest();\n        }\n        else {\n            try {\n                xhr = new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n            }\n            catch (e) { }\n        }\n        return xhr;\n    },\n    _eurl: function (url) {\n        return encodeURIComponent(url);\n    },\n    request: function (url, param, method, callback, fail_callback) {\n        if (param === void 0) { param = {}; }\n        if (method === void 0) { method = \"GET\"; }\n        if (callback === void 0) { callback = tools_1.$noop; }\n        if (fail_callback === void 0) { fail_callback = tools_1.$noop; }\n        var a = exports.ajax;\n        var p = null;\n        var tmp_param = [];\n        Object.keys(param).map(function (k) {\n            tmp_param.push(a._eurl(k) + \"=\" + a._eurl(param[k]));\n        });\n        if (tmp_param.length > 0) {\n            p = tmp_param.join(\"&\");\n        }\n        var xhr = a._xhr();\n        if (!xhr) {\n            return;\n        }\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200 || xhr.status === 0) {\n                    var data = json_1.json.string2json(xhr.responseText);\n                    if (data != null) {\n                        callback(data);\n                    }\n                    else {\n                        callback(xhr.responseText);\n                    }\n                }\n                else {\n                    fail_callback(xhr);\n                    tools_1.$logger.error(\"xhr request failed.\", xhr);\n                }\n            }\n        };\n        method = method || \"GET\";\n        xhr.open(method, url, true);\n        xhr.setRequestHeader(\"If-Modified-Since\", \"0\");\n        if (method === \"POST\") {\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");\n            xhr.send(p);\n        }\n        else {\n            xhr.send();\n        }\n    },\n    get: function (url, callback) {\n        return exports.ajax.request(url, {}, \"GET\", callback);\n    },\n    post: function (url, param, callback) {\n        return exports.ajax.request(url, param, \"POST\", callback);\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nexports.uuid = {\n    newid: function () {\n        return (new Date().getTime().toString(16) +\n            Math.random()\n                .toString(16)\n                .substr(2)).substr(2, 16);\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar constants_1 = require(\"../../util/constants\");\nvar mind_1 = require(\"../mind\");\nvar __1 = require(\"..\");\nvar node_1 = require(\"../node\");\nexports.node_tree = {\n    example: {\n        meta: {\n            name: constants_1.__name__,\n            author: constants_1.__authores__,\n            version: constants_1.__version__\n        },\n        format: \"node_tree\",\n        data: { id: \"root\", topic: \"jsMind Example\" }\n    },\n    get_mind: function (source) {\n        var df = exports.node_tree;\n        var mind = new mind_1.TSM_mind();\n        mind.name = source.meta.name;\n        mind.author = source.meta.author;\n        mind.version = source.meta.version;\n        df._parse(mind, source.data);\n        return mind;\n    },\n    get_data: function (mind) {\n        var df = exports.node_tree;\n        return {\n            meta: {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version\n            },\n            format: \"node_tree\",\n            data: df._buildnode(mind.root)\n        };\n    },\n    _parse: function (mind, node_root) {\n        var df = exports.node_tree;\n        var data = df._extract_data(node_root);\n        mind.set_root(node_root.id, node_root.topic, data);\n        if (\"children\" in node_root) {\n            var children = node_root.children;\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var child = children_1[_i];\n                df._extract_subnode(mind, mind.root, child);\n            }\n        }\n    },\n    _extract_data: function (node_json) {\n        var data = {};\n        for (var k in node_json) {\n            if (k === \"id\" ||\n                k === \"topic\" ||\n                k === \"children\" ||\n                k === \"direction\" ||\n                k === \"expanded\") {\n                continue;\n            }\n            data[k] = node_json[k];\n        }\n        return data;\n    },\n    _extract_subnode: function (mind, node_parent, node_json) {\n        var df = exports.node_tree;\n        var data = df._extract_data(node_json);\n        var dir = __1.TSMindDirectionMap.right;\n        if (node_parent.isroot) {\n            dir = __1.TSMindDirectionMap[node_json.direction];\n        }\n        var node = mind.add_node(node_parent, node_json.id, node_json.topic, data, undefined, dir, node_json.expanded);\n        if (\"children\" in node_json) {\n            var children = node_json.children;\n            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n                var child = children_2[_i];\n                df._extract_subnode(mind, node, child);\n            }\n        }\n    },\n    _buildnode: function (node) {\n        var df = exports.node_tree;\n        if (!(node instanceof node_1.TSM_node)) {\n            return;\n        }\n        var o = {\n            id: node.id,\n            topic: node.topic,\n            expanded: node.expanded\n        };\n        if (!!node.parent && node.parent.isroot) {\n            o.direction =\n                node.direction === __1.TSMindDirectionMap.left ? \"left\" : \"right\";\n        }\n        if (node.data != null) {\n            var node_data = node.data;\n            for (var k in node_data) {\n                if (k) {\n                    o[k] = node_data[k];\n                }\n            }\n        }\n        var children = node.children;\n        if (children.length > 0) {\n            o.children = [];\n            for (var _i = 0, children_3 = children; _i < children_3.length; _i++) {\n                var child = children_3[_i];\n                o.children.push(df._buildnode(child));\n            }\n        }\n        return o;\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar constants_1 = require(\"../../util/constants\");\nvar mind_1 = require(\"../mind\");\nvar __1 = require(\"..\");\nvar array_1 = require(\"../../util/array\");\nexports.freemind = {\n    example: {\n        meta: {\n            name: constants_1.__name__,\n            author: constants_1.__authores__,\n            version: constants_1.__version__\n        },\n        format: \"freemind\",\n        data: \"<map version=\\\"\" + constants_1.__version__ + \"\\\"><node ID=\\\"root\\\" TEXT=\\\"freemind Example\\\"/></map>\"\n    },\n    get_mind: function (source) {\n        var df = exports.freemind;\n        var mind = new mind_1.TSM_mind();\n        mind.name = source.meta.name;\n        mind.author = source.meta.author;\n        mind.version = source.meta.version;\n        var xml = source.data;\n        var xml_doc = df._parse_xml(xml);\n        var xml_root = df._find_root(xml_doc);\n        df._load_node(mind, null, xml_root);\n        return mind;\n    },\n    get_data: function (mind) {\n        var df = exports.freemind;\n        var json = {\n            meta: {\n                name: mind.name,\n                author: mind.author,\n                version: mind.version\n            },\n            format: \"freemind\",\n            data: \"\"\n        };\n        var xmllines = [];\n        xmllines.push(\"<map version=\\\"\" + constants_1.__version__ + \"\\\">\");\n        df._buildmap(mind.root, xmllines);\n        xmllines.push(\"</map>\");\n        json.data = xmllines.join(\" \");\n        return json;\n    },\n    _parse_xml: function (xml) {\n        var xml_doc = null;\n        if (!!DOMParser) {\n            var parser = new DOMParser();\n            xml_doc = parser.parseFromString(xml, \"text/xml\");\n        }\n        else {\n            // Internet Explorer\n            xml_doc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n            xml_doc.async = false;\n            xml_doc.loadXML(xml);\n        }\n        return xml_doc;\n    },\n    _find_root: function (xml_doc) {\n        var nodes = array_1._slice.call(xml_doc.childNodes);\n        var node = null;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var n = nodes_1[_i];\n            if (n.nodeType === 1 && n.tagName === \"map\") {\n                node = n;\n                break;\n            }\n        }\n        if (!!node) {\n            var ns = array_1._slice.call(node.childNodes);\n            node = null;\n            for (var _a = 0, ns_1 = ns; _a < ns_1.length; _a++) {\n                var n = ns_1[_a];\n                if (n.nodeType === 1 && n.tagName === \"node\") {\n                    node = n;\n                    break;\n                }\n            }\n        }\n        return node;\n    },\n    _load_node: function (mind, parent_id, xml_node) {\n        var df = exports.freemind;\n        var node_id = xml_node.getAttribute(\"ID\");\n        if (!node_id)\n            return;\n        var node_topic = xml_node.getAttribute(\"TEXT\");\n        // look for richcontent\n        if (node_topic == null) {\n            var topic_children = array_1._slice.call(xml_node.childNodes);\n            for (var _i = 0, topic_children_1 = topic_children; _i < topic_children_1.length; _i++) {\n                var topic_child = topic_children_1[_i];\n                // logger.debug(topic_child.tagName);\n                if (topic_child.nodeType === 1 &&\n                    topic_child.tagName === \"richcontent\") {\n                    node_topic = topic_child.textContent;\n                    break;\n                }\n            }\n        }\n        var node_data = df._load_attributes(xml_node);\n        var node_expanded = \"expanded\" in node_data ? node_data.expanded === \"true\" : true;\n        delete node_data.expanded;\n        var node_position = xml_node.getAttribute(\"POSITION\");\n        var node_direction = node_position\n            ? __1[\"default\"].direction[node_position]\n            : undefined;\n        // logger.debug(node_position +':'+ node_direction);\n        if (!!parent_id) {\n            mind.add_node(parent_id, node_id, node_topic, node_data, undefined, node_direction, node_expanded);\n        }\n        else {\n            mind.set_root(node_id, node_topic, node_data);\n        }\n        var children = array_1._slice.call(xml_node.childNodes);\n        for (var _a = 0, children_1 = children; _a < children_1.length; _a++) {\n            var child = children_1[_a];\n            if (child.nodeType === 1 && child.tagName === \"node\") {\n                df._load_node(mind, node_id, child);\n            }\n        }\n    },\n    _load_attributes: function (xml_node) {\n        var children = array_1._slice.call(xml_node.childNodes);\n        var attr_data = {};\n        for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n            var attr = children_2[_i];\n            if (attr.nodeType === 1 && attr.tagName === \"attribute\") {\n                attr_data[attr.getAttribute(\"NAME\")] = attr.getAttribute(\"VALUE\");\n            }\n        }\n        return attr_data;\n    },\n    _buildmap: function (node, xmllines) {\n        if (!node)\n            return;\n        var df = exports.freemind;\n        var pos = null;\n        if (!!node.parent && node.parent.isroot) {\n            pos = node.direction === __1[\"default\"].direction.left ? \"left\" : \"right\";\n        }\n        xmllines.push(\"<node\");\n        xmllines.push('ID=\"' + node.id + '\"');\n        if (!!pos) {\n            xmllines.push('POSITION=\"' + pos + '\"');\n        }\n        xmllines.push('TEXT=\"' + node.topic + '\">');\n        // store expanded status as an attribute\n        xmllines.push('<attribute NAME=\"expanded\" VALUE=\"' + node.expanded + '\"/>');\n        // for attributes\n        if (node.data) {\n            Object.keys(node.data).map(function (k) {\n                xmllines.push('<attribute NAME=\"' + k + '\" VALUE=\"' + node.data[k] + '\"/>');\n            });\n        }\n        // for children\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            df._buildmap(child, xmllines);\n        }\n        xmllines.push(\"</node>\");\n    }\n};\n","\"use strict\";\nexports.__esModule = true;\nvar __1 = require(\"..\");\nvar tools_1 = require(\"../../util/tools\");\nvar layout_provider = /** @class */ (function () {\n    function layout_provider(tsm, options) {\n        var _this = this;\n        this.bounds = { n: 0, s: 0, w: 0, e: 0 };\n        this.reset = function () {\n            tools_1.$logger.debug(\"layout.reset\");\n            _this.bounds = { n: 0, s: 0, w: 0, e: 0 };\n        };\n        this.layout = function () {\n            tools_1.$logger.debug(\"layout.layout\");\n            _this.layout_direction();\n            _this.layout_offset();\n        };\n        this.layout_direction = function () {\n            _this._layout_direction_root();\n        };\n        this._layout_direction_root = function () {\n            var node = _this.tsm.mind.root;\n            if (!node)\n                return;\n            // $logger.debug(node);\n            var children = node.children;\n            var children_count = children.length;\n            node.layout_data.direction = __1[\"default\"].direction.center;\n            node.layout_data.side_index = 0;\n            if (_this.isside) {\n                var i = children_count;\n                while (i--) {\n                    _this._layout_direction_side(children[i], __1[\"default\"].direction.right, i);\n                }\n            }\n            else {\n                var i = children_count;\n                var subnode = null;\n                while (i--) {\n                    subnode = children[i];\n                    if (subnode.direction === __1[\"default\"].direction.left) {\n                        _this._layout_direction_side(subnode, __1[\"default\"].direction.left, i);\n                    }\n                    else {\n                        _this._layout_direction_side(subnode, __1[\"default\"].direction.right, i);\n                    }\n                }\n                /*\n                          var boundary = Math.ceil(children_count/2);\n                          var i = children_count;\n                          while(i--){\n                              if(i>=boundary){\n                                  this._layout_direction_side(children[i],tsm.direction.left, children_count-i-1);\n                              }else{\n                                  this._layout_direction_side(children[i],tsm.direction.right, i);\n                              }\n                          }*/\n            }\n        };\n        this._layout_direction_side = function (node, direction, side_index) {\n            var layout_data = node.layout_data;\n            var children = node.children;\n            var children_count = children.length;\n            layout_data.direction = direction;\n            layout_data.side_index = side_index;\n            var i = children_count;\n            while (i--) {\n                _this._layout_direction_side(children[i], direction, i);\n            }\n        };\n        this.layout_offset = function () {\n            var node = _this.tsm.mind.root;\n            if (!node)\n                return;\n            var layout_data = node.layout_data;\n            if (!layout_data)\n                return;\n            var children = node.children;\n            var i = children.length;\n            var left_nodes = [];\n            var right_nodes = [];\n            var subnode = null;\n            while (i--) {\n                subnode = children[i];\n                if (subnode.layout_data.direction === __1[\"default\"].direction.right) {\n                    right_nodes.unshift(subnode);\n                }\n                else {\n                    left_nodes.unshift(subnode);\n                }\n            }\n            layout_data.left_nodes = left_nodes;\n            layout_data.right_nodes = right_nodes;\n            layout_data.outer_height_left = _this._layout_offset_subnodes(left_nodes);\n            layout_data.outer_height_right = _this._layout_offset_subnodes(right_nodes);\n            _this.bounds.e = (node.view_data.width || 0) / 2;\n            _this.bounds.w = 0 - _this.bounds.e;\n            // $logger.debug(this.bounds.w);\n            _this.bounds.n = 0;\n            _this.bounds.s = Math.max(layout_data.outer_height_left, layout_data.outer_height_right);\n        };\n        // layout both the x and y axis\n        this._layout_offset_subnodes = function (nodes) {\n            var total_height = 0;\n            var nodes_count = nodes.length;\n            var i = nodes_count;\n            var node = null;\n            var node_outer_height = 0;\n            var base_y = 0;\n            var pd = null; // parent._data\n            while (i--) {\n                node = nodes[i];\n                var layout_data = node.layout_data;\n                if (pd == null) {\n                    pd = node.parent;\n                }\n                node_outer_height = _this._layout_offset_subnodes(node.children);\n                if (!node.expanded) {\n                    node_outer_height = 0;\n                    _this.set_visible(node.children, false);\n                }\n                node_outer_height = Math.max(node.view_data.height || 0, node_outer_height);\n                layout_data.outer_height = node_outer_height;\n                layout_data.offset_y = base_y - node_outer_height / 2;\n                layout_data.offset_x = _this.opts.hspace * layout_data.direction + (pd.view_data.width * (pd.layout_data.direction + layout_data.direction)) / 2;\n                if (!node.parent.isroot) {\n                    layout_data.offset_x += _this.opts.pspace * layout_data.direction;\n                }\n                base_y = base_y - node_outer_height - _this.opts.vspace;\n                total_height += node_outer_height;\n            }\n            if (nodes_count > 1) {\n                total_height += _this.opts.vspace * (nodes_count - 1);\n            }\n            i = nodes_count;\n            var middle_height = total_height / 2;\n            while (i--) {\n                node = nodes[i];\n                node.layout_data.offset_y += middle_height;\n            }\n            return total_height;\n        };\n        // layout the y axis only, for collapse/expand a node\n        this._layout_offset_subnodes_height = function (nodes) {\n            var total_height = 0;\n            var nodes_count = nodes.length;\n            var i = nodes_count;\n            var node = null;\n            var node_outer_height = 0;\n            var layout_data = null;\n            var base_y = 0;\n            while (i--) {\n                node = nodes[i];\n                layout_data = node.layout_data;\n                node_outer_height = _this._layout_offset_subnodes_height(node.children);\n                if (!node.expanded) {\n                    node_outer_height = 0;\n                }\n                node_outer_height = Math.max(node.view_data.height, node_outer_height);\n                layout_data.outer_height = node_outer_height;\n                layout_data.offset_y = base_y - node_outer_height / 2;\n                base_y = base_y - node_outer_height - _this.opts.vspace;\n                total_height += node_outer_height;\n            }\n            if (nodes_count > 1) {\n                total_height += _this.opts.vspace * (nodes_count - 1);\n            }\n            i = nodes_count;\n            var middle_height = total_height / 2;\n            while (i--) {\n                node = nodes[i];\n                node.layout_data.offset_y += middle_height;\n                // $logger.debug(node.topic);\n                // $logger.debug(node.layout_data.offset_y);\n            }\n            return total_height;\n        };\n        this.get_node_offset = function (node) {\n            var layout_data = node.layout_data;\n            var offset_cache = { x: -1, y: -1 };\n            if (\"_offset_\" in layout_data && _this.cache_valid) {\n                offset_cache = layout_data._offset_;\n            }\n            else {\n                layout_data._offset_ = offset_cache;\n            }\n            if (offset_cache.x === -1 || offset_cache.y === -1) {\n                var x = layout_data.offset_x;\n                var y = layout_data.offset_y;\n                if (!node.isroot) {\n                    var offset_p = _this.get_node_offset(node.parent);\n                    x += offset_p.x;\n                    y += offset_p.y;\n                }\n                offset_cache.x = x;\n                offset_cache.y = y;\n            }\n            return offset_cache;\n        };\n        this.get_node_point = function (node) {\n            var offset_p = _this.get_node_offset(node);\n            tools_1.$logger.debug(offset_p);\n            var p = {\n                x: offset_p.x + (node.view_data.width * (node.layout_data.direction - 1)) / 2,\n                y: offset_p.y - node.view_data.height / 2\n            };\n            // $logger.debug(p);\n            return p;\n        };\n        this.get_node_point_in = function (node) {\n            return _this.get_node_offset(node);\n        };\n        this.get_node_point_out = function (node) {\n            var pout_cache = { x: -1, y: -1 };\n            if (pout_cache.x === -1 || pout_cache.y === -1) {\n                if (node.isroot) {\n                    pout_cache.x = 0;\n                    pout_cache.y = 0;\n                }\n                else {\n                    var offset_p = _this.get_node_offset(node);\n                    pout_cache.x = offset_p.x + (node.view_data.width + _this.opts.pspace) * node.layout_data.direction;\n                    pout_cache.y = offset_p.y;\n                    // $logger.debug('pout');\n                    // $logger.debug(pout_cache);\n                }\n            }\n            return pout_cache;\n        };\n        this.get_expander_point = function (node) {\n            var p = _this.get_node_point_out(node);\n            var ex_p = {\n                x: 0,\n                y: 0\n            };\n            if (node.layout_data.direction === __1[\"default\"].direction.right) {\n                ex_p.x = p.x - _this.opts.pspace;\n            }\n            else {\n                ex_p.x = p.x;\n            }\n            ex_p.y = p.y - Math.ceil(_this.opts.pspace / 2);\n            return ex_p;\n        };\n        this.get_min_size = function () {\n            var nodes = _this.tsm.mind.nodes;\n            if (!nodes)\n                return;\n            var node = null;\n            var pout = null;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                pout = _this.get_node_point_out(node);\n                // $logger.debug(pout.x);\n                if (pout.x > _this.bounds.e) {\n                    _this.bounds.e = pout.x;\n                }\n                if (pout.x < _this.bounds.w) {\n                    _this.bounds.w = pout.x;\n                }\n            }\n            return {\n                w: _this.bounds.e - _this.bounds.w,\n                h: _this.bounds.s - _this.bounds.n\n            };\n        };\n        this.toggle_node = function (node) {\n            if (node.isroot) {\n                return;\n            }\n            if (node.expanded) {\n                _this.collapse_node(node);\n            }\n            else {\n                _this.expand_node(node);\n            }\n        };\n        this.expand_node = function (node) {\n            node.expanded = true;\n            _this.part_layout(node);\n            _this.set_visible(node.children, true);\n        };\n        this.collapse_node = function (node) {\n            node.expanded = false;\n            _this.part_layout(node);\n            _this.set_visible(node.children, false);\n        };\n        this.expand_all = function () {\n            var nodes = _this.tsm.mind.nodes;\n            if (!nodes)\n                return;\n            var c = 0;\n            var node;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                if (!node.expanded) {\n                    node.expanded = true;\n                    c++;\n                }\n            }\n            if (c > 0) {\n                var root = _this.tsm.mind.root;\n                if (!root)\n                    return;\n                _this.part_layout(root);\n                _this.set_visible(root.children, true);\n            }\n        };\n        this.collapse_all = function () {\n            var nodes = _this.tsm.mind.nodes;\n            var c = 0;\n            var node;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                if (node.expanded && !node.isroot) {\n                    node.expanded = false;\n                    c++;\n                }\n            }\n            if (c > 0) {\n                var root = _this.tsm.mind.root;\n                if (!root)\n                    return;\n                _this.part_layout(root);\n                _this.set_visible(root.children, true);\n            }\n        };\n        this.expand_to_depth = function (target_depth, curr_nodes, curr_depth) {\n            if (curr_nodes === void 0) { curr_nodes = _this.tsm.mind.root.children; }\n            if (curr_depth === void 0) { curr_depth = 1; }\n            if (target_depth < 1) {\n                return;\n            }\n            var i = curr_nodes.length;\n            var node = null;\n            while (i--) {\n                node = curr_nodes[i];\n                if (curr_depth < target_depth) {\n                    if (!node.expanded) {\n                        _this.expand_node(node);\n                    }\n                    _this.expand_to_depth(target_depth, node.children, curr_depth + 1);\n                }\n                if (curr_depth === target_depth) {\n                    if (node.expanded) {\n                        _this.collapse_node(node);\n                    }\n                }\n            }\n        };\n        this.part_layout = function (node) {\n            var root = _this.tsm.mind.root;\n            if (!!root) {\n                var root_layout_data = root.layout_data;\n                if (!root_layout_data)\n                    return;\n                if (node.isroot) {\n                    root_layout_data.right_nodes && (root_layout_data.outer_height_right = _this._layout_offset_subnodes_height(root_layout_data.right_nodes));\n                    root_layout_data.left_nodes && (root_layout_data.outer_height_left = _this._layout_offset_subnodes_height(root_layout_data.left_nodes));\n                }\n                else {\n                    if (node.layout_data.direction === __1[\"default\"].direction.right) {\n                        root_layout_data.right_nodes && (root_layout_data.outer_height_right = _this._layout_offset_subnodes_height(root_layout_data.right_nodes));\n                    }\n                    else {\n                        root_layout_data.left_nodes && (root_layout_data.outer_height_left = _this._layout_offset_subnodes_height(root_layout_data.left_nodes));\n                    }\n                }\n                _this.bounds.s = Math.max(root_layout_data.outer_height_left, root_layout_data.outer_height_right);\n                _this.cache_valid = false;\n            }\n            else {\n                tools_1.$logger.warn(\"can not found root node\");\n            }\n        };\n        this.set_visible = function (nodes, visible) {\n            var i = nodes.length;\n            var node = null;\n            // let layout_data: any;\n            while (i--) {\n                node = nodes[i];\n                // layout_data = node.layout_data;\n                if (node.expanded) {\n                    _this.set_visible(node.children, visible);\n                }\n                else {\n                    _this.set_visible(node.children, false);\n                }\n                if (!node.isroot) {\n                    node.layout_data.visible = visible;\n                }\n            }\n        };\n        this.is_expand = function (node) {\n            return node.expanded;\n        };\n        this.is_visible = function (node) {\n            return !!node.layout_data.visible;\n        };\n        this.opts = options;\n        this.tsm = tsm;\n        this.isside = this.opts.mode === \"side\";\n        this.cache_valid = false;\n        tools_1.$logger.debug(\"layout.init\");\n    }\n    return layout_provider;\n}());\nexports[\"default\"] = layout_provider;\n","\"use strict\";\nexports.__esModule = true;\nvar tools_1 = require(\"../../util/tools\");\nvar dom_1 = require(\"../../util/dom\");\nvar __1 = require(\"..\");\nvar text_1 = require(\"../../util/text\");\nvar array_1 = require(\"../../util/array\");\nvar canvas_1 = require(\"../../util/canvas\");\nvar constants_1 = require(\"../../util/constants\");\nvar view_provider = /** @class */ (function () {\n    function view_provider(tsm, options) {\n        var _this = this;\n        this.e_panel = tools_1.$doc.createElement(\"div\");\n        this.e_nodes = tools_1.$doc.createElement(constants_1.TSM_Node_Names.nodes);\n        this.e_canvas = tools_1.$doc.createElement(\"canvas\");\n        this.e_editor = tools_1.$doc.createElement(\"input\");\n        this.canvas_ctx = this.e_canvas.getContext(\"2d\");\n        this.size = { w: 0, h: 0 };\n        this.selected_node = null;\n        this.editing_node = null;\n        // view zoom\n        this.actualZoom = 1;\n        this.zoomStep = 0.1;\n        this.minZoom = 0.5;\n        this.maxZoom = 2;\n        this.add_event = function (obj, event_name, event_handle) {\n            _this.e_nodes &&\n                dom_1.dom.add_event(_this.e_nodes, event_name, function (e) {\n                    var evt = e || event;\n                    event_handle.call(obj, evt);\n                });\n        };\n        this.is_expander = function (element) {\n            return element.tagName.toLowerCase() === constants_1.TSM_Node_Names.fold;\n        };\n        this.reset = function () {\n            tools_1.$logger.debug(\"view.reset\");\n            _this.selected_node = null;\n            _this.clear_lines();\n            _this.clear_nodes();\n            _this.reset_theme();\n        };\n        this.reset_theme = function () {\n            var theme_name = _this.tsm.options.theme;\n            if (!!theme_name) {\n                _this.e_nodes.className = \"theme-\" + theme_name;\n            }\n            else {\n                _this.e_nodes.className = \"\";\n            }\n        };\n        this.reset_custom_style = function () {\n            var nodes = _this.tsm.mind.nodes;\n            for (var nodeid in nodes) {\n                if (nodeid)\n                    _this.reset_node_custom_style(nodes[nodeid]);\n            }\n        };\n        this.load = function () {\n            tools_1.$logger.debug(\"view.load\");\n            _this.init_nodes();\n        };\n        this.expand_size = function () {\n            var min_size = _this.layout.get_min_size();\n            if (!min_size)\n                return;\n            var min_height = min_size.h + _this.opts.vmargin * 2;\n            var min_width = min_size.w + _this.opts.hmargin * 2;\n            var client_w = _this.e_panel.clientWidth || 0;\n            var client_h = _this.e_panel.clientHeight || 0;\n            if (client_w < min_width) {\n                client_w = min_width;\n            }\n            if (client_h < min_height) {\n                client_h = min_height;\n            }\n            _this.size.w = client_w;\n            _this.size.h = client_h;\n        };\n        this.init_nodes_size = function (node) {\n            if (!node.view_data.element)\n                return;\n            node.view_data.width = node.view_data.element.clientWidth;\n            node.view_data.height = node.view_data.element.clientHeight;\n        };\n        this.init_nodes = function () {\n            var nodes = _this.tsm.mind.nodes;\n            var doc_frag = tools_1.$doc.createDocumentFragment();\n            for (var nodeid in nodes) {\n                if (nodeid)\n                    _this.create_node_element(nodes[nodeid], doc_frag);\n            }\n            _this.e_nodes.appendChild(doc_frag);\n            for (var nodeid in nodes) {\n                if (nodeid)\n                    _this.init_nodes_size(nodes[nodeid]);\n            }\n        };\n        this.add_node = function (node) {\n            _this.create_node_element(node, _this.e_nodes);\n            _this.init_nodes_size(node);\n        };\n        this.create_node_element = function (node, parent_node) {\n            var d = tools_1.$doc.createElement(constants_1.TSM_Node_Names.node);\n            if (node.isroot) {\n                d.className = \"root\";\n                // d.style.visibility = \"visible\";\n            }\n            else {\n                var d_e = tools_1.$doc.createElement(constants_1.TSM_Node_Names.fold);\n                tools_1.$pushText(d_e, \"-\");\n                d_e.setAttribute(\"nodeid\", node.id);\n                d_e.style.visibility = \"hidden\";\n                parent_node.appendChild(d_e);\n                node.view_data.expander = d_e;\n            }\n            if (!!node.topic) {\n                if (_this.opts.support_html) {\n                    tools_1.$pushChild(d, node.topic);\n                }\n                else {\n                    tools_1.$pushText(d, node.topic);\n                }\n            }\n            d.setAttribute(\"nodeid\", node.id);\n            // d.style.visibility = \"hidden\";\n            _this._reset_node_custom_style(d, node.data);\n            parent_node.appendChild(d);\n            node.view_data.element = d;\n        };\n        this.remove_node = function (node) {\n            if (_this.selected_node != null && _this.selected_node.id === node.id) {\n                _this.selected_node = null;\n            }\n            if (_this.editing_node !== null && _this.editing_node.id === node.id && node.view_data.element) {\n                node.view_data.element.removeChild(_this.e_editor);\n                _this.editing_node = null;\n            }\n            var children = node.children;\n            var i = children.length;\n            while (i--) {\n                _this.remove_node(children[i]);\n            }\n            var element = node.view_data.element;\n            var expander = node.view_data.expander;\n            if (_this.e_nodes) {\n                element && _this.e_nodes.removeChild(element);\n                expander && _this.e_nodes.removeChild(expander);\n                node.view_data.element = null;\n                node.view_data.expander = null;\n            }\n        };\n        this.update_node = function (node) {\n            var element = node.view_data.element;\n            if (!!node.topic) {\n                if (_this.opts.support_html) {\n                    tools_1.$pushChild(element, node.topic);\n                }\n                else {\n                    tools_1.$pushText(element, node.topic);\n                }\n            }\n            node.view_data.width = element.clientWidth;\n            node.view_data.height = element.clientHeight;\n        };\n        this.select_node = function (node) {\n            if (!node || !_this.selected_node)\n                return;\n            var selected_node_ele = _this.selected_node.view_data.element;\n            var node_ele = node.view_data.element;\n            if (!!selected_node_ele) {\n                selected_node_ele.className = selected_node_ele.className.replace(/\\s*selected\\b/i, \"\");\n                _this.reset_node_custom_style(_this.selected_node);\n            }\n            if (!!node && !!node_ele) {\n                _this.selected_node = node;\n                node_ele.className += \" selected\";\n                _this.clear_node_custom_style(node);\n            }\n        };\n        this.select_clear = function () {\n            _this.select_node(null);\n        };\n        this.get_editing_node = function () {\n            return _this.editing_node;\n        };\n        this.is_editing = function () {\n            return !!_this.editing_node;\n        };\n        this.edit_node_begin = function (node) {\n            if (!node.topic) {\n                tools_1.$logger.warn(\"don't edit image nodes\");\n                return;\n            }\n            if (_this.editing_node != null) {\n                _this.edit_node_end();\n            }\n            _this.editing_node = node;\n            var element = node.view_data.element;\n            if (!element)\n                return;\n            var topic = node.topic;\n            var ncs = getComputedStyle(element);\n            _this.e_editor.value = topic;\n            _this.e_editor.style.width =\n                element.clientWidth - parseInt(ncs.getPropertyValue(\"padding-left\"), 10) - parseInt(ncs.getPropertyValue(\"padding-right\"), 10) + \"px\";\n            element.innerHTML = \"\";\n            element.appendChild(_this.e_editor);\n            element.style.zIndex = \"5\";\n            _this.e_editor.focus();\n            _this.e_editor.select();\n        };\n        this.edit_node_end = function () {\n            if (_this.editing_node != null) {\n                var node = _this.editing_node;\n                _this.editing_node = null;\n                var element = node.view_data.element;\n                var topic = _this.e_editor.value;\n                element.style.zIndex = \"auto\";\n                element.removeChild(_this.e_editor);\n                if (text_1.text.is_empty(topic) || node.topic === topic) {\n                    if (_this.opts.support_html) {\n                        tools_1.$pushChild(element, node.topic);\n                    }\n                    else {\n                        tools_1.$pushText(element, node.topic);\n                    }\n                }\n                else {\n                    _this.tsm.update_node(node.id, topic);\n                }\n            }\n        };\n        this.get_view_offset = function () {\n            var bounds = _this.layout.bounds;\n            return { x: (_this.size.w - bounds.e - bounds.w) / 2, y: _this.size.h / 2 };\n        };\n        this.resize = function () {\n            _this.e_canvas.width = 1;\n            _this.e_canvas.height = 1;\n            _this.e_nodes.style.width = \"1px\";\n            _this.e_nodes.style.height = \"1px\";\n            _this.expand_size();\n            _this._show();\n        };\n        this._show = function () {\n            _this.e_canvas.width = _this.size.w;\n            _this.e_canvas.height = _this.size.h;\n            _this.e_nodes.style.width = _this.size.w + \"px\";\n            _this.e_nodes.style.height = _this.size.h + \"px\";\n            _this.show_nodes();\n            _this.show_lines();\n            // this.layout.cache_valid = true;\n            _this.tsm.invoke_event_handle(__1.TSMindEventTypeMap.resize, { data: [] });\n        };\n        this.zoomIn = function () {\n            return _this.setZoom(_this.actualZoom + _this.zoomStep);\n        };\n        this.zoomOut = function () {\n            return _this.setZoom(_this.actualZoom - _this.zoomStep);\n        };\n        this.setZoom = function (zoom) {\n            if (zoom < _this.minZoom || zoom > _this.maxZoom) {\n                return false;\n            }\n            _this.actualZoom = zoom;\n            var _children = array_1._slice.call(_this.e_panel.children);\n            for (var _i = 0, _children_1 = _children; _i < _children_1.length; _i++) {\n                var child = _children_1[_i];\n                child.style.transform = \"scale(\" + zoom + \")\";\n            }\n            _this.show(true);\n            return true;\n        };\n        this._center_root = function () {\n            // center root node\n            var outer_w = _this.e_panel.clientWidth;\n            var outer_h = _this.e_panel.clientHeight;\n            if (_this.size.w > outer_w) {\n                var _offset = _this.get_view_offset();\n                _this.e_panel.scrollLeft = _offset.x - outer_w / 2;\n            }\n            if (_this.size.h > outer_h) {\n                _this.e_panel.scrollTop = (_this.size.h - outer_h) / 2;\n            }\n        };\n        this.show = function (keep_center) {\n            tools_1.$logger.debug(\"view.show\");\n            _this.expand_size();\n            _this._show();\n            if (keep_center) {\n                _this._center_root();\n            }\n        };\n        this.relayout = function () {\n            _this.expand_size();\n            _this._show();\n        };\n        this.save_location = function (node) {\n            var vd = node.view_data;\n            if (vd)\n                vd._saved_location = {\n                    x: Number(vd.element.style.left) - _this.e_panel.scrollLeft,\n                    y: Number(vd.element.style.top) - _this.e_panel.scrollTop\n                };\n        };\n        this.restore_location = function (node) {\n            var vd = node.view_data;\n            if (vd && vd.element) {\n                var _ele = vd.element;\n                _this.e_panel.scrollLeft = Number(_ele.style.left) - vd._saved_location.x;\n                _this.e_panel.scrollTop = Number(vd.element.style.top) - vd._saved_location.y;\n            }\n        };\n        this.clear_nodes = function () {\n            var mind = _this.tsm.mind;\n            if (mind == null) {\n                return;\n            }\n            var nodes = mind.nodes;\n            var node = null;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                node.view_data.element = null;\n                node.view_data.expander = null;\n            }\n            _this.e_nodes.innerHTML = \"\";\n        };\n        this.show_nodes = function () {\n            var nodes = _this.tsm.mind.nodes;\n            var _offset = _this.get_view_offset();\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                var node = nodes[nodeid];\n                tools_1.$logger.log(node);\n                var node_element = node.view_data.element;\n                var expander = node.view_data.expander;\n                if (!node_element)\n                    continue;\n                if (!_this.layout.is_visible(node)) {\n                    node_element.style.display = \"none\";\n                    expander.style.display = \"none\";\n                    continue;\n                }\n                _this.reset_node_custom_style(node);\n                var p = _this.layout.get_node_point(node);\n                node.view_data.abs_x = _offset.x + p.x;\n                node.view_data.abs_y = _offset.y + p.y;\n                node_element.style.left = node.view_data.abs_x + \"px\";\n                node_element.style.top = node.view_data.abs_y + \"px\";\n                node_element.style.display = \"\";\n                node_element.style.visibility = \"visible\";\n                //\n                if (!node.isroot && node.children.length > 0) {\n                    var expander_text = node.expanded ? \"-\" : \"+\";\n                    var p_expander = _this.layout.get_expander_point(node);\n                    if (expander) {\n                        expander.style.left = _offset.x + p_expander.x + \"px\";\n                        expander.style.top = _offset.y + p_expander.y + \"px\";\n                        expander.style.display = \"\";\n                        expander.style.visibility = \"visible\";\n                        tools_1.$pushText(expander, expander_text);\n                    }\n                }\n                // hide expander while all children have been removed\n                if (!node.isroot && node.children.length === 0 && expander) {\n                    expander.style.display = \"none\";\n                    expander.style.visibility = \"hidden\";\n                }\n            }\n        };\n        this.reset_node_custom_style = function (node) {\n            _this._reset_node_custom_style(node.view_data.element, node.data);\n        };\n        this._reset_node_custom_style = function (node_element, node_data) {\n            if (\"background-color\" in node_data) {\n                node_element.style.backgroundColor = node_data[\"background-color\"];\n            }\n            if (\"foreground-color\" in node_data) {\n                node_element.style.color = node_data[\"foreground-color\"];\n            }\n            if (\"width\" in node_data) {\n                node_element.style.width = node_data.width + \"px\";\n            }\n            if (\"height\" in node_data) {\n                node_element.style.height = node_data.height + \"px\";\n            }\n            if (\"font-size\" in node_data) {\n                node_element.style.fontSize = node_data[\"font-size\"] + \"px\";\n            }\n            if (\"font-weight\" in node_data) {\n                node_element.style.fontWeight = node_data[\"font-weight\"];\n            }\n            if (\"font-style\" in node_data) {\n                node_element.style.fontStyle = node_data[\"font-style\"];\n            }\n            if (\"background-image\" in node_data) {\n                var backgroundImage = node_data[\"background-image\"];\n                if (backgroundImage.startsWith(\"data\") && node_data.width && node_data.height) {\n                    var img = new Image();\n                    img.onload = function () {\n                        var c = tools_1.$doc.createElement(\"canvas\");\n                        c.width = node_element.clientWidth;\n                        c.height = node_element.clientHeight;\n                        var img = this;\n                        if (c.getContext) {\n                            var ctx = c.getContext(\"2d\");\n                            ctx.drawImage(img, 2, 2, node_element.clientWidth, node_element.clientHeight);\n                            var scaledImageData = c.toDataURL();\n                            node_element.style.backgroundImage = \"url(\" + scaledImageData + \")\";\n                        }\n                    };\n                    img.src = backgroundImage;\n                }\n                else {\n                    node_element.style.backgroundImage = \"url(\" + backgroundImage + \")\";\n                }\n                node_element.style.backgroundSize = \"99%\";\n                if (\"background-rotation\" in node_data) {\n                    node_element.style.transform = \"rotate(\" + node_data[\"background-rotation\"] + \"deg)\";\n                }\n            }\n        };\n        this.clear_node_custom_style = function (node) {\n            var node_element = node.view_data.element;\n            if (node_element) {\n                node_element.style.backgroundColor = \"\";\n                node_element.style.color = \"\";\n            }\n        };\n        this.clear_lines = function (canvas_ctx) {\n            if (canvas_ctx === void 0) { canvas_ctx = _this.canvas_ctx; }\n            canvas_1.canvas.clear(canvas_ctx, 0, 0, _this.size.w, _this.size.h);\n        };\n        this.show_lines = function (canvas_ctx) {\n            if (canvas_ctx === void 0) { canvas_ctx = _this.canvas_ctx; }\n            _this.clear_lines(canvas_ctx);\n            var nodes = _this.tsm.mind.nodes;\n            var node = null;\n            var pin = null;\n            var pout = null;\n            var _offset = _this.get_view_offset();\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                node = nodes[nodeid];\n                if (!!node.isroot) {\n                    continue;\n                }\n                if (\"visible\" in node.layout_data && !node.layout_data.visible) {\n                    continue;\n                }\n                pin = _this.layout.get_node_point_in(node);\n                pout = _this.layout.get_node_point_out(node.parent);\n                _this.draw_line(pout, pin, _offset, canvas_ctx);\n            }\n        };\n        this.draw_line = function (pin, pout, offset, canvas_ctx) {\n            if (canvas_ctx === void 0) { canvas_ctx = _this.canvas_ctx; }\n            canvas_ctx.strokeStyle = _this.opts.line_color;\n            canvas_ctx.lineWidth = _this.opts.line_width;\n            canvas_ctx.lineCap = \"round\";\n            canvas_1.canvas.bezierto(canvas_ctx, pin.x + offset.x, pin.y + offset.y, pout.x + offset.x, pout.y + offset.y);\n        };\n        this.opts = options;\n        this.tsm = tsm;\n        this.layout = tsm.layout_provider;\n        tools_1.$logger.debug(\"view.init\");\n        this.container = tools_1.$isEl(this.opts.container) ? this.opts.container : tools_1.$elByID(this.opts.container);\n        if (!this.container) {\n            tools_1.$logger.error(\"the options.view.container was not be found in dom\");\n            return;\n        }\n        this.e_panel.className = \"jsmind-inner\";\n        this.e_panel.appendChild(this.e_canvas);\n        this.e_panel.appendChild(this.e_nodes);\n        this.e_editor.className = \"jsmind-editor\";\n        this.e_editor.type = \"text\";\n        var v = this;\n        dom_1.dom.add_event(this.e_editor, \"keydown\", function (e) {\n            var evt = e || event;\n            if (evt.keyCode === 13) {\n                v.edit_node_end();\n                evt.stopPropagation();\n            }\n        });\n        dom_1.dom.add_event(this.e_editor, \"blur\", function () {\n            v.edit_node_end();\n        });\n        this.container.appendChild(this.e_panel);\n    }\n    view_provider.prototype.get_binded_nodeid = function (element) {\n        if (element == null) {\n            return null;\n        }\n        var tagName = element.tagName.toLowerCase();\n        if (tagName === constants_1.TSM_Node_Names.nodes || tagName === \"body\" || tagName === \"html\") {\n            return null;\n        }\n        if (tagName === constants_1.TSM_Node_Names.node || tagName === constants_1.TSM_Node_Names.fold) {\n            return element.getAttribute(\"nodeid\");\n        }\n        else if (element.parentElement) {\n            return this.get_binded_nodeid(element.parentElement);\n        }\n        return null;\n    };\n    return view_provider;\n}());\nexports[\"default\"] = view_provider;\n","\"use strict\";\nexports.__esModule = true;\nvar dom_1 = require(\"../../util/dom\");\nvar tools_1 = require(\"../../util/tools\");\nvar __1 = require(\"..\");\nvar util_1 = require(\"../../util\");\nvar shortcut_provider = /** @class */ (function () {\n    function shortcut_provider(tsm, options) {\n        var _this = this;\n        this._mapping = {};\n        this.enable_shortcut = function () {\n            _this.opts.enable = true;\n        };\n        this.disable_shortcut = function () {\n            _this.opts.enable = false;\n        };\n        this.handler = function (e) {\n            if (e === void 0) { e = event; }\n            if (_this.tsm.view_provider.is_editing()) {\n                return;\n            }\n            if (!_this.opts.enable) {\n                return true;\n            }\n            var kc = e.keyCode;\n            if (kc in _this._mapping) {\n                _this._mapping[kc].call(_this, _this.tsm, e);\n            }\n        };\n        this.handle_addchild = function (tsm) {\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                var nodeid = util_1[\"default\"].uuid.newid();\n                var node = tsm.add_node(selected_node, nodeid, \"New Node\");\n                if (!!node) {\n                    tsm.select_node(nodeid);\n                    tsm.begin_edit(nodeid);\n                }\n            }\n        };\n        this.handle_addbrother = function (tsm) {\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node && !selected_node.isroot) {\n                var nodeid = util_1[\"default\"].uuid.newid();\n                var node = tsm.insert_node_after(selected_node, nodeid, \"New Node\");\n                if (!!node) {\n                    tsm.select_node(nodeid);\n                    tsm.begin_edit(nodeid);\n                }\n            }\n        };\n        this.handle_editnode = function (tsm) {\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                tsm.begin_edit(selected_node);\n            }\n        };\n        this.handle_delnode = function (tsm) {\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node && !selected_node.isroot) {\n                tsm.select_node(selected_node.parent);\n                tsm.remove_node(selected_node);\n            }\n        };\n        this.handle_toggle = function (tsm, e) {\n            if (e === void 0) { e = event; }\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                tsm.toggle_node(selected_node.id);\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        };\n        this.handle_up = function (tsm, e) {\n            if (e === void 0) { e = event; }\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                var up_node = tsm.find_node_before(selected_node);\n                if (!up_node) {\n                    var np = tsm.find_node_before(selected_node.parent);\n                    if (!!np && np.children.length > 0) {\n                        up_node = np.children[np.children.length - 1];\n                    }\n                }\n                if (!!up_node) {\n                    tsm.select_node(up_node);\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        };\n        this.handle_down = function (tsm, e) {\n            if (e === void 0) { e = event; }\n            var selected_node = tsm.get_selected_node();\n            if (!!selected_node) {\n                var down_node = tsm.find_node_after(selected_node);\n                if (!down_node) {\n                    var np = tsm.find_node_after(selected_node.parent);\n                    if (!!np && np.children.length > 0) {\n                        down_node = np.children[0];\n                    }\n                }\n                if (!!down_node) {\n                    tsm.select_node(down_node);\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        };\n        this.handle_left = function (tsm, e) {\n            _this._handle_direction(tsm, e, __1[\"default\"].direction.left);\n        };\n        this.handle_right = function (tsm, e) {\n            _this._handle_direction(tsm, e, __1[\"default\"].direction.right);\n        };\n        this._handle_direction = function (tsm, e, d) {\n            if (e === void 0) { e = event; }\n            var selected_node = tsm.get_selected_node();\n            var node = null;\n            if (!!selected_node) {\n                if (selected_node.isroot) {\n                    var c = selected_node.children;\n                    var children = [];\n                    for (var i = 0; i < c.length; i++) {\n                        if (c[i].direction === d) {\n                            children.push(i);\n                        }\n                    }\n                    node = c[children[Math.floor((children.length - 1) / 2)]];\n                }\n                else if (selected_node.direction === d) {\n                    var children = selected_node.children;\n                    var childrencount = children.length;\n                    if (childrencount > 0) {\n                        node = children[Math.floor((childrencount - 1) / 2)];\n                    }\n                }\n                else {\n                    node = selected_node.parent;\n                }\n                if (!!node) {\n                    tsm.select_node(node);\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        };\n        this.tsm = tsm;\n        this.opts = options;\n        this.mapping = options.mapping;\n        this.handles = options.handles;\n        dom_1.dom.add_event(tools_1.$doc, \"keydown\", this.handler.bind(this));\n        this.handles.addchild = this.handle_addchild;\n        this.handles.addbrother = this.handle_addbrother;\n        this.handles.editnode = this.handle_editnode;\n        this.handles.delnode = this.handle_delnode;\n        this.handles.toggle = this.handle_toggle;\n        this.handles.up = this.handle_up;\n        this.handles.down = this.handle_down;\n        this.handles.left = this.handle_left;\n        this.handles.right = this.handle_right;\n        for (var handle in this.mapping) {\n            if (!!this.mapping[handle] && handle in this.handles) {\n                this._mapping[this.mapping[handle]] = this.handles[handle];\n            }\n        }\n    }\n    return shortcut_provider;\n}());\nexports[\"default\"] = shortcut_provider;\n","\"use strict\";\nexports.__esModule = true;\nvar draggable_1 = require(\"./draggable\");\nvar screenshot_1 = require(\"./screenshot\");\n// global plugin list\nexports.GLOBAl_PLUGIN_LIST = {};\n/**\n * register global plugin list\n * @param initializer: ITSMPlugin\n */\nfunction globalUse(pname, initializer) {\n    exports.GLOBAl_PLUGIN_LIST[pname] = initializer;\n}\nexports.globalUse = globalUse;\nexports[\"default\"] = globalUse;\n// global regiter drag support\nglobalUse(\"draggable\", draggable_1[\"default\"]);\nglobalUse(\"screenshot\", screenshot_1[\"default\"]);\n","\"use strict\";\nexports.__esModule = true;\nvar __1 = require(\"..\");\nvar tools_1 = require(\"../../util/tools\");\nvar constants_1 = require(\"../../util/constants\");\nvar canvas_1 = require(\"../../util/canvas\");\nvar dom_1 = require(\"../../util/dom\");\nvar node_1 = require(\"../node\");\nvar dragOptions = {\n    line_width: 5,\n    lookup_delay: 500,\n    lookup_interval: 80\n};\nvar clear_selection = \"getSelection\" in window\n    ? function () {\n        window.getSelection().removeAllRanges();\n    }\n    : function () {\n        document.selection.empty();\n    };\nvar draggable = /** @class */ (function () {\n    function draggable(tsm, opts) {\n        var _this = this;\n        this.e_canvas = null;\n        this.canvas_ctx = null;\n        this.shadow = null;\n        this.shadow_w = 0;\n        this.shadow_h = 0;\n        this.active_node = null;\n        this.target_node = null;\n        this.target_direct = null;\n        this.client_w = 0;\n        this.client_h = 0;\n        this.client_hw = 0;\n        this.client_hh = 0;\n        this.offset_x = 0;\n        this.offset_y = 0;\n        // private set\n        // whether tag the drag-event has begun!\n        this._drag_begun = false;\n        this._drag_moved = false;\n        this.resize = function () {\n            _this.shadow && _this.tsm.view_provider.e_nodes.appendChild(_this.shadow);\n            _this.e_canvas.width = _this.tsm.view_provider.size.w;\n            _this.e_canvas.height = _this.tsm.view_provider.size.h;\n        };\n        this._create_canvas = function () {\n            var c = tools_1.$doc.createElement(\"canvas\");\n            c.width = Number(_this.tsm.view_provider.e_panel.clientWidth);\n            c.height = Number(_this.tsm.view_provider.e_panel.clientHeight);\n            _this.tsm.view_provider.e_panel.appendChild(c);\n            var ctx = c.getContext(\"2d\");\n            _this.e_canvas = c;\n            _this.canvas_ctx = ctx;\n        };\n        this._create_shadow = function () {\n            var s = tools_1.$doc.createElement(constants_1.TSM_Node_Names.node);\n            s.style.visibility = \"hidden\";\n            s.style.zIndex = \"3\";\n            s.style.cursor = \"move\";\n            s.style.opacity = \"0.7\";\n            _this.shadow = s;\n            _this.tsm.view_provider.e_panel.appendChild(s);\n        };\n        this.reset_shadow = function (el) {\n            if (!_this.shadow)\n                return;\n            var s = _this.shadow.style;\n            _this.shadow.innerHTML = el.innerHTML;\n            s.left = el.style.left;\n            s.top = el.style.top;\n            s.width = el.style.width;\n            s.height = el.style.height;\n            s.backgroundImage = el.style.backgroundImage;\n            s.backgroundSize = el.style.backgroundSize;\n            s.transform = el.style.transform;\n            _this.shadow_w = _this.shadow.clientWidth;\n            _this.shadow_h = _this.shadow.clientHeight;\n        };\n        this.show_shadow = function () {\n            if (!_this._drag_moved && _this.shadow) {\n                _this.shadow.style.visibility = \"visible\";\n            }\n        };\n        this.hide_shadow = function () {\n            _this.shadow.style.visibility = \"hidden\";\n        };\n        this.clear_lines = function () {\n            _this.canvas_ctx && canvas_1.canvas.clear(_this.canvas_ctx, 0, 0, _this.tsm.view_provider.size.w, _this.tsm.view_provider.size.h);\n        };\n        this._magnet_shadow = function (node) {\n            if (!!node && !!_this.canvas_ctx) {\n                _this.canvas_ctx.lineWidth = dragOptions.line_width;\n                _this.canvas_ctx.strokeStyle = \"rgba(0,0,0,0.3)\";\n                _this.canvas_ctx.lineCap = \"round\";\n                _this.clear_lines();\n                canvas_1.canvas.lineto(_this.canvas_ctx, node.sp.x, node.sp.y, node.np.x, node.np.y);\n            }\n        };\n        this._lookup_close_node = function () {\n            var root = _this.tsm.get_root();\n            if (!root)\n                return null;\n            var root_location = root.get_location();\n            var root_size = root.get_size();\n            var root_x = root_location.x + root_size.w / 2;\n            // console.info(root_location);\n            var sw = _this.shadow_w;\n            var sh = _this.shadow_h;\n            var sx = _this.shadow.offsetLeft || 0;\n            var sy = _this.shadow.offsetTop || 0;\n            var ns;\n            var nl;\n            var direct = sx + sw / 2 >= root_x ? __1[\"default\"].direction.right : __1[\"default\"].direction.left;\n            var nodes = _this.tsm.mind.nodes;\n            if (!nodes)\n                return null;\n            var node = null;\n            var min_distance = Number.MAX_VALUE;\n            var distance = 0;\n            var closest_node = null;\n            var closest_p = null;\n            var shadow_p = null;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                var np = void 0;\n                var sp = void 0;\n                node = nodes[nodeid];\n                if (node.isroot || node.direction === direct) {\n                    if (node.id === _this.active_node.id) {\n                        continue;\n                    }\n                    ns = node.get_size();\n                    nl = node.get_location();\n                    if (direct === __1[\"default\"].direction.right) {\n                        if (sx - nl.x - ns.w <= 0) {\n                            continue;\n                        }\n                        distance = Math.abs(sx - nl.x - ns.w) + Math.abs(sy + sh / 2 - nl.y - ns.h / 2);\n                        np = { x: nl.x + ns.w - dragOptions.line_width, y: nl.y + ns.h / 2 };\n                        sp = { x: sx + dragOptions.line_width, y: sy + sh / 2 };\n                    }\n                    else {\n                        if (nl.x - sx - sw <= 0) {\n                            continue;\n                        }\n                        distance = Math.abs(sx + sw - nl.x) + Math.abs(sy + sh / 2 - nl.y - ns.h / 2);\n                        np = { x: nl.x + dragOptions.line_width, y: nl.y + ns.h / 2 };\n                        sp = { x: sx + sw - dragOptions.line_width, y: sy + sh / 2 };\n                    }\n                    if (distance < min_distance) {\n                        closest_node = node;\n                        closest_p = np;\n                        shadow_p = sp;\n                        min_distance = distance;\n                    }\n                }\n            }\n            var result_node = null;\n            if (!!closest_node) {\n                result_node = {\n                    node: closest_node,\n                    direction: direct,\n                    sp: shadow_p,\n                    np: closest_p\n                };\n            }\n            return result_node;\n        };\n        // to ensure better draw-line performance\n        this.lookup_close_node = tools_1.$debounce(function () {\n            var node_data = _this._lookup_close_node();\n            if (!!node_data) {\n                _this._magnet_shadow(node_data);\n                _this.target_node = node_data.node;\n                _this.target_direct = node_data.direction;\n            }\n        });\n        this._event_bind = function () {\n            if (!_this.tsm.view_provider.container)\n                return;\n            var _self = _this;\n            var container = _this.tsm.view_provider.container;\n            dom_1.dom.add_event(container, \"mousedown\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.dragstart.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"mousemove\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.drag.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"mouseup\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.dragend.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"touchstart\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.dragstart.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"touchmove\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.drag.call(_self, e);\n            });\n            dom_1.dom.add_event(container, \"touchend\", function (e) {\n                if (e === void 0) { e = event; }\n                _self.dragend.call(_self, e);\n            });\n        };\n        this.dragstart = function (e) {\n            if (e === void 0) { e = event; }\n            if (_this._drag_begun) {\n                return;\n            }\n            if (!_this.tsm.get_editable()) {\n                return;\n            }\n            _this.active_node = null;\n            var tsview = _this.tsm.view_provider;\n            var el = (e.target || e.srcElement);\n            if (el.tagName.toLowerCase() !== constants_1.TSM_Node_Names.node) {\n                return;\n            }\n            var nodeid = tsview.get_binded_nodeid(el);\n            var isTouch = e.type.match(/^touch/);\n            if (!!nodeid) {\n                var node = _this.tsm.get_node(nodeid);\n                if (!!node && !node.isroot) {\n                    _this.reset_shadow(el);\n                    _this.active_node = node;\n                    var _client = (isTouch ? e.touches[0] : e);\n                    _this.offset_x = _client.clientX - el.offsetLeft;\n                    _this.offset_y = _client.clientY - el.offsetTop;\n                    _this.client_hw = Math.floor(el.clientWidth / 2);\n                    _this.client_hh = Math.floor(el.clientHeight / 2);\n                    // start to drag\n                    _this._drag_begun = true;\n                }\n            }\n        };\n        this.drag = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.tsm.get_editable()) {\n                return;\n            }\n            if (_this._drag_begun) {\n                var isTouch = e.type.match(/^touch/);\n                e.preventDefault();\n                _this.show_shadow();\n                _this._drag_moved = true;\n                clear_selection();\n                var _client = (isTouch ? e.touches[0] : e);\n                var px = _client.clientX - _this.offset_x;\n                var py = _client.clientY - _this.offset_y;\n                _this.shadow.style.left = px + \"px\";\n                _this.shadow.style.top = py + \"px\";\n                clear_selection();\n                _this.lookup_close_node();\n            }\n        };\n        this.dragend = function (e) {\n            if (e === void 0) { e = event; }\n            if (!_this.tsm.get_editable()) {\n                return;\n            }\n            if (_this._drag_begun) {\n                if (_this._drag_moved) {\n                    var src_node = _this.active_node;\n                    var target_node = _this.target_node;\n                    var target_direct = _this.target_direct;\n                    src_node && target_node && target_direct && _this.move_node(src_node, target_node, target_direct);\n                }\n                _this.hide_shadow();\n                _this.clear_lines();\n                _this._drag_moved = false;\n                _this._drag_begun = false;\n            }\n        };\n        this.move_node = function (src_node, target_node, target_direct) {\n            if (!_this.shadow)\n                return;\n            var shadow_h = _this.shadow.offsetTop;\n            if (!!target_node && !!src_node && !node_1.TSM_node.inherited(src_node, target_node)) {\n                // lookup before_node\n                var sibling_nodes = target_node.children;\n                var sc = sibling_nodes.length;\n                var node = null;\n                var delta_y = Number.MAX_VALUE;\n                var node_before = null;\n                var beforeid = \"_last_\";\n                while (sc--) {\n                    node = sibling_nodes[sc];\n                    if (node.direction === target_direct && node.id !== src_node.id) {\n                        var dy = node.get_location().y - shadow_h;\n                        if (dy > 0 && dy < delta_y) {\n                            delta_y = dy;\n                            node_before = node;\n                            beforeid = \"_first_\";\n                        }\n                    }\n                }\n                if (!!node_before) {\n                    beforeid = node_before.id;\n                }\n                _this.tsm.move_node(src_node.id, beforeid, target_node.id, target_direct);\n            }\n            _this.active_node = null;\n            _this.target_node = null;\n            _this.target_direct = null;\n        };\n        this.event_handle = function (type) {\n            if (type === __1[\"default\"].event_type.resize) {\n                _this.resize();\n            }\n        };\n        this.tsm = tsm;\n        this.options = opts;\n        tsm.add_event_listener(this.event_handle);\n        this._create_canvas();\n        this._create_shadow();\n        this._event_bind();\n    }\n    return draggable;\n}());\nexports[\"default\"] = draggable;\n","\"use strict\";\nexports.__esModule = true;\nvar __1 = require(\"..\");\nvar tools_1 = require(\"../../util/tools\");\nvar dom_1 = require(\"../../util/dom\");\nvar canvas_1 = require(\"../../util/canvas\");\nvar screenshot = /** @class */ (function () {\n    function screenshot(tsm, opts) {\n        var _this = this;\n        this.canvas_elem = null;\n        this.canvas_ctx = null;\n        this._inited = false;\n        this.shoot = function (callback) {\n            _this.init();\n            var scs = _this;\n            _this._draw(function () {\n                if (!!callback) {\n                    callback(scs);\n                }\n                scs.clean();\n            });\n            _this._watermark();\n        };\n        this.shootDownload = function () {\n            _this.shoot(function (scs) {\n                scs._download();\n            });\n        };\n        this.shootAsDataURL = function (callback) {\n            _this.shoot(function (scs) {\n                callback(scs.canvas_elem.toDataURL());\n            });\n        };\n        this.resize = function () {\n            if (_this._inited && _this.canvas_elem) {\n                _this.canvas_elem.width = _this.tsm.view_provider.size.w;\n                _this.canvas_elem.height = _this.tsm.view_provider.size.h;\n            }\n        };\n        this.clean = function () {\n            var c = _this.canvas_elem;\n            if (c && _this.canvas_ctx)\n                _this.canvas_ctx.clearRect(0, 0, c.width, c.height);\n        };\n        this._draw = function (callback) {\n            var ctx = _this.canvas_ctx;\n            if (!ctx)\n                return;\n            ctx.textAlign = \"left\";\n            ctx.textBaseline = \"top\";\n            _this._draw_lines();\n            _this._draw_nodes(callback);\n        };\n        this._watermark = function () {\n            var c = _this.canvas_elem;\n            var ctx = _this.canvas_ctx;\n            if (!c || !ctx)\n                return;\n            ctx.textAlign = \"right\";\n            ctx.textBaseline = \"bottom\";\n            ctx.fillStyle = \"#000\";\n            ctx.font = \"11px Verdana,Arial,Helvetica,sans-serif\";\n            ctx.fillText(\"hizzgdev.github.io/jsmind\", c.width - 5.5, c.height - 2.5);\n            ctx.textAlign = \"left\";\n            ctx.fillText(location.href, 5.5, c.height - 2.5);\n        };\n        this._draw_lines = function () {\n            _this.canvas_ctx && _this.tsm.view_provider.show_lines(_this.canvas_ctx);\n        };\n        this._draw_nodes = function (callback) {\n            var nodes = _this.tsm.mind.nodes;\n            for (var nodeid in nodes) {\n                if (!nodeid)\n                    continue;\n                var node = nodes[nodeid];\n                _this._draw_node(node);\n            }\n            function check_nodes_ready() {\n                console.log(\"check_node_ready\" + new Date());\n                var allOk = true;\n                for (var nodeid in nodes) {\n                    if (!nodeid)\n                        continue;\n                    var node = nodes[nodeid];\n                    allOk = allOk && node.expands.screen_shot_ready;\n                }\n                if (!allOk) {\n                    setTimeout(check_nodes_ready, 200);\n                }\n                else {\n                    setTimeout(callback, 200);\n                }\n            }\n            check_nodes_ready();\n        };\n        this._draw_node = function (node) {\n            var ctx = _this.canvas_ctx;\n            var view_data = node.view_data;\n            var node_element = view_data.element;\n            if (!node_element || !ctx)\n                return;\n            var ncs = getComputedStyle(node_element);\n            if (!dom_1.dom.is_visible(ncs)) {\n                node.expands.screen_shot_ready = true;\n                return;\n            }\n            var bgcolor = dom_1.dom.css(ncs, \"background-color\");\n            var round_radius = parseInt(dom_1.dom.css(ncs, \"border-top-left-radius\"), 10);\n            var color = dom_1.dom.css(ncs, \"color\");\n            var padding_left = parseInt(dom_1.dom.css(ncs, \"padding-left\"), 10);\n            var padding_right = parseInt(dom_1.dom.css(ncs, \"padding-right\"), 10);\n            var padding_top = parseInt(dom_1.dom.css(ncs, \"padding-top\"), 10);\n            var padding_bottom = parseInt(dom_1.dom.css(ncs, \"padding-bottom\"), 10);\n            var text_overflow = dom_1.dom.css(ncs, \"text-overflow\");\n            var font = dom_1.dom.css(ncs, \"font-style\") + \" \" + dom_1.dom.css(ncs, \"font-variant\") + \" \" + dom_1.dom.css(ncs, \"font-weight\") + \" \" + dom_1.dom.css(ncs, \"font-size\") + \"/\" + dom_1.dom.css(ncs, \"line-height\") + \" \" + dom_1.dom.css(ncs, \"font-family\");\n            var rb = { x: view_data.abs_x || 0, y: view_data.abs_y || 0, w: (view_data.width || 0) + 1, h: (view_data.height || 0) + 1 };\n            var tb = { x: rb.x + padding_left, y: rb.y + padding_top, w: rb.w - padding_left - padding_right, h: rb.h - padding_top - padding_bottom };\n            ctx.font = font;\n            ctx.fillStyle = bgcolor;\n            ctx.beginPath();\n            canvas_1.canvas.rect(ctx, rb.x, rb.y, rb.w, rb.h, round_radius);\n            ctx.closePath();\n            ctx.fill();\n            ctx.fillStyle = color;\n            if (\"background-image\" in node.data) {\n                var backgroundUrl = dom_1.dom.css(ncs, \"background-image\").slice(5, -2);\n                node.expands.screen_shot_ready = false;\n                var rotation = 0;\n                if (\"background-rotation\" in node.data) {\n                    rotation = node.data[\"background-rotation\"];\n                }\n                canvas_1.canvas.image(ctx, backgroundUrl, rb.x, rb.y, rb.w, rb.h, round_radius, rotation, function () {\n                    node.expands.screen_shot_ready = true;\n                });\n            }\n            if (!!node.topic) {\n                if (text_overflow === \"ellipsis\") {\n                    canvas_1.canvas.text_ellipsis(ctx, node.topic, tb.x, tb.y, tb.w, tb.h);\n                }\n                else {\n                    var line_height = parseInt(dom_1.dom.css(ncs, \"line-height\"), 10);\n                    canvas_1.canvas.text_multiline(ctx, node.topic, tb.x, tb.y, tb.w, tb.h, line_height);\n                }\n            }\n            if (!!view_data.expander) {\n                _this._draw_expander(view_data.expander);\n            }\n            if (!(\"background-image\" in node.data)) {\n                node.expands.screen_shot_ready = true;\n            }\n        };\n        this._draw_expander = function (expander) {\n            var ctx = _this.canvas_ctx;\n            var ncs = getComputedStyle(expander);\n            if (!dom_1.dom.is_visible(ncs) || !ctx) {\n                return;\n            }\n            var style_left = dom_1.dom.css(ncs, \"left\");\n            var style_top = dom_1.dom.css(ncs, \"top\");\n            // const font = dom.css(ncs, \"font\");\n            var left = parseInt(style_left, 10);\n            var top = parseInt(style_top, 10);\n            var is_plus = expander.innerHTML === \"+\";\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.arc(left + 7, top + 7, 5, 0, Math.PI * 2, true);\n            ctx.moveTo(left + 10, top + 7);\n            ctx.lineTo(left + 4, top + 7);\n            if (is_plus) {\n                ctx.moveTo(left + 7, top + 4);\n                ctx.lineTo(left + 7, top + 10);\n            }\n            ctx.closePath();\n            ctx.stroke();\n        };\n        this._download = function () {\n            var c = _this.canvas_elem;\n            if (!c)\n                return;\n            var name = _this.tsm.mind.name + \".png\";\n            var _toblob = !!c.toBlob || !!c.msToBlob;\n            if (navigator.msSaveBlob && _toblob) {\n                if (\"toBlob\" in c)\n                    c.toBlob(function (blob) {\n                        navigator.msSaveBlob(blob, name);\n                    });\n                else if (\"msToBlob\" in c) {\n                    var blob = c.msToBlob();\n                    navigator.msSaveBlob(blob, name);\n                }\n            }\n            else {\n                var bloburl = _this.canvas_elem.toDataURL();\n                var anchor = tools_1.$doc.createElement(\"a\");\n                if (\"download\" in anchor) {\n                    anchor.style.visibility = \"hidden\";\n                    anchor.href = bloburl;\n                    anchor.download = name;\n                    tools_1.$doc.body.appendChild(anchor);\n                    var evt = tools_1.$doc.createEvent(\"MouseEvents\");\n                    evt.initEvent(\"click\", true, true);\n                    anchor.dispatchEvent(evt);\n                    tools_1.$doc.body.removeChild(anchor);\n                }\n                else {\n                    location.href = bloburl;\n                }\n            }\n        };\n        this.event_handle = function (type) {\n            if (type === __1.TSMindEventTypeMap.resize) {\n                _this.resize();\n            }\n        };\n        this.tsm = tsm;\n        this.options = opts;\n        tsm.add_event_listener(this.event_handle);\n    }\n    screenshot.prototype.init = function () {\n        if (this._inited) {\n            return;\n        }\n        console.log(\"init\");\n        var c = tools_1.$doc.createElement(\"canvas\");\n        var ctx = c.getContext(\"2d\");\n        this.canvas_elem = c;\n        this.canvas_ctx = ctx;\n        this.tsm.view_provider.e_panel.appendChild(c);\n        this._inited = true;\n        this.resize();\n    };\n    return screenshot;\n}());\nexports[\"default\"] = screenshot;\n"],"sourceRoot":""}